using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace VipcoSageX3.Models.SageX3
{
    public partial class SageX3Context : DbContext
    {

        public SageX3Context(DbContextOptions<SageX3Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Atabdiv> Atabdiv { get; set; }
        public virtual DbSet<Atextra> Atextra { get; set; }
        public virtual DbSet<Bank> Bank { get; set; }
        public virtual DbSet<Bpartner> Bpartner { get; set; }
        public virtual DbSet<Bpcarrier> Bpcarrier { get; set; }
        public virtual DbSet<Bpsupplier> Bpsupplier { get; set; }
        public virtual DbSet<Cacce> Cacce { get; set; }
        public virtual DbSet<Coststcd> Coststcd { get; set; }
        public virtual DbSet<Cptanalin> Cptanalin { get; set; }
        public virtual DbSet<Facility> Facility { get; set; }
        public virtual DbSet<Gaccdudate> Gaccdudate { get; set; }
        public virtual DbSet<Gaccount> Gaccount { get; set; }
        public virtual DbSet<Itmbps> Itmbps { get; set; }
        public virtual DbSet<Itmcateg> Itmcateg { get; set; }
        public virtual DbSet<Itmfacilit> Itmfacilit { get; set; }
        public virtual DbSet<Itmmaster> Itmmaster { get; set; }
        public virtual DbSet<Itmmvt> Itmmvt { get; set; }
        public virtual DbSet<Paymentd> Paymentd { get; set; }
        public virtual DbSet<Paymenth> Paymenth { get; set; }
        public virtual DbSet<Porder> Porder { get; set; }
        public virtual DbSet<Porderp> Porderp { get; set; }
        public virtual DbSet<Porderq> Porderq { get; set; }
        public virtual DbSet<Ppreason> Ppreason { get; set; }
        public virtual DbSet<Preceipt> Preceipt { get; set; }
        public virtual DbSet<Preceiptd> Preceiptd { get; set; }
        public virtual DbSet<Prequis> Prequis { get; set; }
        public virtual DbSet<Prequisd> Prequisd { get; set; }
        public virtual DbSet<Prequiso> Prequiso { get; set; }
        public virtual DbSet<Preturnd> Preturnd { get; set; }
        public virtual DbSet<Pvcrfoot> Pvcrfoot { get; set; }
        public virtual DbSet<Pvcrvat> Pvcrvat { get; set; }
        public virtual DbSet<Smvtd> Smvtd { get; set; }
        public virtual DbSet<Sorder> Sorder { get; set; }
        public virtual DbSet<Stock> Stock { get; set; }
        public virtual DbSet<Stojou> Stojou { get; set; }
        public virtual DbSet<Stolot> Stolot { get; set; }
        public virtual DbSet<Tabcur> Tabcur { get; set; }
        public virtual DbSet<Tabmodeliv> Tabmodeliv { get; set; }
        public virtual DbSet<Tabpayterm> Tabpayterm { get; set; }
        public virtual DbSet<Tabunit> Tabunit { get; set; }
        public virtual DbSet<Tabvat> Tabvat { get; set; }
        public virtual DbSet<Texclob> Texclob { get; set; }
        public virtual DbSet<Uporder> Uporder { get; set; }
        public virtual DbSet<Uporderp> Uporderp { get; set; }
        public virtual DbSet<Uporderq> Uporderq { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Atabdiv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ATABDIV", "VIPCO");

                entity.HasIndex(e => new { e.Numtab0, e.Code0 })
                    .HasName("ATABDIV_CODE")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.A10)
                    .IsRequired()
                    .HasColumnName("A1_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A100)
                    .IsRequired()
                    .HasColumnName("A10_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A110)
                    .IsRequired()
                    .HasColumnName("A11_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A120)
                    .IsRequired()
                    .HasColumnName("A12_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A130)
                    .IsRequired()
                    .HasColumnName("A13_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A140)
                    .IsRequired()
                    .HasColumnName("A14_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A150)
                    .IsRequired()
                    .HasColumnName("A15_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A20)
                    .IsRequired()
                    .HasColumnName("A2_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A30)
                    .IsRequired()
                    .HasColumnName("A3_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A40)
                    .IsRequired()
                    .HasColumnName("A4_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A50)
                    .IsRequired()
                    .HasColumnName("A5_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A60)
                    .IsRequired()
                    .HasColumnName("A6_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A70)
                    .IsRequired()
                    .HasColumnName("A7_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A80)
                    .IsRequired()
                    .HasColumnName("A8_0")
                    .HasMaxLength(40);

                entity.Property(e => e.A90)
                    .IsRequired()
                    .HasColumnName("A9_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Code0)
                    .IsRequired()
                    .HasColumnName("CODE_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Defval0).HasColumnName("DEFVAL_0");

                entity.Property(e => e.Depcod0)
                    .IsRequired()
                    .HasColumnName("DEPCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Enaflg0).HasColumnName("ENAFLG_0");

                entity.Property(e => e.Leg0)
                    .IsRequired()
                    .HasColumnName("LEG_0")
                    .HasMaxLength(20);

                entity.Property(e => e.N10)
                    .HasColumnName("N1_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N100)
                    .HasColumnName("N10_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N110)
                    .HasColumnName("N11_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N120)
                    .HasColumnName("N12_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N130)
                    .HasColumnName("N13_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N140)
                    .HasColumnName("N14_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N150)
                    .HasColumnName("N15_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N20)
                    .HasColumnName("N2_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N30)
                    .HasColumnName("N3_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N40)
                    .HasColumnName("N4_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N50)
                    .HasColumnName("N5_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N60)
                    .HasColumnName("N6_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N70)
                    .HasColumnName("N7_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N80)
                    .HasColumnName("N8_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.N90)
                    .HasColumnName("N9_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Numtab0).HasColumnName("NUMTAB_0");

                entity.Property(e => e.Soc0)
                    .IsRequired()
                    .HasColumnName("SOC_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Atextra>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ATEXTRA", "VIPCO");

                entity.HasIndex(e => new { e.Langue0, e.Codfic0, e.Zone0 })
                    .HasName("ATEXTRA_AXX1");

                entity.HasIndex(e => new { e.Codfic0, e.Zone0, e.Langue0, e.Ident10, e.Ident20 })
                    .HasName("ATEXTRA_AXX0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Codfic0)
                    .IsRequired()
                    .HasColumnName("CODFIC_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ident10)
                    .IsRequired()
                    .HasColumnName("IDENT1_0")
                    .HasMaxLength(80);

                entity.Property(e => e.Ident20)
                    .IsRequired()
                    .HasColumnName("IDENT2_0")
                    .HasMaxLength(80);

                entity.Property(e => e.Langue0)
                    .IsRequired()
                    .HasColumnName("LANGUE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Lanori0)
                    .IsRequired()
                    .HasColumnName("LANORI_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Texte0)
                    .IsRequired()
                    .HasColumnName("TEXTE_0")
                    .HasMaxLength(80);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Zone0)
                    .IsRequired()
                    .HasColumnName("ZONE_0")
                    .HasMaxLength(12);
            });

            modelBuilder.Entity<Bank>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("BANK", "VIPCO");

                entity.HasIndex(e => e.Ban0)
                    .HasName("BANK_BAN0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acccod0)
                    .IsRequired()
                    .HasColumnName("ACCCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Acs0)
                    .IsRequired()
                    .HasColumnName("ACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Addlig0)
                    .IsRequired()
                    .HasColumnName("ADDLIG_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Addlig1)
                    .IsRequired()
                    .HasColumnName("ADDLIG_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Addlig2)
                    .IsRequired()
                    .HasColumnName("ADDLIG_2")
                    .HasMaxLength(35);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Ban0)
                    .IsRequired()
                    .HasColumnName("BAN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Banacc0)
                    .IsRequired()
                    .HasColumnName("BANACC_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Banbpr0)
                    .IsRequired()
                    .HasColumnName("BANBPR_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bancsh0).HasColumnName("BANCSH_0");

                entity.Property(e => e.Banfil0)
                    .IsRequired()
                    .HasColumnName("BANFIL_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bantra0)
                    .IsRequired()
                    .HasColumnName("BANTRA_0")
                    .HasMaxLength(9);

                entity.Property(e => e.Bantrm0)
                    .IsRequired()
                    .HasColumnName("BANTRM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Biccod0)
                    .IsRequired()
                    .HasColumnName("BICCOD_0")
                    .HasMaxLength(11);

                entity.Property(e => e.Bidexs0)
                    .IsRequired()
                    .HasColumnName("BIDEXS_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Bidnum0)
                    .IsRequired()
                    .HasColumnName("BIDNUM_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Bnkprobalctl0).HasColumnName("BNKPROBALCTL_0");

                entity.Property(e => e.Bsirefban0)
                    .IsRequired()
                    .HasColumnName("BSIREFBAN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bvrcustid0)
                    .IsRequired()
                    .HasColumnName("BVRCUSTID_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bvrnum0)
                    .IsRequired()
                    .HasColumnName("BVRNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Cfoexd0).HasColumnName("CFOEXD_0");

                entity.Property(e => e.Chgdat0)
                    .HasColumnName("CHGDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Chgtyp0).HasColumnName("CHGTYP_0");

                entity.Property(e => e.Chkacc0)
                    .IsRequired()
                    .HasColumnName("CHKACC_0")
                    .HasMaxLength(17);

                entity.Property(e => e.Chkcod0)
                    .IsRequired()
                    .HasColumnName("CHKCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Chkfmt0).HasColumnName("CHKFMT_0");

                entity.Property(e => e.Chqtypflg0).HasColumnName("CHQTYPFLG_0");

                entity.Property(e => e.Coa0)
                    .IsRequired()
                    .HasColumnName("COA_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Crn0)
                    .IsRequired()
                    .HasColumnName("CRN_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cry0)
                    .IsRequired()
                    .HasColumnName("CRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Crynam0)
                    .IsRequired()
                    .HasColumnName("CRYNAM_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Cty0)
                    .IsRequired()
                    .HasColumnName("CTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Curexs0)
                    .IsRequired()
                    .HasColumnName("CUREXS_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Deprat0)
                    .HasColumnName("DEPRAT_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Des0)
                    .IsRequired()
                    .HasColumnName("DES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Dessho0)
                    .IsRequired()
                    .HasColumnName("DESSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fax0)
                    .IsRequired()
                    .HasColumnName("FAX_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Fcy0)
                    .IsRequired()
                    .HasColumnName("FCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Filext0)
                    .IsRequired()
                    .HasColumnName("FILEXT_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Frmdudflg0).HasColumnName("FRMDUDFLG_0");

                entity.Property(e => e.Gte0)
                    .IsRequired()
                    .HasColumnName("GTE_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte1)
                    .IsRequired()
                    .HasColumnName("GTE_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte2)
                    .IsRequired()
                    .HasColumnName("GTE_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte3)
                    .IsRequired()
                    .HasColumnName("GTE_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte4)
                    .IsRequired()
                    .HasColumnName("GTE_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte5)
                    .IsRequired()
                    .HasColumnName("GTE_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte6)
                    .IsRequired()
                    .HasColumnName("GTE_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte7)
                    .IsRequired()
                    .HasColumnName("GTE_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte8)
                    .IsRequired()
                    .HasColumnName("GTE_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte9)
                    .IsRequired()
                    .HasColumnName("GTE_9")
                    .HasMaxLength(5);

                entity.Property(e => e.Ibacod0)
                    .IsRequired()
                    .HasColumnName("IBACOD_0")
                    .HasMaxLength(34);

                entity.Property(e => e.Jou0)
                    .IsRequired()
                    .HasColumnName("JOU_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Jou1)
                    .IsRequired()
                    .HasColumnName("JOU_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Jou2)
                    .IsRequired()
                    .HasColumnName("JOU_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Jou3)
                    .IsRequired()
                    .HasColumnName("JOU_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Jou4)
                    .IsRequired()
                    .HasColumnName("JOU_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Jou5)
                    .IsRequired()
                    .HasColumnName("JOU_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Jou6)
                    .IsRequired()
                    .HasColumnName("JOU_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Jou7)
                    .IsRequired()
                    .HasColumnName("JOU_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Jou8)
                    .IsRequired()
                    .HasColumnName("JOU_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Jou9)
                    .IsRequired()
                    .HasColumnName("JOU_9")
                    .HasMaxLength(5);

                entity.Property(e => e.Joutyp0).HasColumnName("JOUTYP_0");

                entity.Property(e => e.Joutyp1).HasColumnName("JOUTYP_1");

                entity.Property(e => e.Joutyp2).HasColumnName("JOUTYP_2");

                entity.Property(e => e.Joutyp3).HasColumnName("JOUTYP_3");

                entity.Property(e => e.Joutyp4).HasColumnName("JOUTYP_4");

                entity.Property(e => e.Joutyp5).HasColumnName("JOUTYP_5");

                entity.Property(e => e.Joutyp6).HasColumnName("JOUTYP_6");

                entity.Property(e => e.Joutyp7).HasColumnName("JOUTYP_7");

                entity.Property(e => e.Joutyp8).HasColumnName("JOUTYP_8");

                entity.Property(e => e.Joutyp9).HasColumnName("JOUTYP_9");

                entity.Property(e => e.Mcrprt0).HasColumnName("MCRPRT_0");

                entity.Property(e => e.Nbrjou0).HasColumnName("NBRJOU_0");

                entity.Property(e => e.Nxtseq0)
                    .IsRequired()
                    .HasColumnName("NXTSEQ_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Oldcur0)
                    .IsRequired()
                    .HasColumnName("OLDCUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pab10)
                    .IsRequired()
                    .HasColumnName("PAB1_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Pab20)
                    .IsRequired()
                    .HasColumnName("PAB2_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Pabdudflg0).HasColumnName("PABDUDFLG_0");

                entity.Property(e => e.Paytpy0)
                    .HasColumnName("PAYTPY_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Poscod0)
                    .IsRequired()
                    .HasColumnName("POSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Pospayfil0)
                    .IsRequired()
                    .HasColumnName("POSPAYFIL_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Reccpt0).HasColumnName("RECCPT_0");

                entity.Property(e => e.Sat0)
                    .IsRequired()
                    .HasColumnName("SAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Sctprolot0).HasColumnName("SCTPROLOT_0");

                entity.Property(e => e.Sennum0)
                    .IsRequired()
                    .HasColumnName("SENNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Sennum20)
                    .IsRequired()
                    .HasColumnName("SENNUM2_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Tel0)
                    .IsRequired()
                    .HasColumnName("TEL_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Treacc0)
                    .IsRequired()
                    .HasColumnName("TREACC_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Treacc1)
                    .IsRequired()
                    .HasColumnName("TREACC_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Treacc2)
                    .IsRequired()
                    .HasColumnName("TREACC_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Treacc3)
                    .IsRequired()
                    .HasColumnName("TREACC_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Treacc4)
                    .IsRequired()
                    .HasColumnName("TREACC_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Treacc5)
                    .IsRequired()
                    .HasColumnName("TREACC_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Treacc6)
                    .IsRequired()
                    .HasColumnName("TREACC_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Treacc7)
                    .IsRequired()
                    .HasColumnName("TREACC_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Treacc8)
                    .IsRequired()
                    .HasColumnName("TREACC_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Treacc9)
                    .IsRequired()
                    .HasColumnName("TREACC_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Trecod0)
                    .IsRequired()
                    .HasColumnName("TRECOD_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Web0)
                    .IsRequired()
                    .HasColumnName("WEB_0")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Bpartner>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("BPARTNER", "VIPCO");

                entity.HasIndex(e => e.Bprnum0)
                    .HasName("BPARTNER_BPR0")
                    .IsUnique();

                entity.HasIndex(e => e.Bprsho0)
                    .HasName("BPARTNER_BPR1");

                entity.HasIndex(e => new { e.Betfcy0, e.Fcy0, e.Bprnum0 })
                    .HasName("BPARTNER_BPR2")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acccod0)
                    .IsRequired()
                    .HasColumnName("ACCCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Accnonrei0)
                    .IsRequired()
                    .HasColumnName("ACCNONREI_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Acs0)
                    .IsRequired()
                    .HasColumnName("ACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Betfcy0).HasColumnName("BETFCY_0");

                entity.Property(e => e.Bidcry0)
                    .IsRequired()
                    .HasColumnName("BIDCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bidnum0)
                    .IsRequired()
                    .HasColumnName("BIDNUM_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Bpaadd0)
                    .IsRequired()
                    .HasColumnName("BPAADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpcflg0).HasColumnName("BPCFLG_0");

                entity.Property(e => e.Bppflg0).HasColumnName("BPPFLG_0");

                entity.Property(e => e.Bpracc0).HasColumnName("BPRACC_0");

                entity.Property(e => e.Bprfbdmag0).HasColumnName("BPRFBDMAG_0");

                entity.Property(e => e.Bprflg0).HasColumnName("BPRFLG_0");

                entity.Property(e => e.Bprflg1).HasColumnName("BPRFLG_1");

                entity.Property(e => e.Bprflg2).HasColumnName("BPRFLG_2");

                entity.Property(e => e.Bprflg3).HasColumnName("BPRFLG_3");

                entity.Property(e => e.Bprgtetyp0)
                    .IsRequired()
                    .HasColumnName("BPRGTETYP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bprlog0)
                    .IsRequired()
                    .HasColumnName("BPRLOG_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bprnam0)
                    .IsRequired()
                    .HasColumnName("BPRNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bprnam1)
                    .IsRequired()
                    .HasColumnName("BPRNAM_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bprnum0)
                    .IsRequired()
                    .HasColumnName("BPRNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bprsho0)
                    .IsRequired()
                    .HasColumnName("BPRSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bpsflg0).HasColumnName("BPSFLG_0");

                entity.Property(e => e.Bptflg0).HasColumnName("BPTFLG_0");

                entity.Property(e => e.Brgcod0)
                    .IsRequired()
                    .HasColumnName("BRGCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Brgobj0)
                    .IsRequired()
                    .HasColumnName("BRGOBJ_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Ccnflg0).HasColumnName("CCNFLG_0");

                entity.Property(e => e.Cfoexd0).HasColumnName("CFOEXD_0");

                entity.Property(e => e.Cntnam0)
                    .IsRequired()
                    .HasColumnName("CNTNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Cpyrel0).HasColumnName("CPYREL_0");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Crn0)
                    .IsRequired()
                    .HasColumnName("CRN_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cry0)
                    .IsRequired()
                    .HasColumnName("CRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Cslbpr0)
                    .IsRequired()
                    .HasColumnName("CSLBPR_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Doctyp0).HasColumnName("DOCTYP_0");

                entity.Property(e => e.Dooflg0).HasColumnName("DOOFLG_0");

                entity.Property(e => e.Eecnum0)
                    .IsRequired()
                    .HasColumnName("EECNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Enaflg0).HasColumnName("ENAFLG_0");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fctflg0).HasColumnName("FCTFLG_0");

                entity.Property(e => e.Fcy0)
                    .IsRequired()
                    .HasColumnName("FCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Fiscod0)
                    .IsRequired()
                    .HasColumnName("FISCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Grucod0)
                    .IsRequired()
                    .HasColumnName("GRUCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Grugpy0)
                    .IsRequired()
                    .HasColumnName("GRUGPY_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Lan0)
                    .IsRequired()
                    .HasColumnName("LAN_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Legett0).HasColumnName("LEGETT_0");

                entity.Property(e => e.Modpam0)
                    .IsRequired()
                    .HasColumnName("MODPAM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Naf0)
                    .IsRequired()
                    .HasColumnName("NAF_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Pptflg0).HasColumnName("PPTFLG_0");

                entity.Property(e => e.Prvflg0).HasColumnName("PRVFLG_0");

                entity.Property(e => e.Pthflg0).HasColumnName("PTHFLG_0");

                entity.Property(e => e.Repflg0).HasColumnName("REPFLG_0");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vatnum0)
                    .IsRequired()
                    .HasColumnName("VATNUM_0")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<Bpcarrier>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("BPCARRIER", "VIPCO");

                entity.HasIndex(e => e.Bptnam0)
                    .HasName("BPCARRIER_BPT1");

                entity.HasIndex(e => e.Bptnum0)
                    .HasName("BPCARRIER_BPT0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Adl0)
                    .HasColumnName("ADL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bkt0)
                    .HasColumnName("BKT_0")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Bpaadd0)
                    .IsRequired()
                    .HasColumnName("BPAADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bptfor0)
                    .IsRequired()
                    .HasColumnName("BPTFOR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bptnam0)
                    .IsRequired()
                    .HasColumnName("BPTNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bptnum0)
                    .IsRequired()
                    .HasColumnName("BPTNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bptplityp0).HasColumnName("BPTPLITYP_0");

                entity.Property(e => e.Bptsho0)
                    .IsRequired()
                    .HasColumnName("BPTSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cfy0)
                    .IsRequired()
                    .HasColumnName("CFY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy1)
                    .IsRequired()
                    .HasColumnName("CFY_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy10)
                    .IsRequired()
                    .HasColumnName("CFY_10")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy11)
                    .IsRequired()
                    .HasColumnName("CFY_11")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy12)
                    .IsRequired()
                    .HasColumnName("CFY_12")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy13)
                    .IsRequired()
                    .HasColumnName("CFY_13")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy14)
                    .IsRequired()
                    .HasColumnName("CFY_14")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy15)
                    .IsRequired()
                    .HasColumnName("CFY_15")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy16)
                    .IsRequired()
                    .HasColumnName("CFY_16")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy17)
                    .IsRequired()
                    .HasColumnName("CFY_17")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy18)
                    .IsRequired()
                    .HasColumnName("CFY_18")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy19)
                    .IsRequired()
                    .HasColumnName("CFY_19")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy2)
                    .IsRequired()
                    .HasColumnName("CFY_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy3)
                    .IsRequired()
                    .HasColumnName("CFY_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy4)
                    .IsRequired()
                    .HasColumnName("CFY_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy5)
                    .IsRequired()
                    .HasColumnName("CFY_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy6)
                    .IsRequired()
                    .HasColumnName("CFY_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy7)
                    .IsRequired()
                    .HasColumnName("CFY_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy8)
                    .IsRequired()
                    .HasColumnName("CFY_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfy9)
                    .IsRequired()
                    .HasColumnName("CFY_9")
                    .HasMaxLength(5);

                entity.Property(e => e.Cntnam0)
                    .IsRequired()
                    .HasColumnName("CNTNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Coeweivol0)
                    .HasColumnName("COEWEIVOL_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fxdamt0)
                    .HasColumnName("FXDAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Nbpli0).HasColumnName("NBPLI_0");

                entity.Property(e => e.Ntrflg0).HasColumnName("NTRFLG_0");

                entity.Property(e => e.Plibkt0)
                    .HasColumnName("PLIBKT_0")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt1)
                    .HasColumnName("PLIBKT_1")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt10)
                    .HasColumnName("PLIBKT_10")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt11)
                    .HasColumnName("PLIBKT_11")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt12)
                    .HasColumnName("PLIBKT_12")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt13)
                    .HasColumnName("PLIBKT_13")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt14)
                    .HasColumnName("PLIBKT_14")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt15)
                    .HasColumnName("PLIBKT_15")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt16)
                    .HasColumnName("PLIBKT_16")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt17)
                    .HasColumnName("PLIBKT_17")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt18)
                    .HasColumnName("PLIBKT_18")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt19)
                    .HasColumnName("PLIBKT_19")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt2)
                    .HasColumnName("PLIBKT_2")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt20)
                    .HasColumnName("PLIBKT_20")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt21)
                    .HasColumnName("PLIBKT_21")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt22)
                    .HasColumnName("PLIBKT_22")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt23)
                    .HasColumnName("PLIBKT_23")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt24)
                    .HasColumnName("PLIBKT_24")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt25)
                    .HasColumnName("PLIBKT_25")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt26)
                    .HasColumnName("PLIBKT_26")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt27)
                    .HasColumnName("PLIBKT_27")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt28)
                    .HasColumnName("PLIBKT_28")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt29)
                    .HasColumnName("PLIBKT_29")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt3)
                    .HasColumnName("PLIBKT_3")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt30)
                    .HasColumnName("PLIBKT_30")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt31)
                    .HasColumnName("PLIBKT_31")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt32)
                    .HasColumnName("PLIBKT_32")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt33)
                    .HasColumnName("PLIBKT_33")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt34)
                    .HasColumnName("PLIBKT_34")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt35)
                    .HasColumnName("PLIBKT_35")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt36)
                    .HasColumnName("PLIBKT_36")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt37)
                    .HasColumnName("PLIBKT_37")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt38)
                    .HasColumnName("PLIBKT_38")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt39)
                    .HasColumnName("PLIBKT_39")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt4)
                    .HasColumnName("PLIBKT_4")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt40)
                    .HasColumnName("PLIBKT_40")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt41)
                    .HasColumnName("PLIBKT_41")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt42)
                    .HasColumnName("PLIBKT_42")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt43)
                    .HasColumnName("PLIBKT_43")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt44)
                    .HasColumnName("PLIBKT_44")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt45)
                    .HasColumnName("PLIBKT_45")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt46)
                    .HasColumnName("PLIBKT_46")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt47)
                    .HasColumnName("PLIBKT_47")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt48)
                    .HasColumnName("PLIBKT_48")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt49)
                    .HasColumnName("PLIBKT_49")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt5)
                    .HasColumnName("PLIBKT_5")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt6)
                    .HasColumnName("PLIBKT_6")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt7)
                    .HasColumnName("PLIBKT_7")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt8)
                    .HasColumnName("PLIBKT_8")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plibkt9)
                    .HasColumnName("PLIBKT_9")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliflg0).HasColumnName("PLIFLG_0");

                entity.Property(e => e.Plimax0)
                    .HasColumnName("PLIMAX_0")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax1)
                    .HasColumnName("PLIMAX_1")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax10)
                    .HasColumnName("PLIMAX_10")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax11)
                    .HasColumnName("PLIMAX_11")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax12)
                    .HasColumnName("PLIMAX_12")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax13)
                    .HasColumnName("PLIMAX_13")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax14)
                    .HasColumnName("PLIMAX_14")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax15)
                    .HasColumnName("PLIMAX_15")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax16)
                    .HasColumnName("PLIMAX_16")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax17)
                    .HasColumnName("PLIMAX_17")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax18)
                    .HasColumnName("PLIMAX_18")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax19)
                    .HasColumnName("PLIMAX_19")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax2)
                    .HasColumnName("PLIMAX_2")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax20)
                    .HasColumnName("PLIMAX_20")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax21)
                    .HasColumnName("PLIMAX_21")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax22)
                    .HasColumnName("PLIMAX_22")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax23)
                    .HasColumnName("PLIMAX_23")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax24)
                    .HasColumnName("PLIMAX_24")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax25)
                    .HasColumnName("PLIMAX_25")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax26)
                    .HasColumnName("PLIMAX_26")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax27)
                    .HasColumnName("PLIMAX_27")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax28)
                    .HasColumnName("PLIMAX_28")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax29)
                    .HasColumnName("PLIMAX_29")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax3)
                    .HasColumnName("PLIMAX_3")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax30)
                    .HasColumnName("PLIMAX_30")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax31)
                    .HasColumnName("PLIMAX_31")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax32)
                    .HasColumnName("PLIMAX_32")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax33)
                    .HasColumnName("PLIMAX_33")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax34)
                    .HasColumnName("PLIMAX_34")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax35)
                    .HasColumnName("PLIMAX_35")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax36)
                    .HasColumnName("PLIMAX_36")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax37)
                    .HasColumnName("PLIMAX_37")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax38)
                    .HasColumnName("PLIMAX_38")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax39)
                    .HasColumnName("PLIMAX_39")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax4)
                    .HasColumnName("PLIMAX_4")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax40)
                    .HasColumnName("PLIMAX_40")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax41)
                    .HasColumnName("PLIMAX_41")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax42)
                    .HasColumnName("PLIMAX_42")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax43)
                    .HasColumnName("PLIMAX_43")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax44)
                    .HasColumnName("PLIMAX_44")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax45)
                    .HasColumnName("PLIMAX_45")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax46)
                    .HasColumnName("PLIMAX_46")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax47)
                    .HasColumnName("PLIMAX_47")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax48)
                    .HasColumnName("PLIMAX_48")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax49)
                    .HasColumnName("PLIMAX_49")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax5)
                    .HasColumnName("PLIMAX_5")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax6)
                    .HasColumnName("PLIMAX_6")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax7)
                    .HasColumnName("PLIMAX_7")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax8)
                    .HasColumnName("PLIMAX_8")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Plimax9)
                    .HasColumnName("PLIMAX_9")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd0)
                    .HasColumnName("PLIUOMRND_0")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd1)
                    .HasColumnName("PLIUOMRND_1")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd10)
                    .HasColumnName("PLIUOMRND_10")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd11)
                    .HasColumnName("PLIUOMRND_11")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd12)
                    .HasColumnName("PLIUOMRND_12")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd13)
                    .HasColumnName("PLIUOMRND_13")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd14)
                    .HasColumnName("PLIUOMRND_14")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd15)
                    .HasColumnName("PLIUOMRND_15")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd16)
                    .HasColumnName("PLIUOMRND_16")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd17)
                    .HasColumnName("PLIUOMRND_17")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd18)
                    .HasColumnName("PLIUOMRND_18")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd19)
                    .HasColumnName("PLIUOMRND_19")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd2)
                    .HasColumnName("PLIUOMRND_2")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd20)
                    .HasColumnName("PLIUOMRND_20")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd21)
                    .HasColumnName("PLIUOMRND_21")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd22)
                    .HasColumnName("PLIUOMRND_22")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd23)
                    .HasColumnName("PLIUOMRND_23")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd24)
                    .HasColumnName("PLIUOMRND_24")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd25)
                    .HasColumnName("PLIUOMRND_25")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd26)
                    .HasColumnName("PLIUOMRND_26")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd27)
                    .HasColumnName("PLIUOMRND_27")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd28)
                    .HasColumnName("PLIUOMRND_28")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd29)
                    .HasColumnName("PLIUOMRND_29")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd3)
                    .HasColumnName("PLIUOMRND_3")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd30)
                    .HasColumnName("PLIUOMRND_30")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd31)
                    .HasColumnName("PLIUOMRND_31")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd32)
                    .HasColumnName("PLIUOMRND_32")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd33)
                    .HasColumnName("PLIUOMRND_33")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd34)
                    .HasColumnName("PLIUOMRND_34")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd35)
                    .HasColumnName("PLIUOMRND_35")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd36)
                    .HasColumnName("PLIUOMRND_36")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd37)
                    .HasColumnName("PLIUOMRND_37")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd38)
                    .HasColumnName("PLIUOMRND_38")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd39)
                    .HasColumnName("PLIUOMRND_39")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd4)
                    .HasColumnName("PLIUOMRND_4")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd40)
                    .HasColumnName("PLIUOMRND_40")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd41)
                    .HasColumnName("PLIUOMRND_41")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd42)
                    .HasColumnName("PLIUOMRND_42")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd43)
                    .HasColumnName("PLIUOMRND_43")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd44)
                    .HasColumnName("PLIUOMRND_44")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd45)
                    .HasColumnName("PLIUOMRND_45")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd46)
                    .HasColumnName("PLIUOMRND_46")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd47)
                    .HasColumnName("PLIUOMRND_47")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd48)
                    .HasColumnName("PLIUOMRND_48")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd49)
                    .HasColumnName("PLIUOMRND_49")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd5)
                    .HasColumnName("PLIUOMRND_5")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd6)
                    .HasColumnName("PLIUOMRND_6")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd7)
                    .HasColumnName("PLIUOMRND_7")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd8)
                    .HasColumnName("PLIUOMRND_8")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Pliuomrnd9)
                    .HasColumnName("PLIUOMRND_9")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Scac0)
                    .IsRequired()
                    .HasColumnName("SCAC_0")
                    .HasMaxLength(4);

                entity.Property(e => e.Tsdfre0)
                    .HasColumnName("TSDFRE_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Tsdfre1)
                    .HasColumnName("TSDFRE_1")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Tsdfre2)
                    .HasColumnName("TSDFRE_2")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Tsdfre3)
                    .HasColumnName("TSDFRE_3")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Tsdfre4)
                    .HasColumnName("TSDFRE_4")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vou0)
                    .IsRequired()
                    .HasColumnName("VOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Weirnd0).HasColumnName("WEIRND_0");

                entity.Property(e => e.Weu0)
                    .IsRequired()
                    .HasColumnName("WEU_0")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<Bpsupplier>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("BPSUPPLIER", "VIPCO");

                entity.HasIndex(e => e.Bpsnam0)
                    .HasName("BPSUPPLIER_BPS1");

                entity.HasIndex(e => e.Bpsnum0)
                    .HasName("BPSUPPLIER_BPS0")
                    .IsUnique();

                entity.HasIndex(e => e.Bpssho0)
                    .HasName("BPSUPPLIER_BPS2");

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Abccls0).HasColumnName("ABCCLS_0");

                entity.Property(e => e.Acccod0)
                    .IsRequired()
                    .HasColumnName("ACCCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Agtpcp0).HasColumnName("AGTPCP_0");

                entity.Property(e => e.Agtsattax0).HasColumnName("AGTSATTAX_0");

                entity.Property(e => e.Amtcod0).HasColumnName("AMTCOD_0");

                entity.Property(e => e.Amtcod1).HasColumnName("AMTCOD_1");

                entity.Property(e => e.Amtcod10).HasColumnName("AMTCOD_10");

                entity.Property(e => e.Amtcod11).HasColumnName("AMTCOD_11");

                entity.Property(e => e.Amtcod12).HasColumnName("AMTCOD_12");

                entity.Property(e => e.Amtcod13).HasColumnName("AMTCOD_13");

                entity.Property(e => e.Amtcod14).HasColumnName("AMTCOD_14");

                entity.Property(e => e.Amtcod15).HasColumnName("AMTCOD_15");

                entity.Property(e => e.Amtcod16).HasColumnName("AMTCOD_16");

                entity.Property(e => e.Amtcod17).HasColumnName("AMTCOD_17");

                entity.Property(e => e.Amtcod18).HasColumnName("AMTCOD_18");

                entity.Property(e => e.Amtcod19).HasColumnName("AMTCOD_19");

                entity.Property(e => e.Amtcod2).HasColumnName("AMTCOD_2");

                entity.Property(e => e.Amtcod20).HasColumnName("AMTCOD_20");

                entity.Property(e => e.Amtcod21).HasColumnName("AMTCOD_21");

                entity.Property(e => e.Amtcod22).HasColumnName("AMTCOD_22");

                entity.Property(e => e.Amtcod23).HasColumnName("AMTCOD_23");

                entity.Property(e => e.Amtcod24).HasColumnName("AMTCOD_24");

                entity.Property(e => e.Amtcod25).HasColumnName("AMTCOD_25");

                entity.Property(e => e.Amtcod26).HasColumnName("AMTCOD_26");

                entity.Property(e => e.Amtcod27).HasColumnName("AMTCOD_27");

                entity.Property(e => e.Amtcod28).HasColumnName("AMTCOD_28");

                entity.Property(e => e.Amtcod29).HasColumnName("AMTCOD_29");

                entity.Property(e => e.Amtcod3).HasColumnName("AMTCOD_3");

                entity.Property(e => e.Amtcod4).HasColumnName("AMTCOD_4");

                entity.Property(e => e.Amtcod5).HasColumnName("AMTCOD_5");

                entity.Property(e => e.Amtcod6).HasColumnName("AMTCOD_6");

                entity.Property(e => e.Amtcod7).HasColumnName("AMTCOD_7");

                entity.Property(e => e.Amtcod8).HasColumnName("AMTCOD_8");

                entity.Property(e => e.Amtcod9).HasColumnName("AMTCOD_9");

                entity.Property(e => e.Autinvcod0)
                    .IsRequired()
                    .HasColumnName("AUTINVCOD_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Box10990)
                    .IsRequired()
                    .HasColumnName("BOX1099_0")
                    .HasMaxLength(4);

                entity.Property(e => e.Bpaadd0)
                    .IsRequired()
                    .HasColumnName("BPAADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpapay0)
                    .IsRequired()
                    .HasColumnName("BPAPAY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpcnum0)
                    .IsRequired()
                    .HasColumnName("BPCNUM_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Bpcnumbps0)
                    .IsRequired()
                    .HasColumnName("BPCNUMBPS_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bprpay0)
                    .IsRequired()
                    .HasColumnName("BPRPAY_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsgru0)
                    .IsRequired()
                    .HasColumnName("BPSGRU_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsinv0)
                    .IsRequired()
                    .HasColumnName("BPSINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsnam0)
                    .IsRequired()
                    .HasColumnName("BPSNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsrem0)
                    .IsRequired()
                    .HasColumnName("BPSREM_0")
                    .HasMaxLength(250);

                entity.Property(e => e.Bpsrsk0)
                    .IsRequired()
                    .HasColumnName("BPSRSK_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpssho0)
                    .IsRequired()
                    .HasColumnName("BPSSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bpstyp0).HasColumnName("BPSTYP_0");

                entity.Property(e => e.Bptnum0)
                    .IsRequired()
                    .HasColumnName("BPTNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bsgcod0)
                    .IsRequired()
                    .HasColumnName("BSGCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cai0)
                    .IsRequired()
                    .HasColumnName("CAI_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Chgtyp0).HasColumnName("CHGTYP_0");

                entity.Property(e => e.Cntnam0)
                    .IsRequired()
                    .HasColumnName("CNTNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cshdat0)
                    .HasColumnName("CSHDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cshvat0).HasColumnName("CSHVAT_0");

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Curclc0).HasColumnName("CURCLC_0");

                entity.Property(e => e.Dadflg0).HasColumnName("DADFLG_0");

                entity.Property(e => e.Datvlycai0)
                    .HasColumnName("DATVLYCAI_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dep0)
                    .IsRequired()
                    .HasColumnName("DEP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Dia0)
                    .IsRequired()
                    .HasColumnName("DIA_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Douflg0).HasColumnName("DOUFLG_0");

                entity.Property(e => e.Dudclc0).HasColumnName("DUDCLC_0");

                entity.Property(e => e.Eecict0)
                    .IsRequired()
                    .HasColumnName("EECICT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eecincrat0)
                    .HasColumnName("EECINCRAT_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Eecloc0).HasColumnName("EECLOC_0");

                entity.Property(e => e.Enaflg0).HasColumnName("ENAFLG_0");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Flg2810).HasColumnName("FLG281_0");

                entity.Property(e => e.Flgsattax0).HasColumnName("FLGSATTAX_0");

                entity.Property(e => e.Frm10990).HasColumnName("FRM1099_0");

                entity.Property(e => e.Fupflg0).HasColumnName("FUPFLG_0");

                entity.Property(e => e.Genmrk0)
                    .HasColumnName("GENMRK_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Invdta0).HasColumnName("INVDTA_0");

                entity.Property(e => e.Invdta1).HasColumnName("INVDTA_1");

                entity.Property(e => e.Invdta10).HasColumnName("INVDTA_10");

                entity.Property(e => e.Invdta11).HasColumnName("INVDTA_11");

                entity.Property(e => e.Invdta12).HasColumnName("INVDTA_12");

                entity.Property(e => e.Invdta13).HasColumnName("INVDTA_13");

                entity.Property(e => e.Invdta14).HasColumnName("INVDTA_14");

                entity.Property(e => e.Invdta15).HasColumnName("INVDTA_15");

                entity.Property(e => e.Invdta16).HasColumnName("INVDTA_16");

                entity.Property(e => e.Invdta17).HasColumnName("INVDTA_17");

                entity.Property(e => e.Invdta18).HasColumnName("INVDTA_18");

                entity.Property(e => e.Invdta19).HasColumnName("INVDTA_19");

                entity.Property(e => e.Invdta2).HasColumnName("INVDTA_2");

                entity.Property(e => e.Invdta20).HasColumnName("INVDTA_20");

                entity.Property(e => e.Invdta21).HasColumnName("INVDTA_21");

                entity.Property(e => e.Invdta22).HasColumnName("INVDTA_22");

                entity.Property(e => e.Invdta23).HasColumnName("INVDTA_23");

                entity.Property(e => e.Invdta24).HasColumnName("INVDTA_24");

                entity.Property(e => e.Invdta25).HasColumnName("INVDTA_25");

                entity.Property(e => e.Invdta26).HasColumnName("INVDTA_26");

                entity.Property(e => e.Invdta27).HasColumnName("INVDTA_27");

                entity.Property(e => e.Invdta28).HasColumnName("INVDTA_28");

                entity.Property(e => e.Invdta29).HasColumnName("INVDTA_29");

                entity.Property(e => e.Invdta3).HasColumnName("INVDTA_3");

                entity.Property(e => e.Invdta4).HasColumnName("INVDTA_4");

                entity.Property(e => e.Invdta5).HasColumnName("INVDTA_5");

                entity.Property(e => e.Invdta6).HasColumnName("INVDTA_6");

                entity.Property(e => e.Invdta7).HasColumnName("INVDTA_7");

                entity.Property(e => e.Invdta8).HasColumnName("INVDTA_8");

                entity.Property(e => e.Invdta9).HasColumnName("INVDTA_9");

                entity.Property(e => e.Invdtaamt0)
                    .HasColumnName("INVDTAAMT_0")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt1)
                    .HasColumnName("INVDTAAMT_1")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt10)
                    .HasColumnName("INVDTAAMT_10")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt11)
                    .HasColumnName("INVDTAAMT_11")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt12)
                    .HasColumnName("INVDTAAMT_12")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt13)
                    .HasColumnName("INVDTAAMT_13")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt14)
                    .HasColumnName("INVDTAAMT_14")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt15)
                    .HasColumnName("INVDTAAMT_15")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt16)
                    .HasColumnName("INVDTAAMT_16")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt17)
                    .HasColumnName("INVDTAAMT_17")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt18)
                    .HasColumnName("INVDTAAMT_18")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt19)
                    .HasColumnName("INVDTAAMT_19")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt2)
                    .HasColumnName("INVDTAAMT_2")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt20)
                    .HasColumnName("INVDTAAMT_20")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt21)
                    .HasColumnName("INVDTAAMT_21")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt22)
                    .HasColumnName("INVDTAAMT_22")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt23)
                    .HasColumnName("INVDTAAMT_23")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt24)
                    .HasColumnName("INVDTAAMT_24")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt25)
                    .HasColumnName("INVDTAAMT_25")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt26)
                    .HasColumnName("INVDTAAMT_26")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt27)
                    .HasColumnName("INVDTAAMT_27")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt28)
                    .HasColumnName("INVDTAAMT_28")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt29)
                    .HasColumnName("INVDTAAMT_29")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt3)
                    .HasColumnName("INVDTAAMT_3")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt4)
                    .HasColumnName("INVDTAAMT_4")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt5)
                    .HasColumnName("INVDTAAMT_5")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt6)
                    .HasColumnName("INVDTAAMT_6")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt7)
                    .HasColumnName("INVDTAAMT_7")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt8)
                    .HasColumnName("INVDTAAMT_8")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt9)
                    .HasColumnName("INVDTAAMT_9")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Iptexs0)
                    .IsRequired()
                    .HasColumnName("IPTEXS_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Loc0)
                    .IsRequired()
                    .HasColumnName("LOC_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Ltimrk0)
                    .HasColumnName("LTIMRK_0")
                    .HasColumnType("numeric(7, 3)");

                entity.Property(e => e.Ltimrkcoe0)
                    .HasColumnName("LTIMRKCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Mattol0)
                    .IsRequired()
                    .HasColumnName("MATTOL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Mdl0)
                    .IsRequired()
                    .HasColumnName("MDL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Norprnflg0).HasColumnName("NORPRNFLG_0");

                entity.Property(e => e.Nreprnflg0).HasColumnName("NREPRNFLG_0");

                entity.Property(e => e.Nrtprnflg0).HasColumnName("NRTPRNFLG_0");

                entity.Property(e => e.Ocnflg0).HasColumnName("OCNFLG_0");

                entity.Property(e => e.Ordfrefrt0)
                    .HasColumnName("ORDFREFRT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordminamt0)
                    .HasColumnName("ORDMINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordtex0)
                    .IsRequired()
                    .HasColumnName("ORDTEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Ostauzamt0)
                    .HasColumnName("OSTAUZAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ostctl0).HasColumnName("OSTCTL_0");

                entity.Property(e => e.Payban0)
                    .IsRequired()
                    .HasColumnName("PAYBAN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Paylokflg0).HasColumnName("PAYLOKFLG_0");

                entity.Property(e => e.Plistc0)
                    .IsRequired()
                    .HasColumnName("PLISTC_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Primrk0)
                    .HasColumnName("PRIMRK_0")
                    .HasColumnType("numeric(7, 3)");

                entity.Property(e => e.Primrkcoe0)
                    .HasColumnName("PRIMRKCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Prvnum0)
                    .IsRequired()
                    .HasColumnName("PRVNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Pte0)
                    .IsRequired()
                    .HasColumnName("PTE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Purprityp0).HasColumnName("PURPRITYP_0");

                entity.Property(e => e.Qlymrk0)
                    .HasColumnName("QLYMRK_0")
                    .HasColumnType("numeric(7, 3)");

                entity.Property(e => e.Qlymrkcoe0)
                    .HasColumnName("QLYMRKCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Qtymrk0)
                    .HasColumnName("QTYMRK_0")
                    .HasColumnType("numeric(7, 3)");

                entity.Property(e => e.Qtymrkcoe0)
                    .HasColumnName("QTYMRKCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Ritcod0)
                    .IsRequired()
                    .HasColumnName("RITCOD_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Ritnbr0).HasColumnName("RITNBR_0");

                entity.Property(e => e.Ritparcoe0)
                    .HasColumnName("RITPARCOE_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Ritparnam0)
                    .IsRequired()
                    .HasColumnName("RITPARNAM_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Ritparnbr0).HasColumnName("RITPARNBR_0");

                entity.Property(e => e.Ritrat0)
                    .HasColumnName("RITRAT_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Rskmrk0)
                    .HasColumnName("RSKMRK_0")
                    .HasColumnType("numeric(7, 3)");

                entity.Property(e => e.Rskmrkcoe0)
                    .HasColumnName("RSKMRKCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Rtntex0)
                    .IsRequired()
                    .HasColumnName("RTNTEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Sattax0)
                    .IsRequired()
                    .HasColumnName("SATTAX_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Sevlin0).HasColumnName("SEVLIN_0");

                entity.Property(e => e.Tpmcod0)
                    .IsRequired()
                    .HasColumnName("TPMCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Tsscod0)
                    .IsRequired()
                    .HasColumnName("TSSCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod1)
                    .IsRequired()
                    .HasColumnName("TSSCOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod2)
                    .IsRequired()
                    .HasColumnName("TSSCOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod3)
                    .IsRequired()
                    .HasColumnName("TSSCOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod4)
                    .IsRequired()
                    .HasColumnName("TSSCOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Uvycod0)
                    .IsRequired()
                    .HasColumnName("UVYCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacbpr0)
                    .IsRequired()
                    .HasColumnName("VACBPR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Zcompname0)
                    .IsRequired()
                    .HasColumnName("ZCOMPNAME_0")
                    .HasMaxLength(120);

                entity.Property(e => e.Ztaxbranch0)
                    .IsRequired()
                    .HasColumnName("ZTAXBRANCH_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Cacce>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("CACCE", "VIPCO");

                entity.HasIndex(e => new { e.Die0, e.Cce0 })
                    .HasName("CACCE_CCE0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acs0)
                    .IsRequired()
                    .HasColumnName("ACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Auz0)
                    .IsRequired()
                    .HasColumnName("AUZ_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Budtrk0).HasColumnName("BUDTRK_0");

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cretim0).HasColumnName("CRETIM_0");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Defcce0)
                    .IsRequired()
                    .HasColumnName("DEFCCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce1)
                    .IsRequired()
                    .HasColumnName("DEFCCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce10)
                    .IsRequired()
                    .HasColumnName("DEFCCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce11)
                    .IsRequired()
                    .HasColumnName("DEFCCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce12)
                    .IsRequired()
                    .HasColumnName("DEFCCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce13)
                    .IsRequired()
                    .HasColumnName("DEFCCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce14)
                    .IsRequired()
                    .HasColumnName("DEFCCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce15)
                    .IsRequired()
                    .HasColumnName("DEFCCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce16)
                    .IsRequired()
                    .HasColumnName("DEFCCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce17)
                    .IsRequired()
                    .HasColumnName("DEFCCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce18)
                    .IsRequired()
                    .HasColumnName("DEFCCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce19)
                    .IsRequired()
                    .HasColumnName("DEFCCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce2)
                    .IsRequired()
                    .HasColumnName("DEFCCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce3)
                    .IsRequired()
                    .HasColumnName("DEFCCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce4)
                    .IsRequired()
                    .HasColumnName("DEFCCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce5)
                    .IsRequired()
                    .HasColumnName("DEFCCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce6)
                    .IsRequired()
                    .HasColumnName("DEFCCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce7)
                    .IsRequired()
                    .HasColumnName("DEFCCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce8)
                    .IsRequired()
                    .HasColumnName("DEFCCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Defcce9)
                    .IsRequired()
                    .HasColumnName("DEFCCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Des0)
                    .IsRequired()
                    .HasColumnName("DES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Dessho0)
                    .IsRequired()
                    .HasColumnName("DESSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dienbr0).HasColumnName("DIENBR_0");

                entity.Property(e => e.Enaflg0).HasColumnName("ENAFLG_0");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fcy0)
                    .IsRequired()
                    .HasColumnName("FCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Frw0).HasColumnName("FRW_0");

                entity.Property(e => e.Ipt0).HasColumnName("IPT_0");

                entity.Property(e => e.Othdie0)
                    .IsRequired()
                    .HasColumnName("OTHDIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie1)
                    .IsRequired()
                    .HasColumnName("OTHDIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie10)
                    .IsRequired()
                    .HasColumnName("OTHDIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie11)
                    .IsRequired()
                    .HasColumnName("OTHDIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie12)
                    .IsRequired()
                    .HasColumnName("OTHDIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie13)
                    .IsRequired()
                    .HasColumnName("OTHDIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie14)
                    .IsRequired()
                    .HasColumnName("OTHDIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie15)
                    .IsRequired()
                    .HasColumnName("OTHDIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie16)
                    .IsRequired()
                    .HasColumnName("OTHDIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie17)
                    .IsRequired()
                    .HasColumnName("OTHDIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie18)
                    .IsRequired()
                    .HasColumnName("OTHDIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie19)
                    .IsRequired()
                    .HasColumnName("OTHDIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie2)
                    .IsRequired()
                    .HasColumnName("OTHDIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie3)
                    .IsRequired()
                    .HasColumnName("OTHDIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie4)
                    .IsRequired()
                    .HasColumnName("OTHDIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie5)
                    .IsRequired()
                    .HasColumnName("OTHDIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie6)
                    .IsRequired()
                    .HasColumnName("OTHDIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie7)
                    .IsRequired()
                    .HasColumnName("OTHDIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie8)
                    .IsRequired()
                    .HasColumnName("OTHDIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Othdie9)
                    .IsRequired()
                    .HasColumnName("OTHDIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Qty0)
                    .HasColumnName("QTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty1)
                    .HasColumnName("QTY_1")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty10)
                    .HasColumnName("QTY_10")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty11)
                    .HasColumnName("QTY_11")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty12)
                    .HasColumnName("QTY_12")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty13)
                    .HasColumnName("QTY_13")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty14)
                    .HasColumnName("QTY_14")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty15)
                    .HasColumnName("QTY_15")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty16)
                    .HasColumnName("QTY_16")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty17)
                    .HasColumnName("QTY_17")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty18)
                    .HasColumnName("QTY_18")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty19)
                    .HasColumnName("QTY_19")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty2)
                    .HasColumnName("QTY_2")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty3)
                    .HasColumnName("QTY_3")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty4)
                    .HasColumnName("QTY_4")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty5)
                    .HasColumnName("QTY_5")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty6)
                    .HasColumnName("QTY_6")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty7)
                    .HasColumnName("QTY_7")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty8)
                    .HasColumnName("QTY_8")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qty9)
                    .HasColumnName("QTY_9")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Uom0)
                    .IsRequired()
                    .HasColumnName("UOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom1)
                    .IsRequired()
                    .HasColumnName("UOM_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom10)
                    .IsRequired()
                    .HasColumnName("UOM_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom11)
                    .IsRequired()
                    .HasColumnName("UOM_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom12)
                    .IsRequired()
                    .HasColumnName("UOM_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom13)
                    .IsRequired()
                    .HasColumnName("UOM_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom14)
                    .IsRequired()
                    .HasColumnName("UOM_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom15)
                    .IsRequired()
                    .HasColumnName("UOM_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom16)
                    .IsRequired()
                    .HasColumnName("UOM_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom17)
                    .IsRequired()
                    .HasColumnName("UOM_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom18)
                    .IsRequired()
                    .HasColumnName("UOM_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom19)
                    .IsRequired()
                    .HasColumnName("UOM_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom2)
                    .IsRequired()
                    .HasColumnName("UOM_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom3)
                    .IsRequired()
                    .HasColumnName("UOM_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom4)
                    .IsRequired()
                    .HasColumnName("UOM_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom5)
                    .IsRequired()
                    .HasColumnName("UOM_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom6)
                    .IsRequired()
                    .HasColumnName("UOM_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom7)
                    .IsRequired()
                    .HasColumnName("UOM_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom8)
                    .IsRequired()
                    .HasColumnName("UOM_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom9)
                    .IsRequired()
                    .HasColumnName("UOM_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Uomnbr0).HasColumnName("UOMNBR_0");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updtim0).HasColumnName("UPDTIM_0");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vlyend0)
                    .HasColumnName("VLYEND_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vlystr0)
                    .HasColumnName("VLYSTR_0")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<Coststcd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("COSTSTCD", "VIPCO");

                entity.HasIndex(e => new { e.Vcrtyp0, e.Vcrnum0, e.Vcrlin0, e.Fcscod0 })
                    .HasName("COSTSTCD_STCD1");

                entity.HasIndex(e => new { e.Vcrtyp0, e.Vcrnum0, e.Vcrlin0, e.Vcrseq0, e.Numseq0 })
                    .HasName("COSTSTCD_STCD0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bas0).HasColumnName("BAS_0");

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Chgcoe0)
                    .HasColumnName("CHGCOE_0")
                    .HasColumnType("numeric(21, 10)");

                entity.Property(e => e.Chgtyp0).HasColumnName("CHGTYP_0");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Docchgtyp0).HasColumnName("DOCCHGTYP_0");

                entity.Property(e => e.Fcsamt0)
                    .HasColumnName("FCSAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Fcsamtclc0)
                    .HasColumnName("FCSAMTCLC_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Fcsamtsoc0)
                    .HasColumnName("FCSAMTSOC_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Fcscod0)
                    .IsRequired()
                    .HasColumnName("FCSCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Fcsnat0).HasColumnName("FCSNAT_0");

                entity.Property(e => e.Forfcs0)
                    .IsRequired()
                    .HasColumnName("FORFCS_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Numseq0).HasColumnName("NUMSEQ_0");

                entity.Property(e => e.Prcbuy0)
                    .HasColumnName("PRCBUY_0")
                    .HasColumnType("numeric(14, 5)");

                entity.Property(e => e.Prinetprc0)
                    .HasColumnName("PRINETPRC_0")
                    .HasColumnType("numeric(14, 5)");

                entity.Property(e => e.Qty0)
                    .HasColumnName("QTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Stclin0).HasColumnName("STCLIN_0");

                entity.Property(e => e.Stcrflg0).HasColumnName("STCRFLG_0");

                entity.Property(e => e.Untpri0)
                    .HasColumnName("UNTPRI_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Uom0)
                    .IsRequired()
                    .HasColumnName("UOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vcrlin0).HasColumnName("VCRLIN_0");

                entity.Property(e => e.Vcrnum0)
                    .IsRequired()
                    .HasColumnName("VCRNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrseq0).HasColumnName("VCRSEQ_0");

                entity.Property(e => e.Vcrtyp0).HasColumnName("VCRTYP_0");

                entity.Property(e => e.Weiprc0)
                    .HasColumnName("WEIPRC_0")
                    .HasColumnType("numeric(14, 5)");
            });

            modelBuilder.Entity<Cptanalin>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("CPTANALIN", "VIPCO");

                entity.HasIndex(e => new { e.Abrfic0, e.Vcrtyp0, e.Vcrnum0, e.Vcrlin0, e.Vcrseq0, e.Cplcle0, e.Analig0 })
                    .HasName("CPTANALIN_CAL0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Abrfic0)
                    .IsRequired()
                    .HasColumnName("ABRFIC_0")
                    .HasMaxLength(8);

                entity.Property(e => e.Acc0)
                    .IsRequired()
                    .HasColumnName("ACC_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc1)
                    .IsRequired()
                    .HasColumnName("ACC_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc2)
                    .IsRequired()
                    .HasColumnName("ACC_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc3)
                    .IsRequired()
                    .HasColumnName("ACC_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc4)
                    .IsRequired()
                    .HasColumnName("ACC_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc5)
                    .IsRequired()
                    .HasColumnName("ACC_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc6)
                    .IsRequired()
                    .HasColumnName("ACC_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc7)
                    .IsRequired()
                    .HasColumnName("ACC_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc8)
                    .IsRequired()
                    .HasColumnName("ACC_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc9)
                    .IsRequired()
                    .HasColumnName("ACC_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Amt0)
                    .HasColumnName("AMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Analig0).HasColumnName("ANALIG_0");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Coa0)
                    .IsRequired()
                    .HasColumnName("COA_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa1)
                    .IsRequired()
                    .HasColumnName("COA_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa2)
                    .IsRequired()
                    .HasColumnName("COA_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa3)
                    .IsRequired()
                    .HasColumnName("COA_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa4)
                    .IsRequired()
                    .HasColumnName("COA_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa5)
                    .IsRequired()
                    .HasColumnName("COA_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa6)
                    .IsRequired()
                    .HasColumnName("COA_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa7)
                    .IsRequired()
                    .HasColumnName("COA_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa8)
                    .IsRequired()
                    .HasColumnName("COA_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa9)
                    .IsRequired()
                    .HasColumnName("COA_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Cplcle0)
                    .IsRequired()
                    .HasColumnName("CPLCLE_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Dsp0)
                    .IsRequired()
                    .HasColumnName("DSP_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Glu0)
                    .IsRequired()
                    .HasColumnName("GLU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Led0)
                    .IsRequired()
                    .HasColumnName("LED_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Led1)
                    .IsRequired()
                    .HasColumnName("LED_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Led2)
                    .IsRequired()
                    .HasColumnName("LED_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Led3)
                    .IsRequired()
                    .HasColumnName("LED_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Led4)
                    .IsRequired()
                    .HasColumnName("LED_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Led5)
                    .IsRequired()
                    .HasColumnName("LED_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Led6)
                    .IsRequired()
                    .HasColumnName("LED_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Led7)
                    .IsRequired()
                    .HasColumnName("LED_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Led8)
                    .IsRequired()
                    .HasColumnName("LED_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Led9)
                    .IsRequired()
                    .HasColumnName("LED_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Qty0)
                    .HasColumnName("QTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vcrlin0).HasColumnName("VCRLIN_0");

                entity.Property(e => e.Vcrnum0)
                    .IsRequired()
                    .HasColumnName("VCRNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrseq0).HasColumnName("VCRSEQ_0");

                entity.Property(e => e.Vcrtyp0).HasColumnName("VCRTYP_0");
            });

            modelBuilder.Entity<Facility>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("FACILITY", "VIPCO");

                entity.HasIndex(e => e.Fcy0)
                    .HasName("FACILITY_FCY0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Legcpy0, e.Fcy0 })
                    .HasName("FACILITY_FCY1")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acccod0)
                    .IsRequired()
                    .HasColumnName("ACCCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bidnum0)
                    .IsRequired()
                    .HasColumnName("BIDNUM_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Bpaadd0)
                    .IsRequired()
                    .HasColumnName("BPAADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpadcl0)
                    .IsRequired()
                    .HasColumnName("BPADCL_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bpasge0)
                    .IsRequired()
                    .HasColumnName("BPASGE_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bptnum0)
                    .IsRequired()
                    .HasColumnName("BPTNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Chef0)
                    .IsRequired()
                    .HasColumnName("CHEF_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cllcvt0)
                    .IsRequired()
                    .HasColumnName("CLLCVT_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cntdds0)
                    .IsRequired()
                    .HasColumnName("CNTDDS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cntnam0)
                    .IsRequired()
                    .HasColumnName("CNTNAM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Codcra0)
                    .IsRequired()
                    .HasColumnName("CODCRA_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Crn0)
                    .IsRequired()
                    .HasColumnName("CRN_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cry0)
                    .IsRequired()
                    .HasColumnName("CRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dadfcy0)
                    .IsRequired()
                    .HasColumnName("DADFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Dadflg0).HasColumnName("DADFLG_0");

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(10);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(10);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(10);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(10);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(10);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(10);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(10);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(10);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(10);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(10);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(10);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(10);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(10);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(10);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(10);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(10);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(10);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(10);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(10);

                entity.Property(e => e.Endhou0)
                    .IsRequired()
                    .HasColumnName("ENDHOU_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Fcy0)
                    .IsRequired()
                    .HasColumnName("FCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Fcynam0)
                    .IsRequired()
                    .HasColumnName("FCYNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Fcysho0)
                    .IsRequired()
                    .HasColumnName("FCYSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Finflg0).HasColumnName("FINFLG_0");

                entity.Property(e => e.Finrspfcy0)
                    .IsRequired()
                    .HasColumnName("FINRSPFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Flgapp0).HasColumnName("FLGAPP_0");

                entity.Property(e => e.Flgfor0).HasColumnName("FLGFOR_0");

                entity.Property(e => e.Flgpec0).HasColumnName("FLGPEC_0");

                entity.Property(e => e.Geocod0)
                    .IsRequired()
                    .HasColumnName("GEOCOD_0")
                    .HasMaxLength(9);

                entity.Property(e => e.Hrmdadfcy0)
                    .IsRequired()
                    .HasColumnName("HRMDADFCY_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Hrmdadflg0).HasColumnName("HRMDADFLG_0");

                entity.Property(e => e.Hrmpayban0)
                    .IsRequired()
                    .HasColumnName("HRMPAYBAN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Hrmtaxwag0).HasColumnName("HRMTAXWAG_0");

                entity.Property(e => e.Insctyflg0)
                    .IsRequired()
                    .HasColumnName("INSCTYFLG_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Ivyfcy0)
                    .IsRequired()
                    .HasColumnName("IVYFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ivyflg0).HasColumnName("IVYFLG_0");

                entity.Property(e => e.Leg0)
                    .IsRequired()
                    .HasColumnName("LEG_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Legcpy0)
                    .IsRequired()
                    .HasColumnName("LEGCPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Mfgflg0).HasColumnName("MFGFLG_0");

                entity.Property(e => e.Mfgwrh0)
                    .IsRequired()
                    .HasColumnName("MFGWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Mfpwrh0)
                    .IsRequired()
                    .HasColumnName("MFPWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Mfrwrh0)
                    .IsRequired()
                    .HasColumnName("MFRWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Naf0)
                    .IsRequired()
                    .HasColumnName("NAF_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Payban0)
                    .IsRequired()
                    .HasColumnName("PAYBAN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Payflg0).HasColumnName("PAYFLG_0");

                entity.Property(e => e.Prf0)
                    .IsRequired()
                    .HasColumnName("PRF_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Purflg0).HasColumnName("PURFLG_0");

                entity.Property(e => e.Rcpwrh0)
                    .IsRequired()
                    .HasColumnName("RCPWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Regprh0).HasColumnName("REGPRH_0");

                entity.Property(e => e.Rskwrk0)
                    .IsRequired()
                    .HasColumnName("RSKWRK_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Rtnwrh0)
                    .IsRequired()
                    .HasColumnName("RTNWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Salflg0).HasColumnName("SALFLG_0");

                entity.Property(e => e.Sccwrh0)
                    .IsRequired()
                    .HasColumnName("SCCWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Scowrh0)
                    .IsRequired()
                    .HasColumnName("SCOWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Secprh0).HasColumnName("SECPRH_0");

                entity.Property(e => e.Shiwrh0)
                    .IsRequired()
                    .HasColumnName("SHIWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Spaopeigic0).HasColumnName("SPAOPEIGIC_0");

                entity.Property(e => e.Srv0)
                    .IsRequired()
                    .HasColumnName("SRV_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Strhou0)
                    .IsRequired()
                    .HasColumnName("STRHOU_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Trawrh0)
                    .IsRequired()
                    .HasColumnName("TRAWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Trfwrh0)
                    .IsRequired()
                    .HasColumnName("TRFWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Uvycod0)
                    .IsRequired()
                    .HasColumnName("UVYCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Uvyday0).HasColumnName("UVYDAY_0");

                entity.Property(e => e.Uvyday1).HasColumnName("UVYDAY_1");

                entity.Property(e => e.Uvyday2).HasColumnName("UVYDAY_2");

                entity.Property(e => e.Uvyday3).HasColumnName("UVYDAY_3");

                entity.Property(e => e.Uvyday4).HasColumnName("UVYDAY_4");

                entity.Property(e => e.Uvyday5).HasColumnName("UVYDAY_5");

                entity.Property(e => e.Uvyday6).HasColumnName("UVYDAY_6");

                entity.Property(e => e.Wrhflg0).HasColumnName("WRHFLG_0");

                entity.Property(e => e.Wrhges0).HasColumnName("WRHGES_0");
            });

            modelBuilder.Entity<Gaccdudate>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("GACCDUDATE", "VIPCO");

                entity.HasIndex(e => e.Numdud0)
                    .HasName("GACCDUDATE_DUD8")
                    .IsUnique();

                entity.HasIndex(e => new { e.Accnum0, e.Dudlig0 })
                    .HasName("GACCDUDATE_DUD1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Bpr0, e.Bpapay0, e.Numdud0 })
                    .HasName("GACCDUDATE_DUD9")
                    .IsUnique();

                entity.HasIndex(e => new { e.Bprpay0, e.Bpr0, e.Numdud0 })
                    .HasName("GACCDUDATE_DUD7")
                    .IsUnique();

                entity.HasIndex(e => new { e.Flgcle0, e.Accnum0, e.Dudlig0 })
                    .HasName("GACCDUDATE_DUD6")
                    .IsUnique();

                entity.HasIndex(e => new { e.Soinum0, e.Accnum0, e.Dudlig0 })
                    .HasName("GACCDUDATE_DUD2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Bpr0, e.Soinum0, e.Accnum0, e.Dudlig0 })
                    .HasName("GACCDUDATE_DUD4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Bprpay0, e.Soinum0, e.Accnum0, e.Dudlig0 })
                    .HasName("GACCDUDATE_DUD5")
                    .IsUnique();

                entity.HasIndex(e => new { e.Flgcle0, e.Fcy0, e.Bprpay0, e.Duddat0 })
                    .HasName("GACCDUDATE_DUD3");

                entity.HasIndex(e => new { e.Typ0, e.Num0, e.Lig0, e.Dudlig0 })
                    .HasName("GACCDUDATE_DUD0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Accnum0).HasColumnName("ACCNUM_0");

                entity.Property(e => e.Amtcur0)
                    .HasColumnName("AMTCUR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtloc0)
                    .HasColumnName("AMTLOC_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bpapay0)
                    .IsRequired()
                    .HasColumnName("BPAPAY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpr0)
                    .IsRequired()
                    .HasColumnName("BPR_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bprfct0)
                    .IsRequired()
                    .HasColumnName("BPRFCT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bprpay0)
                    .IsRequired()
                    .HasColumnName("BPRPAY_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bprtyp0).HasColumnName("BPRTYP_0");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Datfup0)
                    .HasColumnName("DATFUP_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dep0)
                    .IsRequired()
                    .HasColumnName("DEP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Dinamt0)
                    .HasColumnName("DINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dptcod0)
                    .IsRequired()
                    .HasColumnName("DPTCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Duddat0)
                    .HasColumnName("DUDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dudlig0).HasColumnName("DUDLIG_0");

                entity.Property(e => e.Dudsta0).HasColumnName("DUDSTA_0");

                entity.Property(e => e.Expsendat0)
                    .HasColumnName("EXPSENDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fctvcr0)
                    .IsRequired()
                    .HasColumnName("FCTVCR_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Fcy0)
                    .IsRequired()
                    .HasColumnName("FCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Fiy0).HasColumnName("FIY_0");

                entity.Property(e => e.Flgcle0).HasColumnName("FLGCLE_0");

                entity.Property(e => e.Flgfup0).HasColumnName("FLGFUP_0");

                entity.Property(e => e.Flgpaz0).HasColumnName("FLGPAZ_0");

                entity.Property(e => e.Ibdamt0)
                    .HasColumnName("IBDAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Levfup0).HasColumnName("LEVFUP_0");

                entity.Property(e => e.Lig0).HasColumnName("LIG_0");

                entity.Property(e => e.Num0)
                    .IsRequired()
                    .HasColumnName("NUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Numdud0)
                    .IsRequired()
                    .HasColumnName("NUMDUD_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Pam0)
                    .IsRequired()
                    .HasColumnName("PAM_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pamtyp0).HasColumnName("PAMTYP_0");

                entity.Property(e => e.Paycur0)
                    .HasColumnName("PAYCUR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Paydat0)
                    .HasColumnName("PAYDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Payloc0)
                    .HasColumnName("PAYLOC_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Per0).HasColumnName("PER_0");

                entity.Property(e => e.Sac0)
                    .IsRequired()
                    .HasColumnName("SAC_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Sendat0)
                    .HasColumnName("SENDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Senins0).HasColumnName("SENINS_0");

                entity.Property(e => e.Sns0).HasColumnName("SNS_0");

                entity.Property(e => e.Soi0).HasColumnName("SOI_0");

                entity.Property(e => e.Soinum0)
                    .IsRequired()
                    .HasColumnName("SOINUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tmpcur0)
                    .HasColumnName("TMPCUR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Tmploc0)
                    .HasColumnName("TMPLOC_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Typ0)
                    .IsRequired()
                    .HasColumnName("TYP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Typdud0).HasColumnName("TYPDUD_0");

                entity.Property(e => e.Umrnum0)
                    .IsRequired()
                    .HasColumnName("UMRNUM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat0)
                    .IsRequired()
                    .HasColumnName("VAT_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Gaccount>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("GACCOUNT", "VIPCO");

                entity.HasIndex(e => new { e.Coa0, e.Acc0 })
                    .HasName("GACCOUNT_GAC0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Coa0, e.Accsho0 })
                    .HasName("GACCOUNT_GAC1");

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acc0)
                    .IsRequired()
                    .HasColumnName("ACC_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Accsho0)
                    .IsRequired()
                    .HasColumnName("ACCSHO_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Acs0)
                    .IsRequired()
                    .HasColumnName("ACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Auz0)
                    .IsRequired()
                    .HasColumnName("AUZ_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Auzbpr0).HasColumnName("AUZBPR_0");

                entity.Property(e => e.Auzbpr1).HasColumnName("AUZBPR_1");

                entity.Property(e => e.Auzbpr2).HasColumnName("AUZBPR_2");

                entity.Property(e => e.Auzbpr3).HasColumnName("AUZBPR_3");

                entity.Property(e => e.Auzbpr4).HasColumnName("AUZBPR_4");

                entity.Property(e => e.Auzbpr5).HasColumnName("AUZBPR_5");

                entity.Property(e => e.Auzbpr6).HasColumnName("AUZBPR_6");

                entity.Property(e => e.Auzbpr7).HasColumnName("AUZBPR_7");

                entity.Property(e => e.Auzbpr8).HasColumnName("AUZBPR_8");

                entity.Property(e => e.Auzbpr9).HasColumnName("AUZBPR_9");

                entity.Property(e => e.Bidnum0)
                    .IsRequired()
                    .HasColumnName("BIDNUM_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Bpaadd0)
                    .IsRequired()
                    .HasColumnName("BPAADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Budtrk0).HasColumnName("BUDTRK_0");

                entity.Property(e => e.Ccedef0)
                    .IsRequired()
                    .HasColumnName("CCEDEF_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef1)
                    .IsRequired()
                    .HasColumnName("CCEDEF_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef10)
                    .IsRequired()
                    .HasColumnName("CCEDEF_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef11)
                    .IsRequired()
                    .HasColumnName("CCEDEF_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef12)
                    .IsRequired()
                    .HasColumnName("CCEDEF_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef13)
                    .IsRequired()
                    .HasColumnName("CCEDEF_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef14)
                    .IsRequired()
                    .HasColumnName("CCEDEF_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef15)
                    .IsRequired()
                    .HasColumnName("CCEDEF_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef16)
                    .IsRequired()
                    .HasColumnName("CCEDEF_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef17)
                    .IsRequired()
                    .HasColumnName("CCEDEF_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef18)
                    .IsRequired()
                    .HasColumnName("CCEDEF_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef19)
                    .IsRequired()
                    .HasColumnName("CCEDEF_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef2)
                    .IsRequired()
                    .HasColumnName("CCEDEF_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef3)
                    .IsRequired()
                    .HasColumnName("CCEDEF_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef4)
                    .IsRequired()
                    .HasColumnName("CCEDEF_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef5)
                    .IsRequired()
                    .HasColumnName("CCEDEF_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef6)
                    .IsRequired()
                    .HasColumnName("CCEDEF_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef7)
                    .IsRequired()
                    .HasColumnName("CCEDEF_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef8)
                    .IsRequired()
                    .HasColumnName("CCEDEF_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccedef9)
                    .IsRequired()
                    .HasColumnName("CCEDEF_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Cen0).HasColumnName("CEN_0");

                entity.Property(e => e.Clscod0)
                    .IsRequired()
                    .HasColumnName("CLSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cnvacc10)
                    .IsRequired()
                    .HasColumnName("CNVACC1_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cnvacc100)
                    .IsRequired()
                    .HasColumnName("CNVACC10_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cnvacc20)
                    .IsRequired()
                    .HasColumnName("CNVACC2_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cnvacc30)
                    .IsRequired()
                    .HasColumnName("CNVACC3_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cnvacc40)
                    .IsRequired()
                    .HasColumnName("CNVACC4_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cnvacc50)
                    .IsRequired()
                    .HasColumnName("CNVACC5_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cnvacc60)
                    .IsRequired()
                    .HasColumnName("CNVACC6_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cnvacc70)
                    .IsRequired()
                    .HasColumnName("CNVACC7_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cnvacc80)
                    .IsRequired()
                    .HasColumnName("CNVACC8_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cnvacc90)
                    .IsRequired()
                    .HasColumnName("CNVACC9_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Coa0)
                    .IsRequired()
                    .HasColumnName("COA_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Coanbr0).HasColumnName("COANBR_0");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cretim0).HasColumnName("CRETIM_0");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cslbprace0).HasColumnName("CSLBPRACE_0");

                entity.Property(e => e.Cslcdt0)
                    .IsRequired()
                    .HasColumnName("CSLCDT_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Csldeb0)
                    .IsRequired()
                    .HasColumnName("CSLDEB_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cslflg0).HasColumnName("CSLFLG_0");

                entity.Property(e => e.Cslflgbpr0).HasColumnName("CSLFLGBPR_0");

                entity.Property(e => e.Cslflgflw0).HasColumnName("CSLFLGFLW_0");

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dacdienbr0).HasColumnName("DACDIENBR_0");

                entity.Property(e => e.Das0).HasColumnName("DAS_0");

                entity.Property(e => e.Dastyp0).HasColumnName("DASTYP_0");

                entity.Property(e => e.Defacc0)
                    .IsRequired()
                    .HasColumnName("DEFACC_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc1)
                    .IsRequired()
                    .HasColumnName("DEFACC_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc10)
                    .IsRequired()
                    .HasColumnName("DEFACC_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc11)
                    .IsRequired()
                    .HasColumnName("DEFACC_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc12)
                    .IsRequired()
                    .HasColumnName("DEFACC_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc13)
                    .IsRequired()
                    .HasColumnName("DEFACC_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc14)
                    .IsRequired()
                    .HasColumnName("DEFACC_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc15)
                    .IsRequired()
                    .HasColumnName("DEFACC_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc16)
                    .IsRequired()
                    .HasColumnName("DEFACC_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc17)
                    .IsRequired()
                    .HasColumnName("DEFACC_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc18)
                    .IsRequired()
                    .HasColumnName("DEFACC_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc19)
                    .IsRequired()
                    .HasColumnName("DEFACC_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc2)
                    .IsRequired()
                    .HasColumnName("DEFACC_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc20)
                    .IsRequired()
                    .HasColumnName("DEFACC_20")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc21)
                    .IsRequired()
                    .HasColumnName("DEFACC_21")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc22)
                    .IsRequired()
                    .HasColumnName("DEFACC_22")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc23)
                    .IsRequired()
                    .HasColumnName("DEFACC_23")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc24)
                    .IsRequired()
                    .HasColumnName("DEFACC_24")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc25)
                    .IsRequired()
                    .HasColumnName("DEFACC_25")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc26)
                    .IsRequired()
                    .HasColumnName("DEFACC_26")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc27)
                    .IsRequired()
                    .HasColumnName("DEFACC_27")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc28)
                    .IsRequired()
                    .HasColumnName("DEFACC_28")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc29)
                    .IsRequired()
                    .HasColumnName("DEFACC_29")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc3)
                    .IsRequired()
                    .HasColumnName("DEFACC_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc30)
                    .IsRequired()
                    .HasColumnName("DEFACC_30")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc31)
                    .IsRequired()
                    .HasColumnName("DEFACC_31")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc32)
                    .IsRequired()
                    .HasColumnName("DEFACC_32")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc33)
                    .IsRequired()
                    .HasColumnName("DEFACC_33")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc34)
                    .IsRequired()
                    .HasColumnName("DEFACC_34")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc35)
                    .IsRequired()
                    .HasColumnName("DEFACC_35")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc36)
                    .IsRequired()
                    .HasColumnName("DEFACC_36")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc37)
                    .IsRequired()
                    .HasColumnName("DEFACC_37")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc38)
                    .IsRequired()
                    .HasColumnName("DEFACC_38")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc39)
                    .IsRequired()
                    .HasColumnName("DEFACC_39")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc4)
                    .IsRequired()
                    .HasColumnName("DEFACC_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc40)
                    .IsRequired()
                    .HasColumnName("DEFACC_40")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc41)
                    .IsRequired()
                    .HasColumnName("DEFACC_41")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc42)
                    .IsRequired()
                    .HasColumnName("DEFACC_42")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc43)
                    .IsRequired()
                    .HasColumnName("DEFACC_43")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc44)
                    .IsRequired()
                    .HasColumnName("DEFACC_44")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc45)
                    .IsRequired()
                    .HasColumnName("DEFACC_45")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc46)
                    .IsRequired()
                    .HasColumnName("DEFACC_46")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc47)
                    .IsRequired()
                    .HasColumnName("DEFACC_47")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc48)
                    .IsRequired()
                    .HasColumnName("DEFACC_48")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc49)
                    .IsRequired()
                    .HasColumnName("DEFACC_49")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc5)
                    .IsRequired()
                    .HasColumnName("DEFACC_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc6)
                    .IsRequired()
                    .HasColumnName("DEFACC_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc7)
                    .IsRequired()
                    .HasColumnName("DEFACC_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc8)
                    .IsRequired()
                    .HasColumnName("DEFACC_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Defacc9)
                    .IsRequired()
                    .HasColumnName("DEFACC_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Des0)
                    .IsRequired()
                    .HasColumnName("DES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Dessho0)
                    .IsRequired()
                    .HasColumnName("DESSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Dif0).HasColumnName("DIF_0");

                entity.Property(e => e.Difflg0).HasColumnName("DIFFLG_0");

                entity.Property(e => e.Dsp0)
                    .IsRequired()
                    .HasColumnName("DSP_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Enaflg0).HasColumnName("ENAFLG_0");

                entity.Property(e => e.Esdtrk0).HasColumnName("ESDTRK_0");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fcy0)
                    .IsRequired()
                    .HasColumnName("FCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Flg2810).HasColumnName("FLG281_0");

                entity.Property(e => e.Flgabl0).HasColumnName("FLGABL_0");

                entity.Property(e => e.Flgdep0).HasColumnName("FLGDEP_0");

                entity.Property(e => e.Flgexpcre0).HasColumnName("FLGEXPCRE_0");

                entity.Property(e => e.Flguom0).HasColumnName("FLGUOM_0");

                entity.Property(e => e.Flgvat0).HasColumnName("FLGVAT_0");

                entity.Property(e => e.Flocdt0)
                    .IsRequired()
                    .HasColumnName("FLOCDT_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Flodeb0)
                    .IsRequired()
                    .HasColumnName("FLODEB_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Frwcur0).HasColumnName("FRWCUR_0");

                entity.Property(e => e.Gacacn0).HasColumnName("GACACN_0");

                entity.Property(e => e.Gacpvs0)
                    .IsRequired()
                    .HasColumnName("GACPVS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Losgaignr0).HasColumnName("LOSGAIGNR_0");

                entity.Property(e => e.Lvatyp0).HasColumnName("LVATYP_0");

                entity.Property(e => e.Mtc0).HasColumnName("MTC_0");

                entity.Property(e => e.Obyipt0).HasColumnName("OBYIPT_0");

                entity.Property(e => e.Obyipt1).HasColumnName("OBYIPT_1");

                entity.Property(e => e.Obyipt10).HasColumnName("OBYIPT_10");

                entity.Property(e => e.Obyipt11).HasColumnName("OBYIPT_11");

                entity.Property(e => e.Obyipt12).HasColumnName("OBYIPT_12");

                entity.Property(e => e.Obyipt13).HasColumnName("OBYIPT_13");

                entity.Property(e => e.Obyipt14).HasColumnName("OBYIPT_14");

                entity.Property(e => e.Obyipt15).HasColumnName("OBYIPT_15");

                entity.Property(e => e.Obyipt16).HasColumnName("OBYIPT_16");

                entity.Property(e => e.Obyipt17).HasColumnName("OBYIPT_17");

                entity.Property(e => e.Obyipt18).HasColumnName("OBYIPT_18");

                entity.Property(e => e.Obyipt19).HasColumnName("OBYIPT_19");

                entity.Property(e => e.Obyipt2).HasColumnName("OBYIPT_2");

                entity.Property(e => e.Obyipt20).HasColumnName("OBYIPT_20");

                entity.Property(e => e.Obyipt21).HasColumnName("OBYIPT_21");

                entity.Property(e => e.Obyipt22).HasColumnName("OBYIPT_22");

                entity.Property(e => e.Obyipt23).HasColumnName("OBYIPT_23");

                entity.Property(e => e.Obyipt24).HasColumnName("OBYIPT_24");

                entity.Property(e => e.Obyipt25).HasColumnName("OBYIPT_25");

                entity.Property(e => e.Obyipt26).HasColumnName("OBYIPT_26");

                entity.Property(e => e.Obyipt27).HasColumnName("OBYIPT_27");

                entity.Property(e => e.Obyipt28).HasColumnName("OBYIPT_28");

                entity.Property(e => e.Obyipt29).HasColumnName("OBYIPT_29");

                entity.Property(e => e.Obyipt3).HasColumnName("OBYIPT_3");

                entity.Property(e => e.Obyipt30).HasColumnName("OBYIPT_30");

                entity.Property(e => e.Obyipt31).HasColumnName("OBYIPT_31");

                entity.Property(e => e.Obyipt32).HasColumnName("OBYIPT_32");

                entity.Property(e => e.Obyipt33).HasColumnName("OBYIPT_33");

                entity.Property(e => e.Obyipt34).HasColumnName("OBYIPT_34");

                entity.Property(e => e.Obyipt35).HasColumnName("OBYIPT_35");

                entity.Property(e => e.Obyipt36).HasColumnName("OBYIPT_36");

                entity.Property(e => e.Obyipt37).HasColumnName("OBYIPT_37");

                entity.Property(e => e.Obyipt38).HasColumnName("OBYIPT_38");

                entity.Property(e => e.Obyipt39).HasColumnName("OBYIPT_39");

                entity.Property(e => e.Obyipt4).HasColumnName("OBYIPT_4");

                entity.Property(e => e.Obyipt40).HasColumnName("OBYIPT_40");

                entity.Property(e => e.Obyipt41).HasColumnName("OBYIPT_41");

                entity.Property(e => e.Obyipt42).HasColumnName("OBYIPT_42");

                entity.Property(e => e.Obyipt43).HasColumnName("OBYIPT_43");

                entity.Property(e => e.Obyipt44).HasColumnName("OBYIPT_44");

                entity.Property(e => e.Obyipt45).HasColumnName("OBYIPT_45");

                entity.Property(e => e.Obyipt46).HasColumnName("OBYIPT_46");

                entity.Property(e => e.Obyipt47).HasColumnName("OBYIPT_47");

                entity.Property(e => e.Obyipt48).HasColumnName("OBYIPT_48");

                entity.Property(e => e.Obyipt49).HasColumnName("OBYIPT_49");

                entity.Property(e => e.Obyipt5).HasColumnName("OBYIPT_5");

                entity.Property(e => e.Obyipt6).HasColumnName("OBYIPT_6");

                entity.Property(e => e.Obyipt7).HasColumnName("OBYIPT_7");

                entity.Property(e => e.Obyipt8).HasColumnName("OBYIPT_8");

                entity.Property(e => e.Obyipt9).HasColumnName("OBYIPT_9");

                entity.Property(e => e.Othcoa0)
                    .IsRequired()
                    .HasColumnName("OTHCOA_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa1)
                    .IsRequired()
                    .HasColumnName("OTHCOA_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa10)
                    .IsRequired()
                    .HasColumnName("OTHCOA_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa11)
                    .IsRequired()
                    .HasColumnName("OTHCOA_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa12)
                    .IsRequired()
                    .HasColumnName("OTHCOA_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa13)
                    .IsRequired()
                    .HasColumnName("OTHCOA_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa14)
                    .IsRequired()
                    .HasColumnName("OTHCOA_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa15)
                    .IsRequired()
                    .HasColumnName("OTHCOA_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa16)
                    .IsRequired()
                    .HasColumnName("OTHCOA_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa17)
                    .IsRequired()
                    .HasColumnName("OTHCOA_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa18)
                    .IsRequired()
                    .HasColumnName("OTHCOA_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa19)
                    .IsRequired()
                    .HasColumnName("OTHCOA_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa2)
                    .IsRequired()
                    .HasColumnName("OTHCOA_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa20)
                    .IsRequired()
                    .HasColumnName("OTHCOA_20")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa21)
                    .IsRequired()
                    .HasColumnName("OTHCOA_21")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa22)
                    .IsRequired()
                    .HasColumnName("OTHCOA_22")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa23)
                    .IsRequired()
                    .HasColumnName("OTHCOA_23")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa24)
                    .IsRequired()
                    .HasColumnName("OTHCOA_24")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa25)
                    .IsRequired()
                    .HasColumnName("OTHCOA_25")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa26)
                    .IsRequired()
                    .HasColumnName("OTHCOA_26")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa27)
                    .IsRequired()
                    .HasColumnName("OTHCOA_27")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa28)
                    .IsRequired()
                    .HasColumnName("OTHCOA_28")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa29)
                    .IsRequired()
                    .HasColumnName("OTHCOA_29")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa3)
                    .IsRequired()
                    .HasColumnName("OTHCOA_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa30)
                    .IsRequired()
                    .HasColumnName("OTHCOA_30")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa31)
                    .IsRequired()
                    .HasColumnName("OTHCOA_31")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa32)
                    .IsRequired()
                    .HasColumnName("OTHCOA_32")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa33)
                    .IsRequired()
                    .HasColumnName("OTHCOA_33")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa34)
                    .IsRequired()
                    .HasColumnName("OTHCOA_34")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa35)
                    .IsRequired()
                    .HasColumnName("OTHCOA_35")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa36)
                    .IsRequired()
                    .HasColumnName("OTHCOA_36")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa37)
                    .IsRequired()
                    .HasColumnName("OTHCOA_37")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa38)
                    .IsRequired()
                    .HasColumnName("OTHCOA_38")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa39)
                    .IsRequired()
                    .HasColumnName("OTHCOA_39")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa4)
                    .IsRequired()
                    .HasColumnName("OTHCOA_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa40)
                    .IsRequired()
                    .HasColumnName("OTHCOA_40")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa41)
                    .IsRequired()
                    .HasColumnName("OTHCOA_41")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa42)
                    .IsRequired()
                    .HasColumnName("OTHCOA_42")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa43)
                    .IsRequired()
                    .HasColumnName("OTHCOA_43")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa44)
                    .IsRequired()
                    .HasColumnName("OTHCOA_44")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa45)
                    .IsRequired()
                    .HasColumnName("OTHCOA_45")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa46)
                    .IsRequired()
                    .HasColumnName("OTHCOA_46")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa47)
                    .IsRequired()
                    .HasColumnName("OTHCOA_47")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa48)
                    .IsRequired()
                    .HasColumnName("OTHCOA_48")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa49)
                    .IsRequired()
                    .HasColumnName("OTHCOA_49")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa5)
                    .IsRequired()
                    .HasColumnName("OTHCOA_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa6)
                    .IsRequired()
                    .HasColumnName("OTHCOA_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa7)
                    .IsRequired()
                    .HasColumnName("OTHCOA_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa8)
                    .IsRequired()
                    .HasColumnName("OTHCOA_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Othcoa9)
                    .IsRequired()
                    .HasColumnName("OTHCOA_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Rittyp0).HasColumnName("RITTYP_0");

                entity.Property(e => e.Rptcodcdt0)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcodcdt1)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_1")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcodcdt2)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_2")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcodcdt3)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_3")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcodcdt4)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_4")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcodcdt5)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_5")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcodcdt6)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_6")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcodcdt7)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_7")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcodcdt8)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_8")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcodcdt9)
                    .IsRequired()
                    .HasColumnName("RPTCODCDT_9")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb0)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb1)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_1")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb2)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_2")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb3)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_3")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb4)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_4")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb5)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_5")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb6)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_6")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb7)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_7")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb8)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_8")
                    .HasMaxLength(10);

                entity.Property(e => e.Rptcoddeb9)
                    .IsRequired()
                    .HasColumnName("RPTCODDEB_9")
                    .HasMaxLength(10);

                entity.Property(e => e.Sac0).HasColumnName("SAC_0");

                entity.Property(e => e.Scracc0)
                    .IsRequired()
                    .HasColumnName("SCRACC_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc1)
                    .IsRequired()
                    .HasColumnName("SCRACC_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc10)
                    .IsRequired()
                    .HasColumnName("SCRACC_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc11)
                    .IsRequired()
                    .HasColumnName("SCRACC_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc12)
                    .IsRequired()
                    .HasColumnName("SCRACC_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc13)
                    .IsRequired()
                    .HasColumnName("SCRACC_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc14)
                    .IsRequired()
                    .HasColumnName("SCRACC_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc15)
                    .IsRequired()
                    .HasColumnName("SCRACC_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc16)
                    .IsRequired()
                    .HasColumnName("SCRACC_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc17)
                    .IsRequired()
                    .HasColumnName("SCRACC_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc18)
                    .IsRequired()
                    .HasColumnName("SCRACC_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc19)
                    .IsRequired()
                    .HasColumnName("SCRACC_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc2)
                    .IsRequired()
                    .HasColumnName("SCRACC_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc20)
                    .IsRequired()
                    .HasColumnName("SCRACC_20")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc21)
                    .IsRequired()
                    .HasColumnName("SCRACC_21")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc22)
                    .IsRequired()
                    .HasColumnName("SCRACC_22")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc23)
                    .IsRequired()
                    .HasColumnName("SCRACC_23")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc24)
                    .IsRequired()
                    .HasColumnName("SCRACC_24")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc25)
                    .IsRequired()
                    .HasColumnName("SCRACC_25")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc26)
                    .IsRequired()
                    .HasColumnName("SCRACC_26")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc27)
                    .IsRequired()
                    .HasColumnName("SCRACC_27")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc28)
                    .IsRequired()
                    .HasColumnName("SCRACC_28")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc29)
                    .IsRequired()
                    .HasColumnName("SCRACC_29")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc3)
                    .IsRequired()
                    .HasColumnName("SCRACC_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc30)
                    .IsRequired()
                    .HasColumnName("SCRACC_30")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc31)
                    .IsRequired()
                    .HasColumnName("SCRACC_31")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc32)
                    .IsRequired()
                    .HasColumnName("SCRACC_32")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc33)
                    .IsRequired()
                    .HasColumnName("SCRACC_33")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc34)
                    .IsRequired()
                    .HasColumnName("SCRACC_34")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc35)
                    .IsRequired()
                    .HasColumnName("SCRACC_35")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc36)
                    .IsRequired()
                    .HasColumnName("SCRACC_36")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc37)
                    .IsRequired()
                    .HasColumnName("SCRACC_37")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc38)
                    .IsRequired()
                    .HasColumnName("SCRACC_38")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc39)
                    .IsRequired()
                    .HasColumnName("SCRACC_39")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc4)
                    .IsRequired()
                    .HasColumnName("SCRACC_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc40)
                    .IsRequired()
                    .HasColumnName("SCRACC_40")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc41)
                    .IsRequired()
                    .HasColumnName("SCRACC_41")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc42)
                    .IsRequired()
                    .HasColumnName("SCRACC_42")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc43)
                    .IsRequired()
                    .HasColumnName("SCRACC_43")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc44)
                    .IsRequired()
                    .HasColumnName("SCRACC_44")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc45)
                    .IsRequired()
                    .HasColumnName("SCRACC_45")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc46)
                    .IsRequired()
                    .HasColumnName("SCRACC_46")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc47)
                    .IsRequired()
                    .HasColumnName("SCRACC_47")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc48)
                    .IsRequired()
                    .HasColumnName("SCRACC_48")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc49)
                    .IsRequired()
                    .HasColumnName("SCRACC_49")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc5)
                    .IsRequired()
                    .HasColumnName("SCRACC_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc6)
                    .IsRequired()
                    .HasColumnName("SCRACC_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc7)
                    .IsRequired()
                    .HasColumnName("SCRACC_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc8)
                    .IsRequired()
                    .HasColumnName("SCRACC_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Scracc9)
                    .IsRequired()
                    .HasColumnName("SCRACC_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Snsblc0).HasColumnName("SNSBLC_0");

                entity.Property(e => e.Snsdef0).HasColumnName("SNSDEF_0");

                entity.Property(e => e.Subacc0)
                    .IsRequired()
                    .HasColumnName("SUBACC_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Subbpr0)
                    .IsRequired()
                    .HasColumnName("SUBBPR_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Timdsp0)
                    .IsRequired()
                    .HasColumnName("TIMDSP_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Typ2810).HasColumnName("TYP281_0");

                entity.Property(e => e.Typrat0).HasColumnName("TYPRAT_0");

                entity.Property(e => e.Typratflg0).HasColumnName("TYPRATFLG_0");

                entity.Property(e => e.Typvatctl0).HasColumnName("TYPVATCTL_0");

                entity.Property(e => e.Uom0)
                    .IsRequired()
                    .HasColumnName("UOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Updblc0).HasColumnName("UPDBLC_0");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updtim0).HasColumnName("UPDTIM_0");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Valuom0)
                    .HasColumnName("VALUOM_0")
                    .HasColumnType("numeric(21, 10)");

                entity.Property(e => e.Vat0)
                    .IsRequired()
                    .HasColumnName("VAT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat1)
                    .IsRequired()
                    .HasColumnName("VAT_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat2)
                    .IsRequired()
                    .HasColumnName("VAT_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Vatipt0).HasColumnName("VATIPT_0");

                entity.Property(e => e.Vlyend0)
                    .HasColumnName("VLYEND_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vlystr0)
                    .HasColumnName("VLYSTR_0")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<Itmbps>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ITMBPS", "VIPCO");

                entity.HasIndex(e => new { e.Bpsnum0, e.Itmdesbps0 })
                    .HasName("ITMBPS_ITP3");

                entity.HasIndex(e => new { e.Bpsnum0, e.Itmrefbps0 })
                    .HasName("ITMBPS_ITP2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itmref0, e.Bomalt0 })
                    .HasName("ITMBPS_ITP4");

                entity.HasIndex(e => new { e.Itmref0, e.Bpsnum0 })
                    .HasName("ITMBPS_ITP0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itmref0, e.Pio0, e.Bpsnum0 })
                    .HasName("ITMBPS_ITP1")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bomalt0).HasColumnName("BOMALT_0");

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cfgvcrnum0)
                    .IsRequired()
                    .HasColumnName("CFGVCRNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cpramt0)
                    .HasColumnName("CPRAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cprcoe0)
                    .HasColumnName("CPRCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(8);

                entity.Property(e => e.Ctmbpsflg0).HasColumnName("CTMBPSFLG_0");

                entity.Property(e => e.Douflg0).HasColumnName("DOUFLG_0");

                entity.Property(e => e.Eancodbps0)
                    .IsRequired()
                    .HasColumnName("EANCODBPS_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Eecincrat0)
                    .HasColumnName("EECINCRAT_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Itmdesbps0)
                    .IsRequired()
                    .HasColumnName("ITMDESBPS_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Itmrefbps0)
                    .IsRequired()
                    .HasColumnName("ITMREFBPS_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Loaeccflg0).HasColumnName("LOAECCFLG_0");

                entity.Property(e => e.Mattol0)
                    .IsRequired()
                    .HasColumnName("MATTOL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pcu0)
                    .IsRequired()
                    .HasColumnName("PCU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcupuucoe0)
                    .HasColumnName("PCUPUUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pio0).HasColumnName("PIO_0");

                entity.Property(e => e.Purminqty0)
                    .HasColumnName("PURMINQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Puu0)
                    .IsRequired()
                    .HasColumnName("PUU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Puustucoe0)
                    .HasColumnName("PUUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Qlycrd0)
                    .IsRequired()
                    .HasColumnName("QLYCRD_0")
                    .HasMaxLength(8);

                entity.Property(e => e.Qlymrk0).HasColumnName("QLYMRK_0");

                entity.Property(e => e.Quaadxuid0).HasColumnName("QUAADXUID_0");

                entity.Property(e => e.Quaflg0).HasColumnName("QUAFLG_0");

                entity.Property(e => e.Quafry0).HasColumnName("QUAFRY_0");

                entity.Property(e => e.Quanum0).HasColumnName("QUANUM_0");

                entity.Property(e => e.Quanumuid0).HasColumnName("QUANUMUID_0");

                entity.Property(e => e.Scolti0).HasColumnName("SCOLTI_0");

                entity.Property(e => e.Stcnum0)
                    .IsRequired()
                    .HasColumnName("STCNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tex0)
                    .IsRequired()
                    .HasColumnName("TEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(8);
            });

            modelBuilder.Entity<Itmcateg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ITMCATEG", "VIPCO");

                entity.HasIndex(e => new { e.Stofcy0, e.Tclcod0 })
                    .HasName("ITMCATEG_ITG0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Tclcod0, e.Stofcy0 })
                    .HasName("ITMCATEG_ITG1")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Abccls0).HasColumnName("ABCCLS_0");

                entity.Property(e => e.Acccod0)
                    .IsRequired()
                    .HasColumnName("ACCCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Allrulmat0)
                    .IsRequired()
                    .HasColumnName("ALLRULMAT_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Allrulmfg0)
                    .IsRequired()
                    .HasColumnName("ALLRULMFG_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Allrulord0)
                    .IsRequired()
                    .HasColumnName("ALLRULORD_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Allrulscc0)
                    .IsRequired()
                    .HasColumnName("ALLRULSCC_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Allrulsco0)
                    .IsRequired()
                    .HasColumnName("ALLRULSCO_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Allrulshi0)
                    .IsRequired()
                    .HasColumnName("ALLRULSHI_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Allrulsre0)
                    .IsRequired()
                    .HasColumnName("ALLRULSRE_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Allrultrf0)
                    .IsRequired()
                    .HasColumnName("ALLRULTRF_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Baspriori0).HasColumnName("BASPRIORI_0");

                entity.Property(e => e.Brdcod0).HasColumnName("BRDCOD_0");

                entity.Property(e => e.Budcstupd0).HasColumnName("BUDCSTUPD_0");

                entity.Property(e => e.Buy0)
                    .IsRequired()
                    .HasColumnName("BUY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Cfglin0)
                    .IsRequired()
                    .HasColumnName("CFGLIN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Clepctaut0)
                    .HasColumnName("CLEPCTAUT_0")
                    .HasColumnType("numeric(10, 4)");

                entity.Property(e => e.Cpramt0)
                    .HasColumnName("CPRAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cprcoe0)
                    .HasColumnName("CPRCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ctmflg0).HasColumnName("CTMFLG_0");

                entity.Property(e => e.Ctmqty0)
                    .HasColumnName("CTMQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cuncod0).HasColumnName("CUNCOD_0");

                entity.Property(e => e.Cutcstupd0).HasColumnName("CUTCSTUPD_0");

                entity.Property(e => e.Dacpcucoe0).HasColumnName("DACPCUCOE_0");

                entity.Property(e => e.Dacpcucoe1).HasColumnName("DACPCUCOE_1");

                entity.Property(e => e.Dacpcucoe2).HasColumnName("DACPCUCOE_2");

                entity.Property(e => e.Dacpcucoe3).HasColumnName("DACPCUCOE_3");

                entity.Property(e => e.Dacpuucoe0).HasColumnName("DACPUUCOE_0");

                entity.Property(e => e.Dacsaucoe0).HasColumnName("DACSAUCOE_0");

                entity.Property(e => e.Daycov0).HasColumnName("DAYCOV_0");

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Dlvflg0).HasColumnName("DLVFLG_0");

                entity.Property(e => e.Eccflg0).HasColumnName("ECCFLG_0");

                entity.Property(e => e.Eccmaj0)
                    .IsRequired()
                    .HasColumnName("ECCMAJ_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eccmin0)
                    .IsRequired()
                    .HasColumnName("ECCMIN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eccsto0).HasColumnName("ECCSTO_0");

                entity.Property(e => e.Eeu0)
                    .IsRequired()
                    .HasColumnName("EEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Eeustucoe0)
                    .HasColumnName("EEUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Exymgtcod0).HasColumnName("EXYMGTCOD_0");

                entity.Property(e => e.Exysta0)
                    .IsRequired()
                    .HasColumnName("EXYSTA_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Fimhor0).HasColumnName("FIMHOR_0");

                entity.Property(e => e.Fimhoruom0).HasColumnName("FIMHORUOM_0");

                entity.Property(e => e.Flgfas0).HasColumnName("FLGFAS_0");

                entity.Property(e => e.Foh0).HasColumnName("FOH_0");

                entity.Property(e => e.Fohuot0).HasColumnName("FOHUOT_0");

                entity.Property(e => e.Frtcls0)
                    .IsRequired()
                    .HasColumnName("FRTCLS_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Frthor0).HasColumnName("FRTHOR_0");

                entity.Property(e => e.Frthoruom0).HasColumnName("FRTHORUOM_0");

                entity.Property(e => e.Genflg0).HasColumnName("GENFLG_0");

                entity.Property(e => e.Gloaaaflg0).HasColumnName("GLOAAAFLG_0");

                entity.Property(e => e.Gloqqqflg0).HasColumnName("GLOQQQFLG_0");

                entity.Property(e => e.Glorrrflg0).HasColumnName("GLORRRFLG_0");

                entity.Property(e => e.Intflg0).HasColumnName("INTFLG_0");

                entity.Property(e => e.Invcnd0)
                    .IsRequired()
                    .HasColumnName("INVCND_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Invprodtyp0).HasColumnName("INVPRODTYP_0");

                entity.Property(e => e.Itmcremod0).HasColumnName("ITMCREMOD_0");

                entity.Property(e => e.Itmrefcou0)
                    .IsRequired()
                    .HasColumnName("ITMREFCOU_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Itmsfttyp0).HasColumnName("ITMSFTTYP_0");

                entity.Property(e => e.Itmtyp0).HasColumnName("ITMTYP_0");

                entity.Property(e => e.Itmvou0)
                    .HasColumnName("ITMVOU_0")
                    .HasColumnType("numeric(12, 4)");

                entity.Property(e => e.Itmwei0)
                    .HasColumnName("ITMWEI_0")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Lbefmt0)
                    .IsRequired()
                    .HasColumnName("LBEFMT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Lbefmt1)
                    .IsRequired()
                    .HasColumnName("LBEFMT_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Lbefmt2)
                    .IsRequired()
                    .HasColumnName("LBEFMT_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Lbefmt3)
                    .IsRequired()
                    .HasColumnName("LBEFMT_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Lndflg0).HasColumnName("LNDFLG_0");

                entity.Property(e => e.Loaeccflg0).HasColumnName("LOAECCFLG_0");

                entity.Property(e => e.Locdes0).HasColumnName("LOCDES_0");

                entity.Property(e => e.Locdes1).HasColumnName("LOCDES_1");

                entity.Property(e => e.Locdes10).HasColumnName("LOCDES_10");

                entity.Property(e => e.Locdes11).HasColumnName("LOCDES_11");

                entity.Property(e => e.Locdes12).HasColumnName("LOCDES_12");

                entity.Property(e => e.Locdes13).HasColumnName("LOCDES_13");

                entity.Property(e => e.Locdes14).HasColumnName("LOCDES_14");

                entity.Property(e => e.Locdes2).HasColumnName("LOCDES_2");

                entity.Property(e => e.Locdes3).HasColumnName("LOCDES_3");

                entity.Property(e => e.Locdes4).HasColumnName("LOCDES_4");

                entity.Property(e => e.Locdes5).HasColumnName("LOCDES_5");

                entity.Property(e => e.Locdes6).HasColumnName("LOCDES_6");

                entity.Property(e => e.Locdes7).HasColumnName("LOCDES_7");

                entity.Property(e => e.Locdes8).HasColumnName("LOCDES_8");

                entity.Property(e => e.Locdes9).HasColumnName("LOCDES_9");

                entity.Property(e => e.Locmgtcod0).HasColumnName("LOCMGTCOD_0");

                entity.Property(e => e.Lotcou0)
                    .IsRequired()
                    .HasColumnName("LOTCOU_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Lotmgtcod0).HasColumnName("LOTMGTCOD_0");

                entity.Property(e => e.Mattol0)
                    .IsRequired()
                    .HasColumnName("MATTOL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Matwrh0)
                    .IsRequired()
                    .HasColumnName("MATWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Maxqty0)
                    .HasColumnName("MAXQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Maxsto0)
                    .HasColumnName("MAXSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Mceflg0).HasColumnName("MCEFLG_0");

                entity.Property(e => e.Mfgflg0).HasColumnName("MFGFLG_0");

                entity.Property(e => e.Mfglotqty0)
                    .HasColumnName("MFGLOTQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Mfgshtcod0).HasColumnName("MFGSHTCOD_0");

                entity.Property(e => e.Mfgwrh0)
                    .IsRequired()
                    .HasColumnName("MFGWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Minqty0)
                    .HasColumnName("MINQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Minrmnprc0)
                    .HasColumnName("MINRMNPRC_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Negsto0).HasColumnName("NEGSTO_0");

                entity.Property(e => e.Nmfc0)
                    .IsRequired()
                    .HasColumnName("NMFC_0")
                    .HasMaxLength(9);

                entity.Property(e => e.Ofs0)
                    .HasColumnName("OFS_0")
                    .HasColumnType("numeric(9, 4)");

                entity.Property(e => e.Ordwrh0)
                    .IsRequired()
                    .HasColumnName("ORDWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Otrstyp0).HasColumnName("OTRSTYP_0");

                entity.Property(e => e.Otrstyp1).HasColumnName("OTRSTYP_1");

                entity.Property(e => e.Otrstyp2).HasColumnName("OTRSTYP_2");

                entity.Property(e => e.Otrstyp3).HasColumnName("OTRSTYP_3");

                entity.Property(e => e.Otrstyp4).HasColumnName("OTRSTYP_4");

                entity.Property(e => e.Ovecod0)
                    .IsRequired()
                    .HasColumnName("OVECOD_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecod1)
                    .IsRequired()
                    .HasColumnName("OVECOD_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecod2)
                    .IsRequired()
                    .HasColumnName("OVECOD_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecod3)
                    .IsRequired()
                    .HasColumnName("OVECOD_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecod4)
                    .IsRequired()
                    .HasColumnName("OVECOD_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecpnflg0).HasColumnName("OVECPNFLG_0");

                entity.Property(e => e.Ovecpnflg1).HasColumnName("OVECPNFLG_1");

                entity.Property(e => e.Ovecpnflg2).HasColumnName("OVECPNFLG_2");

                entity.Property(e => e.Ovecpnflg3).HasColumnName("OVECPNFLG_3");

                entity.Property(e => e.Ovecpnflg4).HasColumnName("OVECPNFLG_4");

                entity.Property(e => e.Pcccod0)
                    .IsRequired()
                    .HasColumnName("PCCCOD_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Pck0)
                    .IsRequired()
                    .HasColumnName("PCK_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pckcap0)
                    .HasColumnName("PCKCAP_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pckflg0).HasColumnName("PCKFLG_0");

                entity.Property(e => e.Pckstkflg0).HasColumnName("PCKSTKFLG_0");

                entity.Property(e => e.Pcu0)
                    .IsRequired()
                    .HasColumnName("PCU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcu1)
                    .IsRequired()
                    .HasColumnName("PCU_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcu2)
                    .IsRequired()
                    .HasColumnName("PCU_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcu3)
                    .IsRequired()
                    .HasColumnName("PCU_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcurul0).HasColumnName("PCURUL_0");

                entity.Property(e => e.Pcurul1).HasColumnName("PCURUL_1");

                entity.Property(e => e.Pcurul2).HasColumnName("PCURUL_2");

                entity.Property(e => e.Pcurul3).HasColumnName("PCURUL_3");

                entity.Property(e => e.Pcustucoe0)
                    .HasColumnName("PCUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pcustucoe1)
                    .HasColumnName("PCUSTUCOE_1")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pcustucoe2)
                    .HasColumnName("PCUSTUCOE_2")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pcustucoe3)
                    .HasColumnName("PCUSTUCOE_3")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Phaflg0).HasColumnName("PHAFLG_0");

                entity.Property(e => e.Plaacs0)
                    .IsRequired()
                    .HasColumnName("PLAACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Planner0)
                    .IsRequired()
                    .HasColumnName("PLANNER_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Plh0).HasColumnName("PLH_0");

                entity.Property(e => e.Plhuot0).HasColumnName("PLHUOT_0");

                entity.Property(e => e.Prqflg0).HasColumnName("PRQFLG_0");

                entity.Property(e => e.Ptocod0)
                    .IsRequired()
                    .HasColumnName("PTOCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Purflg0).HasColumnName("PURFLG_0");

                entity.Property(e => e.Purpriprc0)
                    .HasColumnName("PURPRIPRC_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Puu0)
                    .IsRequired()
                    .HasColumnName("PUU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Puustucoe0)
                    .HasColumnName("PUUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Qlycrd0)
                    .IsRequired()
                    .HasColumnName("QLYCRD_0")
                    .HasMaxLength(8);

                entity.Property(e => e.Quaacs0)
                    .IsRequired()
                    .HasColumnName("QUAACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Quaflg0).HasColumnName("QUAFLG_0");

                entity.Property(e => e.Rcpflg0).HasColumnName("RCPFLG_0");

                entity.Property(e => e.Reocod0).HasColumnName("REOCOD_0");

                entity.Property(e => e.Reofcy0)
                    .IsRequired()
                    .HasColumnName("REOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Reomgtcod0).HasColumnName("REOMGTCOD_0");

                entity.Property(e => e.Reominqty0)
                    .HasColumnName("REOMINQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Reoper0).HasColumnName("REOPER_0");

                entity.Property(e => e.Reopol0)
                    .IsRequired()
                    .HasColumnName("REOPOL_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Reotsd0)
                    .HasColumnName("REOTSD_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Safsto0)
                    .HasColumnName("SAFSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Salflg0).HasColumnName("SALFLG_0");

                entity.Property(e => e.Salrmnprc0)
                    .HasColumnName("SALRMNPRC_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Sau0)
                    .IsRequired()
                    .HasColumnName("SAU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Saustucoe0)
                    .HasColumnName("SAUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Sccwrh0)
                    .IsRequired()
                    .HasColumnName("SCCWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Scowrh0)
                    .IsRequired()
                    .HasColumnName("SCOWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Scpflg0).HasColumnName("SCPFLG_0");

                entity.Property(e => e.Scsflg0).HasColumnName("SCSFLG_0");

                entity.Property(e => e.Sercou0)
                    .IsRequired()
                    .HasColumnName("SERCOU_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sermgtcod0).HasColumnName("SERMGTCOD_0");

                entity.Property(e => e.Sescod0)
                    .IsRequired()
                    .HasColumnName("SESCOD_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Shiwrh0)
                    .IsRequired()
                    .HasColumnName("SHIWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Shr0)
                    .HasColumnName("SHR_0")
                    .HasColumnType("numeric(10, 4)");

                entity.Property(e => e.Simcstupd0).HasColumnName("SIMCSTUPD_0");

                entity.Property(e => e.Srewrh0)
                    .IsRequired()
                    .HasColumnName("SREWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sstcod0)
                    .IsRequired()
                    .HasColumnName("SSTCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Ssu0)
                    .IsRequired()
                    .HasColumnName("SSU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Ssustucoe0)
                    .HasColumnName("SSUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Stcnum0)
                    .IsRequired()
                    .HasColumnName("STCNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Stdcstupd0).HasColumnName("STDCSTUPD_0");

                entity.Property(e => e.Stdflg0).HasColumnName("STDFLG_0");

                entity.Property(e => e.Stocod0).HasColumnName("STOCOD_0");

                entity.Property(e => e.Stofcy0)
                    .IsRequired()
                    .HasColumnName("STOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Stomgtcod0).HasColumnName("STOMGTCOD_0");

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Stulbefmt0)
                    .IsRequired()
                    .HasColumnName("STULBEFMT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Tclcod0)
                    .IsRequired()
                    .HasColumnName("TCLCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Tcldes0)
                    .IsRequired()
                    .HasColumnName("TCLDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Tclsho0)
                    .IsRequired()
                    .HasColumnName("TCLSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Tooflg0).HasColumnName("TOOFLG_0");

                entity.Property(e => e.Trfwrh0)
                    .IsRequired()
                    .HasColumnName("TRFWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Trkcod0).HasColumnName("TRKCOD_0");

                entity.Property(e => e.Trklev0).HasColumnName("TRKLEV_0");

                entity.Property(e => e.Tsicod0)
                    .IsRequired()
                    .HasColumnName("TSICOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod1)
                    .IsRequired()
                    .HasColumnName("TSICOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod2)
                    .IsRequired()
                    .HasColumnName("TSICOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod3)
                    .IsRequired()
                    .HasColumnName("TSICOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod4)
                    .IsRequired()
                    .HasColumnName("TSICOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacitm0)
                    .IsRequired()
                    .HasColumnName("VACITM_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacitm1)
                    .IsRequired()
                    .HasColumnName("VACITM_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacitm2)
                    .IsRequired()
                    .HasColumnName("VACITM_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Vltcod0)
                    .IsRequired()
                    .HasColumnName("VLTCOD_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Vou0)
                    .IsRequired()
                    .HasColumnName("VOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Weu0)
                    .IsRequired()
                    .HasColumnName("WEU_0")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<Itmfacilit>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ITMFACILIT", "VIPCO");

                entity.HasIndex(e => new { e.Itmref0, e.Stofcy0 })
                    .HasName("ITMFACILIT_ITF0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Stofcy0, e.Itmref0 })
                    .HasName("ITMFACILIT_ITF1")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Abccls0).HasColumnName("ABCCLS_0");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Budcstupd0).HasColumnName("BUDCSTUPD_0");

                entity.Property(e => e.Buy0)
                    .IsRequired()
                    .HasColumnName("BUY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfgvcrnum0)
                    .IsRequired()
                    .HasColumnName("CFGVCRNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Clepctaut0)
                    .HasColumnName("CLEPCTAUT_0")
                    .HasColumnType("numeric(10, 4)");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cstrou0)
                    .IsRequired()
                    .HasColumnName("CSTROU_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cstroualt0).HasColumnName("CSTROUALT_0");

                entity.Property(e => e.Cuncod0).HasColumnName("CUNCOD_0");

                entity.Property(e => e.Cunflg0).HasColumnName("CUNFLG_0");

                entity.Property(e => e.Cunlisnum0)
                    .IsRequired()
                    .HasColumnName("CUNLISNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cutcstupd0).HasColumnName("CUTCSTUPD_0");

                entity.Property(e => e.Daycov0).HasColumnName("DAYCOV_0");

                entity.Property(e => e.Defloc0)
                    .IsRequired()
                    .HasColumnName("DEFLOC_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc1)
                    .IsRequired()
                    .HasColumnName("DEFLOC_1")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc10)
                    .IsRequired()
                    .HasColumnName("DEFLOC_10")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc11)
                    .IsRequired()
                    .HasColumnName("DEFLOC_11")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc12)
                    .IsRequired()
                    .HasColumnName("DEFLOC_12")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc13)
                    .IsRequired()
                    .HasColumnName("DEFLOC_13")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc14)
                    .IsRequired()
                    .HasColumnName("DEFLOC_14")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc2)
                    .IsRequired()
                    .HasColumnName("DEFLOC_2")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc3)
                    .IsRequired()
                    .HasColumnName("DEFLOC_3")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc4)
                    .IsRequired()
                    .HasColumnName("DEFLOC_4")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc5)
                    .IsRequired()
                    .HasColumnName("DEFLOC_5")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc6)
                    .IsRequired()
                    .HasColumnName("DEFLOC_6")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc7)
                    .IsRequired()
                    .HasColumnName("DEFLOC_7")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc8)
                    .IsRequired()
                    .HasColumnName("DEFLOC_8")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloc9)
                    .IsRequired()
                    .HasColumnName("DEFLOC_9")
                    .HasMaxLength(10);

                entity.Property(e => e.Defloctyp0)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp1)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp10)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_10")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp11)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_11")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp12)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_12")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp13)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_13")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp14)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_14")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp2)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp3)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp4)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp5)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp6)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp7)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp8)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Defloctyp9)
                    .IsRequired()
                    .HasColumnName("DEFLOCTYP_9")
                    .HasMaxLength(5);

                entity.Property(e => e.Dlu0)
                    .HasColumnName("DLU_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Foh0).HasColumnName("FOH_0");

                entity.Property(e => e.Fohuot0).HasColumnName("FOHUOT_0");

                entity.Property(e => e.Frtcls0)
                    .IsRequired()
                    .HasColumnName("FRTCLS_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Genlevins0).HasColumnName("GENLEVINS_0");

                entity.Property(e => e.Ism0)
                    .IsRequired()
                    .HasColumnName("ISM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Itmtolneg0)
                    .HasColumnName("ITMTOLNEG_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Itmtolpos0)
                    .HasColumnName("ITMTOLPOS_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Locmgtcod0).HasColumnName("LOCMGTCOD_0");

                entity.Property(e => e.Locnum0).HasColumnName("LOCNUM_0");

                entity.Property(e => e.Locnum1).HasColumnName("LOCNUM_1");

                entity.Property(e => e.Locnum10).HasColumnName("LOCNUM_10");

                entity.Property(e => e.Locnum11).HasColumnName("LOCNUM_11");

                entity.Property(e => e.Locnum12).HasColumnName("LOCNUM_12");

                entity.Property(e => e.Locnum13).HasColumnName("LOCNUM_13");

                entity.Property(e => e.Locnum14).HasColumnName("LOCNUM_14");

                entity.Property(e => e.Locnum2).HasColumnName("LOCNUM_2");

                entity.Property(e => e.Locnum3).HasColumnName("LOCNUM_3");

                entity.Property(e => e.Locnum4).HasColumnName("LOCNUM_4");

                entity.Property(e => e.Locnum5).HasColumnName("LOCNUM_5");

                entity.Property(e => e.Locnum6).HasColumnName("LOCNUM_6");

                entity.Property(e => e.Locnum7).HasColumnName("LOCNUM_7");

                entity.Property(e => e.Locnum8).HasColumnName("LOCNUM_8");

                entity.Property(e => e.Locnum9).HasColumnName("LOCNUM_9");

                entity.Property(e => e.Ltiqlycrd0)
                    .IsRequired()
                    .HasColumnName("LTIQLYCRD_0")
                    .HasMaxLength(8);

                entity.Property(e => e.Matwrh0)
                    .IsRequired()
                    .HasColumnName("MATWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Maxsto0)
                    .HasColumnName("MAXSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Maxstoclc0)
                    .HasColumnName("MAXSTOCLC_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Mfglotqty0)
                    .HasColumnName("MFGLOTQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Mfglti0)
                    .HasColumnName("MFGLTI_0")
                    .HasColumnType("numeric(9, 4)");

                entity.Property(e => e.Mfgrou0)
                    .IsRequired()
                    .HasColumnName("MFGROU_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Mfgroualt0).HasColumnName("MFGROUALT_0");

                entity.Property(e => e.Mfgshtcod0).HasColumnName("MFGSHTCOD_0");

                entity.Property(e => e.Mfgwrh0)
                    .IsRequired()
                    .HasColumnName("MFGWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Mic0).HasColumnName("MIC_0");

                entity.Property(e => e.Monpromon0).HasColumnName("MONPROMON_0");

                entity.Property(e => e.Monproyea0).HasColumnName("MONPROYEA_0");

                entity.Property(e => e.Newltista0)
                    .IsRequired()
                    .HasColumnName("NEWLTISTA_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Nmfc0)
                    .IsRequired()
                    .HasColumnName("NMFC_0")
                    .HasMaxLength(9);

                entity.Property(e => e.Nqa0).HasColumnName("NQA_0");

                entity.Property(e => e.Ofs0)
                    .HasColumnName("OFS_0")
                    .HasColumnType("numeric(9, 4)");

                entity.Property(e => e.Ordwrh0)
                    .IsRequired()
                    .HasColumnName("ORDWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Otrstyp0).HasColumnName("OTRSTYP_0");

                entity.Property(e => e.Otrstyp1).HasColumnName("OTRSTYP_1");

                entity.Property(e => e.Otrstyp2).HasColumnName("OTRSTYP_2");

                entity.Property(e => e.Otrstyp3).HasColumnName("OTRSTYP_3");

                entity.Property(e => e.Otrstyp4).HasColumnName("OTRSTYP_4");

                entity.Property(e => e.Ovecod0)
                    .IsRequired()
                    .HasColumnName("OVECOD_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecod1)
                    .IsRequired()
                    .HasColumnName("OVECOD_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecod2)
                    .IsRequired()
                    .HasColumnName("OVECOD_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecod3)
                    .IsRequired()
                    .HasColumnName("OVECOD_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecod4)
                    .IsRequired()
                    .HasColumnName("OVECOD_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Ovecpnflg0).HasColumnName("OVECPNFLG_0");

                entity.Property(e => e.Ovecpnflg1).HasColumnName("OVECPNFLG_1");

                entity.Property(e => e.Ovecpnflg2).HasColumnName("OVECPNFLG_2");

                entity.Property(e => e.Ovecpnflg3).HasColumnName("OVECPNFLG_3");

                entity.Property(e => e.Ovecpnflg4).HasColumnName("OVECPNFLG_4");

                entity.Property(e => e.Pck0)
                    .IsRequired()
                    .HasColumnName("PCK_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pckcap0)
                    .HasColumnName("PCKCAP_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pckflg0).HasColumnName("PCKFLG_0");

                entity.Property(e => e.Pckstkflg0).HasColumnName("PCKSTKFLG_0");

                entity.Property(e => e.Planner0)
                    .IsRequired()
                    .HasColumnName("PLANNER_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Plh0).HasColumnName("PLH_0");

                entity.Property(e => e.Plhuot0).HasColumnName("PLHUOT_0");

                entity.Property(e => e.Proper0)
                    .HasColumnName("PROPER_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Prplti0)
                    .HasColumnName("PRPLTI_0")
                    .HasColumnType("numeric(9, 4)");

                entity.Property(e => e.Ptocod0)
                    .IsRequired()
                    .HasColumnName("PTOCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Qlycrd0)
                    .IsRequired()
                    .HasColumnName("QLYCRD_0")
                    .HasMaxLength(8);

                entity.Property(e => e.Quaacs0)
                    .IsRequired()
                    .HasColumnName("QUAACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Quaadxuid0).HasColumnName("QUAADXUID_0");

                entity.Property(e => e.Quaflg0).HasColumnName("QUAFLG_0");

                entity.Property(e => e.Quafry0).HasColumnName("QUAFRY_0");

                entity.Property(e => e.Qualti0)
                    .HasColumnName("QUALTI_0")
                    .HasColumnType("numeric(9, 4)");

                entity.Property(e => e.Quanum0).HasColumnName("QUANUM_0");

                entity.Property(e => e.Quanumuid0).HasColumnName("QUANUMUID_0");

                entity.Property(e => e.Rccrou0)
                    .IsRequired()
                    .HasColumnName("RCCROU_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Rccroualt0).HasColumnName("RCCROUALT_0");

                entity.Property(e => e.Redmodflg0).HasColumnName("REDMODFLG_0");

                entity.Property(e => e.Relscatia0).HasColumnName("RELSCATIA_0");

                entity.Property(e => e.Reocod0).HasColumnName("REOCOD_0");

                entity.Property(e => e.Reofcy0)
                    .IsRequired()
                    .HasColumnName("REOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Reomgtcod0).HasColumnName("REOMGTCOD_0");

                entity.Property(e => e.Reominclc0)
                    .HasColumnName("REOMINCLC_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Reominqty0)
                    .HasColumnName("REOMINQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Reoper0).HasColumnName("REOPER_0");

                entity.Property(e => e.Reopol0)
                    .IsRequired()
                    .HasColumnName("REOPOL_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Reotsd0)
                    .HasColumnName("REOTSD_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Reotsdclc0)
                    .HasColumnName("REOTSDCLC_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Safsto0)
                    .HasColumnName("SAFSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Safstoclc0)
                    .HasColumnName("SAFSTOCLC_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Sccwrh0)
                    .IsRequired()
                    .HasColumnName("SCCWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Scowrh0)
                    .IsRequired()
                    .HasColumnName("SCOWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sescod0)
                    .IsRequired()
                    .HasColumnName("SESCOD_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Shiwrh0)
                    .IsRequired()
                    .HasColumnName("SHIWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Shllti0).HasColumnName("SHLLTI_0");

                entity.Property(e => e.Shlltiuom0).HasColumnName("SHLLTIUOM_0");

                entity.Property(e => e.Shr0)
                    .HasColumnName("SHR_0")
                    .HasColumnType("numeric(10, 4)");

                entity.Property(e => e.Simcstupd0).HasColumnName("SIMCSTUPD_0");

                entity.Property(e => e.Smpmod0).HasColumnName("SMPMOD_0");

                entity.Property(e => e.Smptyp0).HasColumnName("SMPTYP_0");

                entity.Property(e => e.Stafed0)
                    .IsRequired()
                    .HasColumnName("STAFED_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Stdcstupd0).HasColumnName("STDCSTUPD_0");

                entity.Property(e => e.Stocod0).HasColumnName("STOCOD_0");

                entity.Property(e => e.Stofcy0)
                    .IsRequired()
                    .HasColumnName("STOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Stomgtcod0).HasColumnName("STOMGTCOD_0");

                entity.Property(e => e.Totlti0)
                    .HasColumnName("TOTLTI_0")
                    .HasColumnType("numeric(9, 4)");

                entity.Property(e => e.Trfwrh0)
                    .IsRequired()
                    .HasColumnName("TRFWRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vltcod0)
                    .IsRequired()
                    .HasColumnName("VLTCOD_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Wgracs0)
                    .IsRequired()
                    .HasColumnName("WGRACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Wippro0).HasColumnName("WIPPRO_0");

                entity.Property(e => e.Yeaproyea0).HasColumnName("YEAPROYEA_0");
            });

            modelBuilder.Entity<Itmmaster>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ITMMASTER", "VIPCO");

                entity.HasIndex(e => e.Itmdes10)
                    .HasName("ITMMASTER_ITM1");

                entity.HasIndex(e => e.Itmref0)
                    .HasName("ITMMASTER_ITM0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cfglin0, e.Itmref0 })
                    .HasName("ITMMASTER_ITM3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Plmitmref0, e.Itmref0 })
                    .HasName("ITMMASTER_ITM5")
                    .IsUnique();

                entity.HasIndex(e => new { e.Seakey0, e.Itmref0 })
                    .HasName("ITMMASTER_ITM2")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acccod0)
                    .IsRequired()
                    .HasColumnName("ACCCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Alg0)
                    .IsRequired()
                    .HasColumnName("ALG_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Algbom0).HasColumnName("ALGBOM_0");

                entity.Property(e => e.Algdat0)
                    .HasColumnName("ALGDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Altbomhdk0).HasColumnName("ALTBOMHDK_0");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Brdcod0).HasColumnName("BRDCOD_0");

                entity.Property(e => e.Buy0)
                    .IsRequired()
                    .HasColumnName("BUY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Cfgbprnum0)
                    .IsRequired()
                    .HasColumnName("CFGBPRNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cfgbprref0)
                    .IsRequired()
                    .HasColumnName("CFGBPRREF_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cfgdeldat0)
                    .HasColumnName("CFGDELDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cfgfldalp10)
                    .IsRequired()
                    .HasColumnName("CFGFLDALP1_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cfgfldalp20)
                    .IsRequired()
                    .HasColumnName("CFGFLDALP2_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cfgfldalp30)
                    .IsRequired()
                    .HasColumnName("CFGFLDALP3_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cfgfldalp40)
                    .IsRequired()
                    .HasColumnName("CFGFLDALP4_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cfgfldalp50)
                    .IsRequired()
                    .HasColumnName("CFGFLDALP5_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cfgfldalp60)
                    .IsRequired()
                    .HasColumnName("CFGFLDALP6_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cfgfldnum10)
                    .HasColumnName("CFGFLDNUM1_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cfgfldnum20)
                    .HasColumnName("CFGFLDNUM2_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cfgfldnum30)
                    .HasColumnName("CFGFLDNUM3_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cfgfldnum40)
                    .HasColumnName("CFGFLDNUM4_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cfgfldnum50)
                    .HasColumnName("CFGFLDNUM5_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cfgfldnum60)
                    .HasColumnName("CFGFLDNUM6_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cfgitmref0)
                    .IsRequired()
                    .HasColumnName("CFGITMREF_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cfglin0)
                    .IsRequired()
                    .HasColumnName("CFGLIN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cfgvcrnum0)
                    .IsRequired()
                    .HasColumnName("CFGVCRNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cpramt0)
                    .HasColumnName("CPRAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cprcoe0)
                    .HasColumnName("CPRCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cremac0).HasColumnName("CREMAC_0");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cstgrp0)
                    .IsRequired()
                    .HasColumnName("CSTGRP_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cusref0)
                    .IsRequired()
                    .HasColumnName("CUSREF_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Dacpcucoe0).HasColumnName("DACPCUCOE_0");

                entity.Property(e => e.Dacpcucoe1).HasColumnName("DACPCUCOE_1");

                entity.Property(e => e.Dacpcucoe2).HasColumnName("DACPCUCOE_2");

                entity.Property(e => e.Dacpcucoe3).HasColumnName("DACPCUCOE_3");

                entity.Property(e => e.Dacpuucoe0).HasColumnName("DACPUUCOE_0");

                entity.Property(e => e.Dacsaucoe0).HasColumnName("DACSAUCOE_0");

                entity.Property(e => e.Dayuom0)
                    .IsRequired()
                    .HasColumnName("DAYUOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Defact0)
                    .HasColumnName("DEFACT_0")
                    .HasColumnType("numeric(14, 5)");

                entity.Property(e => e.Defpot0)
                    .HasColumnName("DEFPOT_0")
                    .HasColumnType("numeric(14, 5)");

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Dlu0)
                    .HasColumnName("DLU_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Dlvflg0).HasColumnName("DLVFLG_0");

                entity.Property(e => e.Dty0)
                    .HasColumnName("DTY_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Eancod0)
                    .IsRequired()
                    .HasColumnName("EANCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Eccbomalt20).HasColumnName("ECCBOMALT2_0");

                entity.Property(e => e.Eccbomalt21).HasColumnName("ECCBOMALT2_1");

                entity.Property(e => e.Eccbomalt30).HasColumnName("ECCBOMALT3_0");

                entity.Property(e => e.Eccbomalt31).HasColumnName("ECCBOMALT3_1");

                entity.Property(e => e.Eccflg0).HasColumnName("ECCFLG_0");

                entity.Property(e => e.Eccmaj0)
                    .IsRequired()
                    .HasColumnName("ECCMAJ_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eccmin0)
                    .IsRequired()
                    .HasColumnName("ECCMIN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eccroualt0).HasColumnName("ECCROUALT_0");

                entity.Property(e => e.Eccroualt1).HasColumnName("ECCROUALT_1");

                entity.Property(e => e.Eccrouflg0).HasColumnName("ECCROUFLG_0");

                entity.Property(e => e.Eccsto0).HasColumnName("ECCSTO_0");

                entity.Property(e => e.Eecges0).HasColumnName("EECGES_0");

                entity.Property(e => e.Eeu0)
                    .IsRequired()
                    .HasColumnName("EEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Eeustucoe0)
                    .HasColumnName("EEUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Exymgtcod0).HasColumnName("EXYMGTCOD_0");

                entity.Property(e => e.Exysta0)
                    .IsRequired()
                    .HasColumnName("EXYSTA_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Fimhor0).HasColumnName("FIMHOR_0");

                entity.Property(e => e.Fimhoruom0).HasColumnName("FIMHORUOM_0");

                entity.Property(e => e.Flgfas0).HasColumnName("FLGFAS_0");

                entity.Property(e => e.Flycat0)
                    .IsRequired()
                    .HasColumnName("FLYCAT_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Frthor0).HasColumnName("FRTHOR_0");

                entity.Property(e => e.Frthoruom0).HasColumnName("FRTHORUOM_0");

                entity.Property(e => e.Genflg0).HasColumnName("GENFLG_0");

                entity.Property(e => e.Hdkitmtyp0).HasColumnName("HDKITMTYP_0");

                entity.Property(e => e.Houuom0)
                    .IsRequired()
                    .HasColumnName("HOUUOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Intflg0).HasColumnName("INTFLG_0");

                entity.Property(e => e.Invprodtyp0).HasColumnName("INVPRODTYP_0");

                entity.Property(e => e.Itmdes10)
                    .IsRequired()
                    .HasColumnName("ITMDES1_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmdes20)
                    .IsRequired()
                    .HasColumnName("ITMDES2_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmdes30)
                    .IsRequired()
                    .HasColumnName("ITMDES3_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmexnflg0)
                    .IsRequired()
                    .HasColumnName("ITMEXNFLG_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Itmsfttyp0).HasColumnName("ITMSFTTYP_0");

                entity.Property(e => e.Itmsta0).HasColumnName("ITMSTA_0");

                entity.Property(e => e.Itmstd0)
                    .IsRequired()
                    .HasColumnName("ITMSTD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Itmvou0)
                    .HasColumnName("ITMVOU_0")
                    .HasColumnType("numeric(12, 4)");

                entity.Property(e => e.Itmwei0)
                    .HasColumnName("ITMWEI_0")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Lbefmt0)
                    .IsRequired()
                    .HasColumnName("LBEFMT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Lbefmt1)
                    .IsRequired()
                    .HasColumnName("LBEFMT_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Lbefmt2)
                    .IsRequired()
                    .HasColumnName("LBEFMT_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Lbefmt3)
                    .IsRequired()
                    .HasColumnName("LBEFMT_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Lifenddat0)
                    .HasColumnName("LIFENDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lifstrdat0)
                    .HasColumnName("LIFSTRDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Loaeccflg0).HasColumnName("LOAECCFLG_0");

                entity.Property(e => e.Lotcou0)
                    .IsRequired()
                    .HasColumnName("LOTCOU_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Lotmgtcod0).HasColumnName("LOTMGTCOD_0");

                entity.Property(e => e.Mattol0)
                    .IsRequired()
                    .HasColumnName("MATTOL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Mfgflg0).HasColumnName("MFGFLG_0");

                entity.Property(e => e.Mfgtex0)
                    .IsRequired()
                    .HasColumnName("MFGTEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Minrmnprc0)
                    .HasColumnName("MINRMNPRC_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Mntuom0)
                    .IsRequired()
                    .HasColumnName("MNTUOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Negsto0).HasColumnName("NEGSTO_0");

                entity.Property(e => e.Newltista0)
                    .IsRequired()
                    .HasColumnName("NEWLTISTA_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Ofs0).HasColumnName("OFS_0");

                entity.Property(e => e.Pcccod0)
                    .IsRequired()
                    .HasColumnName("PCCCOD_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Pcu0)
                    .IsRequired()
                    .HasColumnName("PCU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcu1)
                    .IsRequired()
                    .HasColumnName("PCU_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcu2)
                    .IsRequired()
                    .HasColumnName("PCU_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcu3)
                    .IsRequired()
                    .HasColumnName("PCU_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcurul0).HasColumnName("PCURUL_0");

                entity.Property(e => e.Pcurul1).HasColumnName("PCURUL_1");

                entity.Property(e => e.Pcurul2).HasColumnName("PCURUL_2");

                entity.Property(e => e.Pcurul3).HasColumnName("PCURUL_3");

                entity.Property(e => e.Pcustucoe0)
                    .HasColumnName("PCUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pcustucoe1)
                    .HasColumnName("PCUSTUCOE_1")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pcustucoe2)
                    .HasColumnName("PCUSTUCOE_2")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pcustucoe3)
                    .HasColumnName("PCUSTUCOE_3")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Phaflg0).HasColumnName("PHAFLG_0");

                entity.Property(e => e.Pitcdt0).HasColumnName("PITCDT_0");

                entity.Property(e => e.Pitcdtuom0)
                    .IsRequired()
                    .HasColumnName("PITCDTUOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Plaacs0)
                    .IsRequired()
                    .HasColumnName("PLAACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Planner0)
                    .IsRequired()
                    .HasColumnName("PLANNER_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Plmatturl0)
                    .IsRequired()
                    .HasColumnName("PLMATTURL_0")
                    .HasMaxLength(250);

                entity.Property(e => e.Plmhisurl0)
                    .IsRequired()
                    .HasColumnName("PLMHISURL_0")
                    .HasMaxLength(250);

                entity.Property(e => e.Plmitmref0)
                    .IsRequired()
                    .HasColumnName("PLMITMREF_0")
                    .HasMaxLength(70);

                entity.Property(e => e.Prqflg0).HasColumnName("PRQFLG_0");

                entity.Property(e => e.Purbaspri0)
                    .HasColumnName("PURBASPRI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Purflg0).HasColumnName("PURFLG_0");

                entity.Property(e => e.Purtex0)
                    .IsRequired()
                    .HasColumnName("PURTEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Puu0)
                    .IsRequired()
                    .HasColumnName("PUU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Puustucoe0)
                    .HasColumnName("PUUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Rcpflg0).HasColumnName("RCPFLG_0");

                entity.Property(e => e.Rplitm0)
                    .IsRequired()
                    .HasColumnName("RPLITM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Salflg0).HasColumnName("SALFLG_0");

                entity.Property(e => e.Sau0)
                    .IsRequired()
                    .HasColumnName("SAU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Saustucoe0)
                    .HasColumnName("SAUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Scpflg0).HasColumnName("SCPFLG_0");

                entity.Property(e => e.Scsflg0).HasColumnName("SCSFLG_0");

                entity.Property(e => e.Seakey0)
                    .IsRequired()
                    .HasColumnName("SEAKEY_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Sercou0)
                    .IsRequired()
                    .HasColumnName("SERCOU_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sermgtcod0).HasColumnName("SERMGTCOD_0");

                entity.Property(e => e.Shl0).HasColumnName("SHL_0");

                entity.Property(e => e.Shllti0).HasColumnName("SHLLTI_0");

                entity.Property(e => e.Shlltiuom0).HasColumnName("SHLLTIUOM_0");

                entity.Property(e => e.Shluom0).HasColumnName("SHLUOM_0");

                entity.Property(e => e.Sstcod0)
                    .IsRequired()
                    .HasColumnName("SSTCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Ssu0)
                    .IsRequired()
                    .HasColumnName("SSU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Ssustucoe0)
                    .HasColumnName("SSUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Stafed0)
                    .IsRequired()
                    .HasColumnName("STAFED_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Stataxflg0)
                    .IsRequired()
                    .HasColumnName("STATAXFLG_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Stcnum0)
                    .IsRequired()
                    .HasColumnName("STCNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Stdflg0).HasColumnName("STDFLG_0");

                entity.Property(e => e.Stocrd0)
                    .IsRequired()
                    .HasColumnName("STOCRD_0")
                    .HasMaxLength(8);

                entity.Property(e => e.Stoissdef0).HasColumnName("STOISSDEF_0");

                entity.Property(e => e.Stomgtcod0).HasColumnName("STOMGTCOD_0");

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Stulbefmt0)
                    .IsRequired()
                    .HasColumnName("STULBEFMT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Tclcod0)
                    .IsRequired()
                    .HasColumnName("TCLCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Tooflg0).HasColumnName("TOOFLG_0");

                entity.Property(e => e.Tplcongua0)
                    .IsRequired()
                    .HasColumnName("TPLCONGUA_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tplconlnd0)
                    .IsRequired()
                    .HasColumnName("TPLCONLND_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tplconsrv0)
                    .IsRequired()
                    .HasColumnName("TPLCONSRV_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Trkcod0).HasColumnName("TRKCOD_0");

                entity.Property(e => e.Trklev0).HasColumnName("TRKLEV_0");

                entity.Property(e => e.Tsicod0)
                    .IsRequired()
                    .HasColumnName("TSICOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod1)
                    .IsRequired()
                    .HasColumnName("TSICOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod2)
                    .IsRequired()
                    .HasColumnName("TSICOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod3)
                    .IsRequired()
                    .HasColumnName("TSICOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod4)
                    .IsRequired()
                    .HasColumnName("TSICOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacitm0)
                    .IsRequired()
                    .HasColumnName("VACITM_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacitm1)
                    .IsRequired()
                    .HasColumnName("VACITM_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacitm2)
                    .IsRequired()
                    .HasColumnName("VACITM_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Vou0)
                    .IsRequired()
                    .HasColumnName("VOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Weu0)
                    .IsRequired()
                    .HasColumnName("WEU_0")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<Itmmvt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ITMMVT", "VIPCO");

                entity.HasIndex(e => new { e.Itmref0, e.Stofcy0 })
                    .HasName("ITMMVT_ITV0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Stofcy0, e.Itmref0 })
                    .HasName("ITMMVT_ITV1")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Ainvdtaavc0)
                    .HasColumnName("AINVDTAAVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Ainvdtacst0)
                    .HasColumnName("AINVDTACST_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Alabavc0)
                    .HasColumnName("ALABAVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Alabavc1)
                    .HasColumnName("ALABAVC_1")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Alabavc2)
                    .HasColumnName("ALABAVC_2")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Alabcst0)
                    .HasColumnName("ALABCST_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Alabcst1)
                    .HasColumnName("ALABCST_1")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Alabcst2)
                    .HasColumnName("ALABCST_2")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amacavc0)
                    .HasColumnName("AMACAVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amacavc1)
                    .HasColumnName("AMACAVC_1")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amacavc2)
                    .HasColumnName("AMACAVC_2")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amaccst0)
                    .HasColumnName("AMACCST_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amaccst1)
                    .HasColumnName("AMACCST_1")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amaccst2)
                    .HasColumnName("AMACCST_2")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatavc0)
                    .HasColumnName("AMATAVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatavc1)
                    .HasColumnName("AMATAVC_1")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatavc2)
                    .HasColumnName("AMATAVC_2")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatavc3)
                    .HasColumnName("AMATAVC_3")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatavc4)
                    .HasColumnName("AMATAVC_4")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatavc5)
                    .HasColumnName("AMATAVC_5")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatcst0)
                    .HasColumnName("AMATCST_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatcst1)
                    .HasColumnName("AMATCST_1")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatcst2)
                    .HasColumnName("AMATCST_2")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatcst3)
                    .HasColumnName("AMATCST_3")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatcst4)
                    .HasColumnName("AMATCST_4")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Amatcst5)
                    .HasColumnName("AMATCST_5")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Aovelabavc0)
                    .HasColumnName("AOVELABAVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Aovelabcst0)
                    .HasColumnName("AOVELABCST_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Aovemacavc0)
                    .HasColumnName("AOVEMACAVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Aovemaccst0)
                    .HasColumnName("AOVEMACCST_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Aovematavc0)
                    .HasColumnName("AOVEMATAVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Aovematcst0)
                    .HasColumnName("AOVEMATCST_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Aovescoavc0)
                    .HasColumnName("AOVESCOAVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Aovescocst0)
                    .HasColumnName("AOVESCOCST_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Ascoavc0)
                    .HasColumnName("ASCOAVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Ascocst0)
                    .HasColumnName("ASCOCST_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Avc0)
                    .HasColumnName("AVC_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Avcbasamt0)
                    .HasColumnName("AVCBASAMT_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Avcbasqty0)
                    .HasColumnName("AVCBASQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Bprctlsto0)
                    .HasColumnName("BPRCTLSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Bprphysto0)
                    .HasColumnName("BPRPHYSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Bprrejsto0)
                    .HasColumnName("BPRREJSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cfgvcrnum0)
                    .IsRequired()
                    .HasColumnName("CFGVCRNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ctlall0)
                    .HasColumnName("CTLALL_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Ctlsto0)
                    .HasColumnName("CTLSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cundat0)
                    .HasColumnName("CUNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat1)
                    .HasColumnName("CUNDAT_1")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat10)
                    .HasColumnName("CUNDAT_10")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat11)
                    .HasColumnName("CUNDAT_11")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat2)
                    .HasColumnName("CUNDAT_2")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat3)
                    .HasColumnName("CUNDAT_3")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat4)
                    .HasColumnName("CUNDAT_4")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat5)
                    .HasColumnName("CUNDAT_5")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat6)
                    .HasColumnName("CUNDAT_6")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat7)
                    .HasColumnName("CUNDAT_7")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat8)
                    .HasColumnName("CUNDAT_8")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundat9)
                    .HasColumnName("CUNDAT_9")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cundim0).HasColumnName("CUNDIM_0");

                entity.Property(e => e.Cunissmvt0).HasColumnName("CUNISSMVT_0");

                entity.Property(e => e.Cunnbr0).HasColumnName("CUNNBR_0");

                entity.Property(e => e.Cunnbrequ0).HasColumnName("CUNNBREQU_0");

                entity.Property(e => e.Cunqtyclc0)
                    .HasColumnName("CUNQTYCLC_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc1)
                    .HasColumnName("CUNQTYCLC_1")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc10)
                    .HasColumnName("CUNQTYCLC_10")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc11)
                    .HasColumnName("CUNQTYCLC_11")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc2)
                    .HasColumnName("CUNQTYCLC_2")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc3)
                    .HasColumnName("CUNQTYCLC_3")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc4)
                    .HasColumnName("CUNQTYCLC_4")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc5)
                    .HasColumnName("CUNQTYCLC_5")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc6)
                    .HasColumnName("CUNQTYCLC_6")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc7)
                    .HasColumnName("CUNQTYCLC_7")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc8)
                    .HasColumnName("CUNQTYCLC_8")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtyclc9)
                    .HasColumnName("CUNQTYCLC_9")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew0)
                    .HasColumnName("CUNQTYNEW_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew1)
                    .HasColumnName("CUNQTYNEW_1")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew10)
                    .HasColumnName("CUNQTYNEW_10")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew11)
                    .HasColumnName("CUNQTYNEW_11")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew2)
                    .HasColumnName("CUNQTYNEW_2")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew3)
                    .HasColumnName("CUNQTYNEW_3")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew4)
                    .HasColumnName("CUNQTYNEW_4")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew5)
                    .HasColumnName("CUNQTYNEW_5")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew6)
                    .HasColumnName("CUNQTYNEW_6")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew7)
                    .HasColumnName("CUNQTYNEW_7")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew8)
                    .HasColumnName("CUNQTYNEW_8")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunqtynew9)
                    .HasColumnName("CUNQTYNEW_9")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunrcpmvt0).HasColumnName("CUNRCPMVT_0");

                entity.Property(e => e.Cunsto0)
                    .HasColumnName("CUNSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Detsht0)
                    .HasColumnName("DETSHT_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Gloall0)
                    .HasColumnName("GLOALL_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Glosht0)
                    .HasColumnName("GLOSHT_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Lascundat0)
                    .HasColumnName("LASCUNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lascunlis0)
                    .IsRequired()
                    .HasColumnName("LASCUNLIS_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Lasissdat0)
                    .HasColumnName("LASISSDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Laspurdat0)
                    .HasColumnName("LASPURDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Laspurpri0)
                    .HasColumnName("LASPURPRI_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lasrcpdat0)
                    .HasColumnName("LASRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lasrcppri0)
                    .HasColumnName("LASRCPPRI_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lasreodat0)
                    .HasColumnName("LASREODAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Linvdtacst0)
                    .HasColumnName("LINVDTACST_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Llabcst0)
                    .HasColumnName("LLABCST_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Llabcst1)
                    .HasColumnName("LLABCST_1")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Llabcst2)
                    .HasColumnName("LLABCST_2")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lmaccst0)
                    .HasColumnName("LMACCST_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lmaccst1)
                    .HasColumnName("LMACCST_1")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lmaccst2)
                    .HasColumnName("LMACCST_2")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lmatcst0)
                    .HasColumnName("LMATCST_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lmatcst1)
                    .HasColumnName("LMATCST_1")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lmatcst2)
                    .HasColumnName("LMATCST_2")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lmatcst3)
                    .HasColumnName("LMATCST_3")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lmatcst4)
                    .HasColumnName("LMATCST_4")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lmatcst5)
                    .HasColumnName("LMATCST_5")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lovelabcst0)
                    .HasColumnName("LOVELABCST_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lovemaccst0)
                    .HasColumnName("LOVEMACCST_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lovematcst0)
                    .HasColumnName("LOVEMATCST_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lovescocst0)
                    .HasColumnName("LOVESCOCST_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Lscocst0)
                    .HasColumnName("LSCOCST_0")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.Nexcundat0)
                    .HasColumnName("NEXCUNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ordsto0)
                    .HasColumnName("ORDSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Phyall0)
                    .HasColumnName("PHYALL_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Physto0)
                    .HasColumnName("PHYSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Plfctlsto0)
                    .HasColumnName("PLFCTLSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Plfphysto0)
                    .HasColumnName("PLFPHYSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Plfrejsto0)
                    .HasColumnName("PLFREJSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rejall0)
                    .HasColumnName("REJALL_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rejsto0)
                    .HasColumnName("REJSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Salsto0)
                    .HasColumnName("SALSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Sccall0)
                    .HasColumnName("SCCALL_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Scclndsto0)
                    .HasColumnName("SCCLNDSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Scoctlall0)
                    .HasColumnName("SCOCTLALL_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Scoctlsto0)
                    .HasColumnName("SCOCTLSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Scophyall0)
                    .HasColumnName("SCOPHYALL_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Scophysto0)
                    .HasColumnName("SCOPHYSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Scorejall0)
                    .HasColumnName("SCOREJALL_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Scorejsto0)
                    .HasColumnName("SCOREJSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Stofcy0)
                    .IsRequired()
                    .HasColumnName("STOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Traamt0)
                    .HasColumnName("TRAAMT_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Trasto0)
                    .HasColumnName("TRASTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Trfsto0)
                    .HasColumnName("TRFSTO_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vcrlin0).HasColumnName("VCRLIN_0");

                entity.Property(e => e.Vcrnum0)
                    .IsRequired()
                    .HasColumnName("VCRNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrtyp0).HasColumnName("VCRTYP_0");

                entity.Property(e => e.Waisto0)
                    .HasColumnName("WAISTO_0")
                    .HasColumnType("numeric(28, 13)");
            });

            modelBuilder.Entity<Paymentd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PAYMENTD", "VIPCO");

                entity.HasIndex(e => new { e.Num0, e.Lin0 })
                    .HasName("PAYMENTD_PYD0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Num0, e.Lin0, e.Curlin0 })
                    .HasName("PAYMENTD_PYD2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Dudnum0, e.Dudlig0, e.Num0, e.Lin0 })
                    .HasName("PAYMENTD_PYD1")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acc0)
                    .IsRequired()
                    .HasColumnName("ACC_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc1)
                    .IsRequired()
                    .HasColumnName("ACC_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc2)
                    .IsRequired()
                    .HasColumnName("ACC_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc3)
                    .IsRequired()
                    .HasColumnName("ACC_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc4)
                    .IsRequired()
                    .HasColumnName("ACC_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc5)
                    .IsRequired()
                    .HasColumnName("ACC_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc6)
                    .IsRequired()
                    .HasColumnName("ACC_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc7)
                    .IsRequired()
                    .HasColumnName("ACC_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc8)
                    .IsRequired()
                    .HasColumnName("ACC_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Acc9)
                    .IsRequired()
                    .HasColumnName("ACC_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Accsns0).HasColumnName("ACCSNS_0");

                entity.Property(e => e.Acctyp0).HasColumnName("ACCTYP_0");

                entity.Property(e => e.Amtbanfrc0)
                    .HasColumnName("AMTBANFRC_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtbanfrc10)
                    .HasColumnName("AMTBANFRC1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtbanfrc20)
                    .HasColumnName("AMTBANFRC2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtlin0)
                    .HasColumnName("AMTLIN_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtlin20)
                    .HasColumnName("AMTLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bprinv0)
                    .IsRequired()
                    .HasColumnName("BPRINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bprlin0)
                    .IsRequired()
                    .HasColumnName("BPRLIN_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bprsacinv0)
                    .IsRequired()
                    .HasColumnName("BPRSACINV_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Coa0)
                    .IsRequired()
                    .HasColumnName("COA_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa1)
                    .IsRequired()
                    .HasColumnName("COA_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa2)
                    .IsRequired()
                    .HasColumnName("COA_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa3)
                    .IsRequired()
                    .HasColumnName("COA_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa4)
                    .IsRequired()
                    .HasColumnName("COA_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa5)
                    .IsRequired()
                    .HasColumnName("COA_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa6)
                    .IsRequired()
                    .HasColumnName("COA_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa7)
                    .IsRequired()
                    .HasColumnName("COA_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa8)
                    .IsRequired()
                    .HasColumnName("COA_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Coa9)
                    .IsRequired()
                    .HasColumnName("COA_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Curlin0)
                    .IsRequired()
                    .HasColumnName("CURLIN_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dencod0)
                    .IsRequired()
                    .HasColumnName("DENCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Deslin0)
                    .IsRequired()
                    .HasColumnName("DESLIN_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Dsp0)
                    .IsRequired()
                    .HasColumnName("DSP_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Dudlig0).HasColumnName("DUDLIG_0");

                entity.Property(e => e.Dudnum0).HasColumnName("DUDNUM_0");

                entity.Property(e => e.Eardisflg0).HasColumnName("EARDISFLG_0");

                entity.Property(e => e.Fcylin0)
                    .IsRequired()
                    .HasColumnName("FCYLIN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ipttyp0).HasColumnName("IPTTYP_0");

                entity.Property(e => e.Led0)
                    .IsRequired()
                    .HasColumnName("LED_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Led1)
                    .IsRequired()
                    .HasColumnName("LED_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Led2)
                    .IsRequired()
                    .HasColumnName("LED_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Led3)
                    .IsRequired()
                    .HasColumnName("LED_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Led4)
                    .IsRequired()
                    .HasColumnName("LED_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Led5)
                    .IsRequired()
                    .HasColumnName("LED_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Led6)
                    .IsRequired()
                    .HasColumnName("LED_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Led7)
                    .IsRequired()
                    .HasColumnName("LED_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Led8)
                    .IsRequired()
                    .HasColumnName("LED_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Led9)
                    .IsRequired()
                    .HasColumnName("LED_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Lin0).HasColumnName("LIN_0");

                entity.Property(e => e.Num0)
                    .IsRequired()
                    .HasColumnName("NUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Numdep0)
                    .IsRequired()
                    .HasColumnName("NUMDEP_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Paycurlin0)
                    .HasColumnName("PAYCURLIN_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Payloclin0)
                    .HasColumnName("PAYLOCLIN_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Qtylin0)
                    .HasColumnName("QTYLIN_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Ritamt0)
                    .HasColumnName("RITAMT_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Ritamt20)
                    .HasColumnName("RITAMT2_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Saclin0)
                    .IsRequired()
                    .HasColumnName("SACLIN_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vatlin0)
                    .IsRequired()
                    .HasColumnName("VATLIN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vcrnum0)
                    .IsRequired()
                    .HasColumnName("VCRNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrtyp0)
                    .IsRequired()
                    .HasColumnName("VCRTYP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Zincometype0).HasColumnName("ZINCOMETYPE_0");

                entity.Property(e => e.Zinvtype0).HasColumnName("ZINVTYPE_0");

                entity.Property(e => e.Zissuedby0)
                    .IsRequired()
                    .HasColumnName("ZISSUEDBY_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Zissuedfor0)
                    .IsRequired()
                    .HasColumnName("ZISSUEDFOR_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Ztax00)
                    .HasColumnName("ZTAX0_0")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Ztaxbase0)
                    .HasColumnName("ZTAXBASE_0")
                    .HasColumnType("numeric(18, 3)");

                entity.Property(e => e.Ztaxbranch0)
                    .IsRequired()
                    .HasColumnName("ZTAXBRANCH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ztaxdate0)
                    .HasColumnName("ZTAXDATE_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ztaxinvno0)
                    .IsRequired()
                    .HasColumnName("ZTAXINVNO_0")
                    .HasMaxLength(60);

                entity.Property(e => e.Ztaxseq0)
                    .IsRequired()
                    .HasColumnName("ZTAXSEQ_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Zwhtno0)
                    .IsRequired()
                    .HasColumnName("ZWHTNO_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Zwhtpercent0).HasColumnName("ZWHTPERCENT_0");
            });

            modelBuilder.Entity<Paymenth>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PAYMENTH", "VIPCO");

                entity.HasIndex(e => e.Num0)
                    .HasName("PAYMENTH_PYH0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Duddat0, e.Num0 })
                    .HasName("PAYMENTH_PYH4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Paytyp0, e.Num0 })
                    .HasName("PAYMENTH_PYH3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Frmflg0, e.Frmnum0, e.Frmlin0 })
                    .HasName("PAYMENTH_PYH1");

                entity.HasIndex(e => new { e.Paylot0, e.Paylotlig0, e.Num0 })
                    .HasName("PAYMENTH_PYH2")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acc0)
                    .IsRequired()
                    .HasColumnName("ACC_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Accdat0)
                    .HasColumnName("ACCDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Accnumtre0).HasColumnName("ACCNUMTRE_0");

                entity.Property(e => e.Accnumtre1).HasColumnName("ACCNUMTRE_1");

                entity.Property(e => e.Accnumtre10).HasColumnName("ACCNUMTRE_10");

                entity.Property(e => e.Accnumtre2).HasColumnName("ACCNUMTRE_2");

                entity.Property(e => e.Accnumtre3).HasColumnName("ACCNUMTRE_3");

                entity.Property(e => e.Accnumtre4).HasColumnName("ACCNUMTRE_4");

                entity.Property(e => e.Accnumtre5).HasColumnName("ACCNUMTRE_5");

                entity.Property(e => e.Accnumtre6).HasColumnName("ACCNUMTRE_6");

                entity.Property(e => e.Accnumtre7).HasColumnName("ACCNUMTRE_7");

                entity.Property(e => e.Accnumtre8).HasColumnName("ACCNUMTRE_8");

                entity.Property(e => e.Accnumtre9).HasColumnName("ACCNUMTRE_9");

                entity.Property(e => e.Acs0)
                    .IsRequired()
                    .HasColumnName("ACS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Amtban0)
                    .HasColumnName("AMTBAN_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtcur0)
                    .HasColumnName("AMTCUR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtnytbil0)
                    .HasColumnName("AMTNYTBIL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Ban0)
                    .IsRequired()
                    .HasColumnName("BAN_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bandat0)
                    .HasColumnName("BANDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Banpaytpy0)
                    .HasColumnName("BANPAYTPY_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Bdfecocod0)
                    .IsRequired()
                    .HasColumnName("BDFECOCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bdfmvtcod0)
                    .IsRequired()
                    .HasColumnName("BDFMVTCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Bdfpaycod0)
                    .IsRequired()
                    .HasColumnName("BDFPAYCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Biccod0)
                    .IsRequired()
                    .HasColumnName("BICCOD_0")
                    .HasMaxLength(11);

                entity.Property(e => e.Bid0)
                    .IsRequired()
                    .HasColumnName("BID_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Bidcry0)
                    .IsRequired()
                    .HasColumnName("BIDCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bildat0)
                    .HasColumnName("BILDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Bilvcr0)
                    .IsRequired()
                    .HasColumnName("BILVCR_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Bpaaddlig0)
                    .IsRequired()
                    .HasColumnName("BPAADDLIG_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpaaddlig1)
                    .IsRequired()
                    .HasColumnName("BPAADDLIG_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpaaddlig2)
                    .IsRequired()
                    .HasColumnName("BPAADDLIG_2")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpanam0)
                    .IsRequired()
                    .HasColumnName("BPANAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpr0)
                    .IsRequired()
                    .HasColumnName("BPR_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bprref0)
                    .IsRequired()
                    .HasColumnName("BPRREF_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bprsac0)
                    .IsRequired()
                    .HasColumnName("BPRSAC_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Bprtyp0).HasColumnName("BPRTYP_0");

                entity.Property(e => e.Bsitrs0)
                    .IsRequired()
                    .HasColumnName("BSITRS_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cashvatnum0)
                    .IsRequired()
                    .HasColumnName("CASHVATNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Chqban0)
                    .IsRequired()
                    .HasColumnName("CHQBAN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Chqnum0)
                    .IsRequired()
                    .HasColumnName("CHQNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Chqtyp0).HasColumnName("CHQTYP_0");

                entity.Property(e => e.Coa0)
                    .IsRequired()
                    .HasColumnName("COA_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Comdat0)
                    .HasColumnName("COMDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Crdauz0)
                    .IsRequired()
                    .HasColumnName("CRDAUZ_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Crdexydat0)
                    .HasColumnName("CRDEXYDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Crdnum0)
                    .IsRequired()
                    .HasColumnName("CRDNUM_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Crdtyp0)
                    .IsRequired()
                    .HasColumnName("CRDTYP_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cry0)
                    .IsRequired()
                    .HasColumnName("CRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Crynam0)
                    .IsRequired()
                    .HasColumnName("CRYNAM_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Cshvatrgm0).HasColumnName("CSHVATRGM_0");

                entity.Property(e => e.Cty0)
                    .IsRequired()
                    .HasColumnName("CTY_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Des0)
                    .IsRequired()
                    .HasColumnName("DES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Duddat0)
                    .HasColumnName("DUDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Edtnum0).HasColumnName("EDTNUM_0");

                entity.Property(e => e.Epanatpay0)
                    .IsRequired()
                    .HasColumnName("EPANATPAY_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Eparenpay0)
                    .IsRequired()
                    .HasColumnName("EPARENPAY_0")
                    .HasMaxLength(140);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fcy0)
                    .IsRequired()
                    .HasColumnName("FCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Fiy0).HasColumnName("FIY_0");

                entity.Property(e => e.Flgend0).HasColumnName("FLGEND_0");

                entity.Property(e => e.Frmdat0)
                    .HasColumnName("FRMDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Frmfcy0)
                    .IsRequired()
                    .HasColumnName("FRMFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Frmflg0).HasColumnName("FRMFLG_0");

                entity.Property(e => e.Frmlin0).HasColumnName("FRMLIN_0");

                entity.Property(e => e.Frmnum0)
                    .IsRequired()
                    .HasColumnName("FRMNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Frmref0)
                    .IsRequired()
                    .HasColumnName("FRMREF_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Frmtyp0).HasColumnName("FRMTYP_0");

                entity.Property(e => e.Frmusr0)
                    .IsRequired()
                    .HasColumnName("FRMUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Midbiccod0)
                    .IsRequired()
                    .HasColumnName("MIDBICCOD_0")
                    .HasMaxLength(11);

                entity.Property(e => e.Midcry0)
                    .IsRequired()
                    .HasColumnName("MIDCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Midpab10)
                    .IsRequired()
                    .HasColumnName("MIDPAB1_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Midpab20)
                    .IsRequired()
                    .HasColumnName("MIDPAB2_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Midpab30)
                    .IsRequired()
                    .HasColumnName("MIDPAB3_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Midpab40)
                    .IsRequired()
                    .HasColumnName("MIDPAB4_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Num0)
                    .IsRequired()
                    .HasColumnName("NUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Numord0)
                    .IsRequired()
                    .HasColumnName("NUMORD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Oridat0)
                    .HasColumnName("ORIDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Pab10)
                    .IsRequired()
                    .HasColumnName("PAB1_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Pab20)
                    .IsRequired()
                    .HasColumnName("PAB2_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Pab30)
                    .IsRequired()
                    .HasColumnName("PAB3_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Pab40)
                    .IsRequired()
                    .HasColumnName("PAB4_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Pabamtprt0)
                    .HasColumnName("PABAMTPRT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Pabflg0).HasColumnName("PABFLG_0");

                entity.Property(e => e.Pabren0)
                    .IsRequired()
                    .HasColumnName("PABREN_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pam0)
                    .IsRequired()
                    .HasColumnName("PAM_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Paylot0)
                    .IsRequired()
                    .HasColumnName("PAYLOT_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Paylotlig0).HasColumnName("PAYLOTLIG_0");

                entity.Property(e => e.Paynumend0)
                    .IsRequired()
                    .HasColumnName("PAYNUMEND_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Paytyp0)
                    .IsRequired()
                    .HasColumnName("PAYTYP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Per0).HasColumnName("PER_0");

                entity.Property(e => e.Poscod0)
                    .IsRequired()
                    .HasColumnName("POSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Pst0).HasColumnName("PST_0");

                entity.Property(e => e.Purtyp0).HasColumnName("PURTYP_0");

                entity.Property(e => e.Ref0)
                    .IsRequired()
                    .HasColumnName("REF_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Rennotpay0)
                    .IsRequired()
                    .HasColumnName("RENNOTPAY_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Sat0)
                    .IsRequired()
                    .HasColumnName("SAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Senbpr0)
                    .IsRequired()
                    .HasColumnName("SENBPR_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Sencrn0)
                    .IsRequired()
                    .HasColumnName("SENCRN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Senori0)
                    .IsRequired()
                    .HasColumnName("SENORI_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Sns0).HasColumnName("SNS_0");

                entity.Property(e => e.Sta0).HasColumnName("STA_0");

                entity.Property(e => e.Staflg0).HasColumnName("STAFLG_0");

                entity.Property(e => e.Staflg1).HasColumnName("STAFLG_1");

                entity.Property(e => e.Staflg10).HasColumnName("STAFLG_10");

                entity.Property(e => e.Staflg2).HasColumnName("STAFLG_2");

                entity.Property(e => e.Staflg3).HasColumnName("STAFLG_3");

                entity.Property(e => e.Staflg4).HasColumnName("STAFLG_4");

                entity.Property(e => e.Staflg5).HasColumnName("STAFLG_5");

                entity.Property(e => e.Staflg6).HasColumnName("STAFLG_6");

                entity.Property(e => e.Staflg7).HasColumnName("STAFLG_7");

                entity.Property(e => e.Staflg8).HasColumnName("STAFLG_8");

                entity.Property(e => e.Staflg9).HasColumnName("STAFLG_9");

                entity.Property(e => e.Sup10)
                    .IsRequired()
                    .HasColumnName("SUP1_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Sup20)
                    .IsRequired()
                    .HasColumnName("SUP2_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Sup30)
                    .IsRequired()
                    .HasColumnName("SUP3_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Swiipi0)
                    .IsRequired()
                    .HasColumnName("SWIIPI_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Swisup10).HasColumnName("SWISUP1_0");

                entity.Property(e => e.Swisup20).HasColumnName("SWISUP2_0");

                entity.Property(e => e.Swisup30).HasColumnName("SWISUP3_0");

                entity.Property(e => e.Tfbdat0)
                    .HasColumnName("TFBDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Tfbfil0)
                    .IsRequired()
                    .HasColumnName("TFBFIL_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Umrnum0)
                    .IsRequired()
                    .HasColumnName("UMRNUM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Umrseq0)
                    .IsRequired()
                    .HasColumnName("UMRSEQ_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Valdat0)
                    .HasColumnName("VALDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vatsta0).HasColumnName("VATSTA_0");

                entity.Property(e => e.Ztaxbase0)
                    .HasColumnName("ZTAXBASE_0")
                    .HasColumnType("numeric(18, 3)");
            });

            modelBuilder.Entity<Porder>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PORDER", "VIPCO");

                entity.HasIndex(e => e.Pohnum0)
                    .HasName("PORDER_POH0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Orddat0, e.Pohnum0 })
                    .HasName("PORDER_POH2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Bpsnum0, e.Orddat0, e.Pohnum0 })
                    .HasName("PORDER_POH1")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Appflg0).HasColumnName("APPFLG_0");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Betcpy0).HasColumnName("BETCPY_0");

                entity.Property(e => e.Betfcy0).HasColumnName("BETFCY_0");

                entity.Property(e => e.Bpaadd0)
                    .IsRequired()
                    .HasColumnName("BPAADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpaaddlig0)
                    .IsRequired()
                    .HasColumnName("BPAADDLIG_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpaaddlig1)
                    .IsRequired()
                    .HasColumnName("BPAADDLIG_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpaaddlig2)
                    .IsRequired()
                    .HasColumnName("BPAADDLIG_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpapay0)
                    .IsRequired()
                    .HasColumnName("BPAPAY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpcord0)
                    .IsRequired()
                    .HasColumnName("BPCORD_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpoadd0)
                    .IsRequired()
                    .HasColumnName("BPOADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpoaddlig0)
                    .IsRequired()
                    .HasColumnName("BPOADDLIG_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpoaddlig1)
                    .IsRequired()
                    .HasColumnName("BPOADDLIG_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpoaddlig2)
                    .IsRequired()
                    .HasColumnName("BPOADDLIG_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpocry0)
                    .IsRequired()
                    .HasColumnName("BPOCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bpocrynam0)
                    .IsRequired()
                    .HasColumnName("BPOCRYNAM_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bpocty0)
                    .IsRequired()
                    .HasColumnName("BPOCTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bponam0)
                    .IsRequired()
                    .HasColumnName("BPONAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bponam1)
                    .IsRequired()
                    .HasColumnName("BPONAM_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpoposcod0)
                    .IsRequired()
                    .HasColumnName("BPOPOSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bposat0)
                    .IsRequired()
                    .HasColumnName("BPOSAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bprnam0)
                    .IsRequired()
                    .HasColumnName("BPRNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bprnam1)
                    .IsRequired()
                    .HasColumnName("BPRNAM_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bprpay0)
                    .IsRequired()
                    .HasColumnName("BPRPAY_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsinv0)
                    .IsRequired()
                    .HasColumnName("BPSINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bptnum0)
                    .IsRequired()
                    .HasColumnName("BPTNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Buy0)
                    .IsRequired()
                    .HasColumnName("BUY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Chgcoe0)
                    .HasColumnName("CHGCOE_0")
                    .HasColumnType("numeric(21, 10)");

                entity.Property(e => e.Chgtyp0).HasColumnName("CHGTYP_0");

                entity.Property(e => e.Cleflg0).HasColumnName("CLEFLG_0");

                entity.Property(e => e.Clelinnbr0).HasColumnName("CLELINNBR_0");

                entity.Property(e => e.Copnbr0).HasColumnName("COPNBR_0");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cry0)
                    .IsRequired()
                    .HasColumnName("CRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Crynam0)
                    .IsRequired()
                    .HasColumnName("CRYNAM_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Cty0)
                    .IsRequired()
                    .HasColumnName("CTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dep0)
                    .IsRequired()
                    .HasColumnName("DEP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Discrgtyp0).HasColumnName("DISCRGTYP_0");

                entity.Property(e => e.Discrgtyp1).HasColumnName("DISCRGTYP_1");

                entity.Property(e => e.Discrgtyp2).HasColumnName("DISCRGTYP_2");

                entity.Property(e => e.Discrgtyp3).HasColumnName("DISCRGTYP_3");

                entity.Property(e => e.Discrgtyp4).HasColumnName("DISCRGTYP_4");

                entity.Property(e => e.Discrgtyp5).HasColumnName("DISCRGTYP_5");

                entity.Property(e => e.Discrgtyp6).HasColumnName("DISCRGTYP_6");

                entity.Property(e => e.Discrgtyp7).HasColumnName("DISCRGTYP_7");

                entity.Property(e => e.Discrgtyp8).HasColumnName("DISCRGTYP_8");

                entity.Property(e => e.Dme0).HasColumnName("DME_0");

                entity.Property(e => e.Dspvou0)
                    .IsRequired()
                    .HasColumnName("DSPVOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dspweu0)
                    .IsRequired()
                    .HasColumnName("DSPWEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Eecict0)
                    .IsRequired()
                    .HasColumnName("EECICT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eecloc0).HasColumnName("EECLOC_0");

                entity.Property(e => e.Eecnum0)
                    .IsRequired()
                    .HasColumnName("EECNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Enddat0)
                    .HasColumnName("ENDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Extrcpdat10)
                    .HasColumnName("EXTRCPDAT1_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fbulinnbr0).HasColumnName("FBULINNBR_0");

                entity.Property(e => e.Ffwadd0)
                    .IsRequired()
                    .HasColumnName("FFWADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ffwnum0)
                    .IsRequired()
                    .HasColumnName("FFWNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Fupflg0).HasColumnName("FUPFLG_0");

                entity.Property(e => e.Gpgcod0)
                    .IsRequired()
                    .HasColumnName("GPGCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Ictcty0)
                    .IsRequired()
                    .HasColumnName("ICTCTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Invdtalin10).HasColumnName("INVDTALIN1_0");

                entity.Property(e => e.Invdtalin11).HasColumnName("INVDTALIN1_1");

                entity.Property(e => e.Invdtalin12).HasColumnName("INVDTALIN1_2");

                entity.Property(e => e.Invdtalin13).HasColumnName("INVDTALIN1_3");

                entity.Property(e => e.Invdtalin14).HasColumnName("INVDTALIN1_4");

                entity.Property(e => e.Invdtalin15).HasColumnName("INVDTALIN1_5");

                entity.Property(e => e.Invdtalin16).HasColumnName("INVDTALIN1_6");

                entity.Property(e => e.Invdtalin17).HasColumnName("INVDTALIN1_7");

                entity.Property(e => e.Invdtalin18).HasColumnName("INVDTALIN1_8");

                entity.Property(e => e.Invdtalin20).HasColumnName("INVDTALIN2_0");

                entity.Property(e => e.Invdtalin21).HasColumnName("INVDTALIN2_1");

                entity.Property(e => e.Invdtalin22).HasColumnName("INVDTALIN2_2");

                entity.Property(e => e.Invdtalin23).HasColumnName("INVDTALIN2_3");

                entity.Property(e => e.Invdtalin24).HasColumnName("INVDTALIN2_4");

                entity.Property(e => e.Invdtalin25).HasColumnName("INVDTALIN2_5");

                entity.Property(e => e.Invdtalin26).HasColumnName("INVDTALIN2_6");

                entity.Property(e => e.Invdtalin27).HasColumnName("INVDTALIN2_7");

                entity.Property(e => e.Invdtalin28).HasColumnName("INVDTALIN2_8");

                entity.Property(e => e.Invdtavat10)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat11)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat12)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat13)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat14)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat15)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat16)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat17)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat18)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat20)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat21)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat22)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat23)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat24)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat25)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat26)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat27)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat28)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Invfcy0)
                    .IsRequired()
                    .HasColumnName("INVFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invflg0).HasColumnName("INVFLG_0");

                entity.Property(e => e.Invlinnbr0).HasColumnName("INVLINNBR_0");

                entity.Property(e => e.Invnbr0).HasColumnName("INVNBR_0");

                entity.Property(e => e.Lan0)
                    .IsRequired()
                    .HasColumnName("LAN_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Linnbr0).HasColumnName("LINNBR_0");

                entity.Property(e => e.Mdl0)
                    .IsRequired()
                    .HasColumnName("MDL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ocndat0)
                    .HasColumnName("OCNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ocnflg0).HasColumnName("OCNFLG_0");

                entity.Property(e => e.Ocnnum0)
                    .IsRequired()
                    .HasColumnName("OCNNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Ocnrem0)
                    .IsRequired()
                    .HasColumnName("OCNREM_0")
                    .HasMaxLength(150);

                entity.Property(e => e.Orddat0)
                    .HasColumnName("ORDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ordmaxamt0)
                    .HasColumnName("ORDMAXAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordref0)
                    .IsRequired()
                    .HasColumnName("ORDREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Orifcy0)
                    .IsRequired()
                    .HasColumnName("ORIFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pjth0)
                    .IsRequired()
                    .HasColumnName("PJTH_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Pohfcy0)
                    .IsRequired()
                    .HasColumnName("POHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohtyp0).HasColumnName("POHTYP_0");

                entity.Property(e => e.Poscod0)
                    .IsRequired()
                    .HasColumnName("POSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Prnflg0).HasColumnName("PRNFLG_0");

                entity.Property(e => e.Pte0)
                    .IsRequired()
                    .HasColumnName("PTE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Purtyp0).HasColumnName("PURTYP_0");

                entity.Property(e => e.Rcpfcy0)
                    .IsRequired()
                    .HasColumnName("RCPFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Rcpflg0).HasColumnName("RCPFLG_0");

                entity.Property(e => e.Rcplinnbr0).HasColumnName("RCPLINNBR_0");

                entity.Property(e => e.Rcpnbr0).HasColumnName("RCPNBR_0");

                entity.Property(e => e.Revnum0).HasColumnName("REVNUM_0");

                entity.Property(e => e.Salfcy0)
                    .IsRequired()
                    .HasColumnName("SALFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sat0)
                    .IsRequired()
                    .HasColumnName("SAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Sinum0)
                    .IsRequired()
                    .HasColumnName("SINUM_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Sohcat0).HasColumnName("SOHCAT_0");

                entity.Property(e => e.Stofcy0)
                    .IsRequired()
                    .HasColumnName("STOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Strdat0)
                    .HasColumnName("STRDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Tctrnum0)
                    .IsRequired()
                    .HasColumnName("TCTRNUM_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Tctrqty0).HasColumnName("TCTRQTY_0");

                entity.Property(e => e.Tex10)
                    .IsRequired()
                    .HasColumnName("TEX1_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Tex20)
                    .IsRequired()
                    .HasColumnName("TEX2_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Totlinamt0)
                    .HasColumnName("TOTLINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totlinati0)
                    .HasColumnName("TOTLINATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totlinqty0)
                    .HasColumnName("TOTLINQTY_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Totlinvou0)
                    .HasColumnName("TOTLINVOU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Totlinweu0)
                    .HasColumnName("TOTLINWEU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Totord0)
                    .HasColumnName("TOTORD_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totordl0)
                    .HasColumnName("TOTORDL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Tottaxamt0)
                    .HasColumnName("TOTTAXAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totvlt0)
                    .HasColumnName("TOTVLT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Tsscod0)
                    .IsRequired()
                    .HasColumnName("TSSCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod1)
                    .IsRequired()
                    .HasColumnName("TSSCOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod2)
                    .IsRequired()
                    .HasColumnName("TSSCOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod3)
                    .IsRequired()
                    .HasColumnName("TSSCOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod4)
                    .IsRequired()
                    .HasColumnName("TSSCOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Ttvord0)
                    .HasColumnName("TTVORD_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ttvordl0)
                    .HasColumnName("TTVORDL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacbpr0)
                    .IsRequired()
                    .HasColumnName("VACBPR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vactyp0).HasColumnName("VACTYP_0");

                entity.Property(e => e.Volcap0)
                    .HasColumnName("VOLCAP_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Weicap0)
                    .HasColumnName("WEICAP_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Zpo010)
                    .IsRequired()
                    .HasColumnName("ZPO01_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpo020)
                    .IsRequired()
                    .HasColumnName("ZPO02_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpo030)
                    .IsRequired()
                    .HasColumnName("ZPO03_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpo040)
                    .IsRequired()
                    .HasColumnName("ZPO04_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpo050)
                    .IsRequired()
                    .HasColumnName("ZPO05_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpo060)
                    .IsRequired()
                    .HasColumnName("ZPO06_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Zpo070)
                    .HasColumnName("ZPO07_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Zpo080).HasColumnName("ZPO08_0");

                entity.Property(e => e.Zpo090)
                    .IsRequired()
                    .HasColumnName("ZPO09_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpo100).HasColumnName("ZPO10_0");

                entity.Property(e => e.Zpo110).HasColumnName("ZPO11_0");

                entity.Property(e => e.Zpo120).HasColumnName("ZPO12_0");

                entity.Property(e => e.Zpo130).HasColumnName("ZPO13_0");

                entity.Property(e => e.Zpo140).HasColumnName("ZPO14_0");

                entity.Property(e => e.Zpo150).HasColumnName("ZPO15_0");

                entity.Property(e => e.Zpo160)
                    .IsRequired()
                    .HasColumnName("ZPO16_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpo170)
                    .HasColumnName("ZPO17_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Zpo180)
                    .HasColumnName("ZPO18_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Zpo190)
                    .HasColumnName("ZPO19_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Zpo200)
                    .IsRequired()
                    .HasColumnName("ZPO20_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Zpo210).HasColumnName("ZPO21_0");
            });

            modelBuilder.Entity<Porderp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PORDERP", "VIPCO");

                entity.HasIndex(e => e.Pjt0)
                    .HasName("PORDERP_PJMPJT1");

                entity.HasIndex(e => new { e.Itmref0, e.Pohtyp0 })
                    .HasName("PORDERP_POP3");

                entity.HasIndex(e => new { e.Pohnum0, e.Poplin0, e.Popdat0 })
                    .HasName("PORDERP_POP1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Pohnum0, e.Poplin0, e.Popseq0 })
                    .HasName("PORDERP_POP0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Prhfcy0, e.Pohnum0, e.Poplin0 })
                    .HasName("PORDERP_POP2");

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Discrgren10).HasColumnName("DISCRGREN1_0");

                entity.Property(e => e.Discrgren20).HasColumnName("DISCRGREN2_0");

                entity.Property(e => e.Discrgren30).HasColumnName("DISCRGREN3_0");

                entity.Property(e => e.Discrgren40).HasColumnName("DISCRGREN4_0");

                entity.Property(e => e.Discrgren50).HasColumnName("DISCRGREN5_0");

                entity.Property(e => e.Discrgren60).HasColumnName("DISCRGREN6_0");

                entity.Property(e => e.Discrgren70).HasColumnName("DISCRGREN7_0");

                entity.Property(e => e.Discrgren80).HasColumnName("DISCRGREN8_0");

                entity.Property(e => e.Discrgren90).HasColumnName("DISCRGREN9_0");

                entity.Property(e => e.Discrgval10)
                    .HasColumnName("DISCRGVAL1_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval20)
                    .HasColumnName("DISCRGVAL2_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval30)
                    .HasColumnName("DISCRGVAL3_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval40)
                    .HasColumnName("DISCRGVAL4_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval50)
                    .HasColumnName("DISCRGVAL5_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval60)
                    .HasColumnName("DISCRGVAL6_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval70)
                    .HasColumnName("DISCRGVAL7_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval80)
                    .HasColumnName("DISCRGVAL8_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval90)
                    .HasColumnName("DISCRGVAL9_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Eecincrat0)
                    .HasColumnName("EECINCRAT_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fcyadd0)
                    .IsRequired()
                    .HasColumnName("FCYADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Gropri0)
                    .HasColumnName("GROPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Itmdes0)
                    .IsRequired()
                    .HasColumnName("ITMDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmdes10)
                    .IsRequired()
                    .HasColumnName("ITMDES1_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Linbuy0)
                    .IsRequired()
                    .HasColumnName("LINBUY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Linrevnum0).HasColumnName("LINREVNUM_0");

                entity.Property(e => e.Mattol0)
                    .IsRequired()
                    .HasColumnName("MATTOL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Netpri0)
                    .HasColumnName("NETPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Oricry0)
                    .IsRequired()
                    .HasColumnName("ORICRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pjt0)
                    .IsRequired()
                    .HasColumnName("PJT_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohtyp0).HasColumnName("POHTYP_0");

                entity.Property(e => e.Popcreflg0).HasColumnName("POPCREFLG_0");

                entity.Property(e => e.Popdat0)
                    .HasColumnName("POPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Poplin0).HasColumnName("POPLIN_0");

                entity.Property(e => e.Popseq0).HasColumnName("POPSEQ_0");

                entity.Property(e => e.Prhfcy0)
                    .IsRequired()
                    .HasColumnName("PRHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Priren0).HasColumnName("PRIREN_0");

                entity.Property(e => e.Quaflg0).HasColumnName("QUAFLG_0");

                entity.Property(e => e.Strdat0)
                    .HasColumnName("STRDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Taxiss0)
                    .IsRequired()
                    .HasColumnName("TAXISS_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth10)
                    .IsRequired()
                    .HasColumnName("TAXOTH1_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth20)
                    .IsRequired()
                    .HasColumnName("TAXOTH2_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxrcp0)
                    .IsRequired()
                    .HasColumnName("TAXRCP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Tsicod0)
                    .IsRequired()
                    .HasColumnName("TSICOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod1)
                    .IsRequired()
                    .HasColumnName("TSICOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod2)
                    .IsRequired()
                    .HasColumnName("TSICOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod3)
                    .IsRequired()
                    .HasColumnName("TSICOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod4)
                    .IsRequired()
                    .HasColumnName("TSICOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat0)
                    .IsRequired()
                    .HasColumnName("VAT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat1)
                    .IsRequired()
                    .HasColumnName("VAT_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat2)
                    .IsRequired()
                    .HasColumnName("VAT_2")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Porderq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PORDERQ", "VIPCO");

                entity.HasIndex(e => new { e.Pohnum0, e.Poqlnk0 })
                    .HasName("PORDERQ_POQ3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Pohnum0, e.Poplin0, e.Poqseq0 })
                    .HasName("PORDERQ_POQ0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Lincleflg0, e.Wipsta0, e.Prhfcy0, e.Bpsnum0, e.Pohnum0 })
                    .HasName("PORDERQ_POQ2");

                entity.HasIndex(e => new { e.Lininvflg0, e.Wipsta0, e.Bpsinv0, e.Itmref0, e.Pohnum0 })
                    .HasName("PORDERQ_POQ1");

                entity.HasIndex(e => new { e.Vcrtypori0, e.Vcrnumori0, e.Vcrlinori0, e.Vcrseqori0, e.Itmrefori0 })
                    .HasName("PORDERQ_POQ4");

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Amttaxiss0)
                    .HasColumnName("AMTTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin10)
                    .HasColumnName("AMTTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin20)
                    .HasColumnName("AMTTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin30)
                    .HasColumnName("AMTTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth10)
                    .HasColumnName("AMTTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth20)
                    .HasColumnName("AMTTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxrcp0)
                    .HasColumnName("AMTTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bastaxlin10)
                    .HasColumnName("BASTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpsinv0)
                    .IsRequired()
                    .HasColumnName("BPSINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cad0).HasColumnName("CAD_0");

                entity.Property(e => e.Clcamt10)
                    .HasColumnName("CLCAMT1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt20)
                    .HasColumnName("CLCAMT2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt30)
                    .HasColumnName("CLCAMT3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt40)
                    .HasColumnName("CLCAMT4_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt50)
                    .HasColumnName("CLCAMT5_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt60)
                    .HasColumnName("CLCAMT6_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt70)
                    .HasColumnName("CLCAMT7_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cmmflg0).HasColumnName("CMMFLG_0");

                entity.Property(e => e.Cmmnum0)
                    .IsRequired()
                    .HasColumnName("CMMNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cmmtax0).HasColumnName("CMMTAX_0");

                entity.Property(e => e.Cpr0)
                    .HasColumnName("CPR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Cpramt0)
                    .HasColumnName("CPRAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cprcoe0)
                    .HasColumnName("CPRCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Cprcur0)
                    .IsRequired()
                    .HasColumnName("CPRCUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Cprpri0)
                    .HasColumnName("CPRPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cstpur0)
                    .HasColumnName("CSTPUR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Dedtaxiss0)
                    .HasColumnName("DEDTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin10)
                    .HasColumnName("DEDTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin20)
                    .HasColumnName("DEDTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin30)
                    .HasColumnName("DEDTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth10)
                    .HasColumnName("DEDTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth20)
                    .HasColumnName("DEDTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxrcp0)
                    .HasColumnName("DEDTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Demenddat0)
                    .HasColumnName("DEMENDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Demendhou0).HasColumnName("DEMENDHOU_0");

                entity.Property(e => e.Demrcpdat0)
                    .HasColumnName("DEMRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Demrcphou0).HasColumnName("DEMRCPHOU_0");

                entity.Property(e => e.Disbaslin10)
                    .HasColumnName("DISBASLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt10)
                    .HasColumnName("DISCRGAMT1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt20)
                    .HasColumnName("DISCRGAMT2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt30)
                    .HasColumnName("DISCRGAMT3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt40)
                    .HasColumnName("DISCRGAMT4_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt50)
                    .HasColumnName("DISCRGAMT5_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt60)
                    .HasColumnName("DISCRGAMT6_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt70)
                    .HasColumnName("DISCRGAMT7_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt80)
                    .HasColumnName("DISCRGAMT8_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt90)
                    .HasColumnName("DISCRGAMT9_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Eccvalmaj0)
                    .IsRequired()
                    .HasColumnName("ECCVALMAJ_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Eccvalmin0)
                    .IsRequired()
                    .HasColumnName("ECCVALMIN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Extrcpdat0)
                    .HasColumnName("EXTRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fbuflg0).HasColumnName("FBUFLG_0");

                entity.Property(e => e.Fcscpr0)
                    .HasColumnName("FCSCPR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Fcscstpur0)
                    .HasColumnName("FCSCSTPUR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Fcyadd0)
                    .IsRequired()
                    .HasColumnName("FCYADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invqtypuu0)
                    .HasColumnName("INVQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Invqtystu0)
                    .HasColumnName("INVQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Invrcpnbr0).HasColumnName("INVRCPNBR_0");

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Itmrefbps0)
                    .IsRequired()
                    .HasColumnName("ITMREFBPS_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Itmrefori0)
                    .IsRequired()
                    .HasColumnName("ITMREFORI_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Lasinvdat0)
                    .HasColumnName("LASINVDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lasrcpdat0)
                    .HasColumnName("LASRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Likqtycoe0)
                    .HasColumnName("LIKQTYCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Linamt0)
                    .HasColumnName("LINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Linamtcpr0)
                    .HasColumnName("LINAMTCPR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Linati0)
                    .HasColumnName("LINATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Linatiamt0)
                    .HasColumnName("LINATIAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Lincleflg0).HasColumnName("LINCLEFLG_0");

                entity.Property(e => e.Lincstpur0)
                    .HasColumnName("LINCSTPUR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Lininvflg0).HasColumnName("LININVFLG_0");

                entity.Property(e => e.Lininvnbr0).HasColumnName("LININVNBR_0");

                entity.Property(e => e.Linocndat0)
                    .HasColumnName("LINOCNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Linocnflg0).HasColumnName("LINOCNFLG_0");

                entity.Property(e => e.Linocnnum0)
                    .IsRequired()
                    .HasColumnName("LINOCNNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Linprnflg0).HasColumnName("LINPRNFLG_0");

                entity.Property(e => e.Linpurtyp0).HasColumnName("LINPURTYP_0");

                entity.Property(e => e.Linrcpnbr0).HasColumnName("LINRCPNBR_0");

                entity.Property(e => e.Linrevnum0).HasColumnName("LINREVNUM_0");

                entity.Property(e => e.Linsta0).HasColumnName("LINSTA_0");

                entity.Property(e => e.Linstofcy0)
                    .IsRequired()
                    .HasColumnName("LINSTOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Lintex0)
                    .IsRequired()
                    .HasColumnName("LINTEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Lintyp0).HasColumnName("LINTYP_0");

                entity.Property(e => e.Linvou0)
                    .IsRequired()
                    .HasColumnName("LINVOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Linweu0)
                    .IsRequired()
                    .HasColumnName("LINWEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Mon0).HasColumnName("MON_0");

                entity.Property(e => e.Netcur0)
                    .IsRequired()
                    .HasColumnName("NETCUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Ocnlin0).HasColumnName("OCNLIN_0");

                entity.Property(e => e.Ocnseq0).HasColumnName("OCNSEQ_0");

                entity.Property(e => e.Ofs0)
                    .HasColumnName("OFS_0")
                    .HasColumnType("numeric(9, 4)");

                entity.Property(e => e.Orddat0)
                    .HasColumnName("ORDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ori0).HasColumnName("ORI_0");

                entity.Property(e => e.Pohfcy0)
                    .IsRequired()
                    .HasColumnName("POHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohtyp0).HasColumnName("POHTYP_0");

                entity.Property(e => e.Poplin0).HasColumnName("POPLIN_0");

                entity.Property(e => e.Poqlnk0)
                    .IsRequired()
                    .HasColumnName("POQLNK_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Poqseq0).HasColumnName("POQSEQ_0");

                entity.Property(e => e.Ppdlin0).HasColumnName("PPDLIN_0");

                entity.Property(e => e.Pqhnum0)
                    .IsRequired()
                    .HasColumnName("PQHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Prhfcy0)
                    .IsRequired()
                    .HasColumnName("PRHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ptdlin0).HasColumnName("PTDLIN_0");

                entity.Property(e => e.Pthnum0)
                    .IsRequired()
                    .HasColumnName("PTHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Puu0)
                    .IsRequired()
                    .HasColumnName("PUU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Qtypuu0)
                    .HasColumnName("QTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystu0)
                    .HasColumnName("QTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyuom0)
                    .HasColumnName("QTYUOM_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyvou0)
                    .HasColumnName("QTYVOU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyweu0)
                    .HasColumnName("QTYWEU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rcpcleflg0).HasColumnName("RCPCLEFLG_0");

                entity.Property(e => e.Rcpqtypuu0)
                    .HasColumnName("RCPQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rcpqtystu0)
                    .HasColumnName("RCPQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Reacstpur0)
                    .HasColumnName("REACSTPUR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Retqtypuu0)
                    .HasColumnName("RETQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Retqtystu0)
                    .HasColumnName("RETQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Retrcpdat0)
                    .HasColumnName("RETRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Scoadd0)
                    .IsRequired()
                    .HasColumnName("SCOADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sddlin0).HasColumnName("SDDLIN_0");

                entity.Property(e => e.Sdhnum0)
                    .IsRequired()
                    .HasColumnName("SDHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Shiqtypuu0)
                    .HasColumnName("SHIQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Shiqtystu0)
                    .HasColumnName("SHIQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Sohnum0)
                    .IsRequired()
                    .HasColumnName("SOHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Soplin0).HasColumnName("SOPLIN_0");

                entity.Property(e => e.Soqseq0).HasColumnName("SOQSEQ_0");

                entity.Property(e => e.Stcnum0)
                    .IsRequired()
                    .HasColumnName("STCNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom0)
                    .IsRequired()
                    .HasColumnName("UOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Uomflg0).HasColumnName("UOMFLG_0");

                entity.Property(e => e.Uompuucoe0)
                    .HasColumnName("UOMPUUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Useplc0)
                    .IsRequired()
                    .HasColumnName("USEPLC_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Vcrlinori0).HasColumnName("VCRLINORI_0");

                entity.Property(e => e.Vcrnumori0)
                    .IsRequired()
                    .HasColumnName("VCRNUMORI_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrseqori0).HasColumnName("VCRSEQORI_0");

                entity.Property(e => e.Vcrtypori0).HasColumnName("VCRTYPORI_0");

                entity.Property(e => e.Wee0).HasColumnName("WEE_0");

                entity.Property(e => e.Wipnum0)
                    .IsRequired()
                    .HasColumnName("WIPNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Wipsta0).HasColumnName("WIPSTA_0");

                entity.Property(e => e.Wiptyp0).HasColumnName("WIPTYP_0");

                entity.Property(e => e.Yea0).HasColumnName("YEA_0");

                entity.Property(e => e.Zpo220)
                    .HasColumnName("ZPO22_0")
                    .HasColumnType("numeric(14, 3)");
            });

            modelBuilder.Entity<Ppreason>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PPREASON", "VIPCO");

                entity.HasIndex(e => e.Priren0)
                    .HasName("PPREASON_PPR0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Dacman0).HasColumnName("DACMAN_0");

                entity.Property(e => e.Des0)
                    .IsRequired()
                    .HasColumnName("DES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Landessho0)
                    .IsRequired()
                    .HasColumnName("LANDESSHO_0")
                    .HasMaxLength(60);

                entity.Property(e => e.Priren0).HasColumnName("PRIREN_0");

                entity.Property(e => e.Prirencar0)
                    .IsRequired()
                    .HasColumnName("PRIRENCAR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updpri0).HasColumnName("UPDPRI_0");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Preceipt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PRECEIPT", "VIPCO");

                entity.HasIndex(e => e.Bpsnde0)
                    .HasName("PRECEIPT_PTH1");

                entity.HasIndex(e => e.Pthnum0)
                    .HasName("PRECEIPT_PTH0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Bpsnum0, e.Rcpdat0 })
                    .HasName("PRECEIPT_PTH2");

                entity.HasIndex(e => new { e.Rcpdat0, e.Pthnum0 })
                    .HasName("PRECEIPT_PTH3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cpy0, e.Eecnumdeb0, e.Rcpdat0 })
                    .HasName("PRECEIPT_PTH4");

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Arvdat0)
                    .HasColumnName("ARVDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Betcpy0).HasColumnName("BETCPY_0");

                entity.Property(e => e.Betfcy0).HasColumnName("BETFCY_0");

                entity.Property(e => e.Bpaadd0)
                    .IsRequired()
                    .HasColumnName("BPAADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpapay0)
                    .IsRequired()
                    .HasColumnName("BPAPAY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpoadd0)
                    .IsRequired()
                    .HasColumnName("BPOADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpoaddlig0)
                    .IsRequired()
                    .HasColumnName("BPOADDLIG_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpoaddlig1)
                    .IsRequired()
                    .HasColumnName("BPOADDLIG_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpoaddlig2)
                    .IsRequired()
                    .HasColumnName("BPOADDLIG_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpocry0)
                    .IsRequired()
                    .HasColumnName("BPOCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bpocrynam0)
                    .IsRequired()
                    .HasColumnName("BPOCRYNAM_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bpocty0)
                    .IsRequired()
                    .HasColumnName("BPOCTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bponam0)
                    .IsRequired()
                    .HasColumnName("BPONAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bponam1)
                    .IsRequired()
                    .HasColumnName("BPONAM_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpoposcod0)
                    .IsRequired()
                    .HasColumnName("BPOPOSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bposat0)
                    .IsRequired()
                    .HasColumnName("BPOSAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bprpay0)
                    .IsRequired()
                    .HasColumnName("BPRPAY_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsinv0)
                    .IsRequired()
                    .HasColumnName("BPSINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsnde0)
                    .IsRequired()
                    .HasColumnName("BPSNDE_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bptnum0)
                    .IsRequired()
                    .HasColumnName("BPTNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cai0)
                    .IsRequired()
                    .HasColumnName("CAI_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Chgcoe0)
                    .HasColumnName("CHGCOE_0")
                    .HasColumnType("numeric(21, 10)");

                entity.Property(e => e.Chgtyp0).HasColumnName("CHGTYP_0");

                entity.Property(e => e.Clsvcr0)
                    .IsRequired()
                    .HasColumnName("CLSVCR_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Datvlycai0)
                    .HasColumnName("DATVLYCAI_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dep0)
                    .IsRequired()
                    .HasColumnName("DEP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Dpedat0)
                    .HasColumnName("DPEDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Dspvou0)
                    .IsRequired()
                    .HasColumnName("DSPVOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dspweu0)
                    .IsRequired()
                    .HasColumnName("DSPWEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Eecict0)
                    .IsRequired()
                    .HasColumnName("EECICT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eecloc0).HasColumnName("EECLOC_0");

                entity.Property(e => e.Eecnat0)
                    .IsRequired()
                    .HasColumnName("EECNAT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eecnum0)
                    .IsRequired()
                    .HasColumnName("EECNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Eecnumdeb0).HasColumnName("EECNUMDEB_0");

                entity.Property(e => e.Eecsch0)
                    .IsRequired()
                    .HasColumnName("EECSCH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eectrn0).HasColumnName("EECTRN_0");

                entity.Property(e => e.Entcod0)
                    .IsRequired()
                    .HasColumnName("ENTCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eta0)
                    .IsRequired()
                    .HasColumnName("ETA_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Etd0)
                    .IsRequired()
                    .HasColumnName("ETD_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Ffwadd0)
                    .IsRequired()
                    .HasColumnName("FFWADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ffwnum0)
                    .IsRequired()
                    .HasColumnName("FFWNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Gpgcod0)
                    .IsRequired()
                    .HasColumnName("GPGCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Ictcty0)
                    .IsRequired()
                    .HasColumnName("ICTCTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Invdtalin10).HasColumnName("INVDTALIN1_0");

                entity.Property(e => e.Invdtalin11).HasColumnName("INVDTALIN1_1");

                entity.Property(e => e.Invdtalin12).HasColumnName("INVDTALIN1_2");

                entity.Property(e => e.Invdtalin13).HasColumnName("INVDTALIN1_3");

                entity.Property(e => e.Invdtalin14).HasColumnName("INVDTALIN1_4");

                entity.Property(e => e.Invdtalin15).HasColumnName("INVDTALIN1_5");

                entity.Property(e => e.Invdtalin16).HasColumnName("INVDTALIN1_6");

                entity.Property(e => e.Invdtalin17).HasColumnName("INVDTALIN1_7");

                entity.Property(e => e.Invdtalin18).HasColumnName("INVDTALIN1_8");

                entity.Property(e => e.Invdtalin20).HasColumnName("INVDTALIN2_0");

                entity.Property(e => e.Invdtalin21).HasColumnName("INVDTALIN2_1");

                entity.Property(e => e.Invdtalin22).HasColumnName("INVDTALIN2_2");

                entity.Property(e => e.Invdtalin23).HasColumnName("INVDTALIN2_3");

                entity.Property(e => e.Invdtalin24).HasColumnName("INVDTALIN2_4");

                entity.Property(e => e.Invdtalin25).HasColumnName("INVDTALIN2_5");

                entity.Property(e => e.Invdtalin26).HasColumnName("INVDTALIN2_6");

                entity.Property(e => e.Invdtalin27).HasColumnName("INVDTALIN2_7");

                entity.Property(e => e.Invdtalin28).HasColumnName("INVDTALIN2_8");

                entity.Property(e => e.Invdtavat10)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat11)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat12)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat13)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat14)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat15)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat16)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat17)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat18)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat20)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat21)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat22)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat23)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat24)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat25)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat26)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat27)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat28)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Invflg0).HasColumnName("INVFLG_0");

                entity.Property(e => e.Invlinctr0).HasColumnName("INVLINCTR_0");

                entity.Property(e => e.Invlinnbr0).HasColumnName("INVLINNBR_0");

                entity.Property(e => e.Licplate0)
                    .IsRequired()
                    .HasColumnName("LICPLATE_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Linnbr0).HasColumnName("LINNBR_0");

                entity.Property(e => e.Mdl0)
                    .IsRequired()
                    .HasColumnName("MDL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ndedat0)
                    .HasColumnName("NDEDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Pjth0)
                    .IsRequired()
                    .HasColumnName("PJTH_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Prhfcy0)
                    .IsRequired()
                    .HasColumnName("PRHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Prnflg0).HasColumnName("PRNFLG_0");

                entity.Property(e => e.Pstdat0)
                    .HasColumnName("PSTDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Pstflg0).HasColumnName("PSTFLG_0");

                entity.Property(e => e.Pstlinnbr0).HasColumnName("PSTLINNBR_0");

                entity.Property(e => e.Pthnum0)
                    .IsRequired()
                    .HasColumnName("PTHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Purtyp0).HasColumnName("PURTYP_0");

                entity.Property(e => e.Rcpdat0)
                    .HasColumnName("RCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Scuvcr0)
                    .IsRequired()
                    .HasColumnName("SCUVCR_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Seqvcr0)
                    .IsRequired()
                    .HasColumnName("SEQVCR_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Tex10)
                    .IsRequired()
                    .HasColumnName("TEX1_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Tex20)
                    .IsRequired()
                    .HasColumnName("TEX2_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Totamtati0)
                    .HasColumnName("TOTAMTATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totamtatil0)
                    .HasColumnName("TOTAMTATIL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totamtnot0)
                    .HasColumnName("TOTAMTNOT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totamtnotl0)
                    .HasColumnName("TOTAMTNOTL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totgrowei0)
                    .HasColumnName("TOTGROWEI_0")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Totlinamt0)
                    .HasColumnName("TOTLINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totlinqty0)
                    .HasColumnName("TOTLINQTY_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Totlinvou0)
                    .HasColumnName("TOTLINVOU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Totlinweu0)
                    .HasColumnName("TOTLINWEU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Totnetwei0)
                    .HasColumnName("TOTNETWEI_0")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Tottaxamt0)
                    .HasColumnName("TOTTAXAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totvol0)
                    .HasColumnName("TOTVOL_0")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Trllicplate0)
                    .IsRequired()
                    .HasColumnName("TRLLICPLATE_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Trscod0)
                    .IsRequired()
                    .HasColumnName("TRSCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod0)
                    .IsRequired()
                    .HasColumnName("TSSCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod1)
                    .IsRequired()
                    .HasColumnName("TSSCOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod2)
                    .IsRequired()
                    .HasColumnName("TSSCOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod3)
                    .IsRequired()
                    .HasColumnName("TSSCOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod4)
                    .IsRequired()
                    .HasColumnName("TSSCOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Typvcr0)
                    .IsRequired()
                    .HasColumnName("TYPVCR_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacbpr0)
                    .IsRequired()
                    .HasColumnName("VACBPR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vactyp0).HasColumnName("VACTYP_0");

                entity.Property(e => e.Vou0)
                    .IsRequired()
                    .HasColumnName("VOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Weu0)
                    .IsRequired()
                    .HasColumnName("WEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Wrhe0)
                    .IsRequired()
                    .HasColumnName("WRHE_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Zpo040)
                    .IsRequired()
                    .HasColumnName("ZPO04_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zprc010).HasColumnName("ZPRC01_0");

                entity.Property(e => e.Zprc020)
                    .IsRequired()
                    .HasColumnName("ZPRC02_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zprc030)
                    .IsRequired()
                    .HasColumnName("ZPRC03_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Zprc040)
                    .IsRequired()
                    .HasColumnName("ZPRC04_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Zprc050).HasColumnName("ZPRC05_0");

                entity.Property(e => e.Zprc060).HasColumnName("ZPRC06_0");

                entity.Property(e => e.Zprc070)
                    .IsRequired()
                    .HasColumnName("ZPRC07_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zprc080).HasColumnName("ZPRC08_0");

                entity.Property(e => e.Zprc090).HasColumnName("ZPRC09_0");

                entity.Property(e => e.Zprc100)
                    .IsRequired()
                    .HasColumnName("ZPRC10_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zprc110)
                    .IsRequired()
                    .HasColumnName("ZPRC11_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zprc120)
                    .IsRequired()
                    .HasColumnName("ZPRC12_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zprc130).HasColumnName("ZPRC13_0");

                entity.Property(e => e.Zprc140)
                    .IsRequired()
                    .HasColumnName("ZPRC14_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zprc150)
                    .IsRequired()
                    .HasColumnName("ZPRC15_0");

                entity.Property(e => e.Zprc180)
                    .IsRequired()
                    .HasColumnName("ZPRC18_0")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Preceiptd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PRECEIPTD", "VIPCO");

                entity.HasIndex(e => e.Pjt0)
                    .HasName("PRECEIPTD_PJMPJT1");

                entity.HasIndex(e => new { e.Pthnum0, e.Ptdlin0 })
                    .HasName("PRECEIPTD_PTD0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Lininvflg0, e.Bpsinv0, e.Itmref0, e.Pthnum0, e.Ptdlin0 })
                    .HasName("PRECEIPTD_PTD1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Pohnum0, e.Poplin0, e.Poqseq0, e.Pthnum0, e.Ptdlin0 })
                    .HasName("PRECEIPTD_PTD2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Prhfcy0, e.Bpsnum0, e.Itmref0, e.Pthnum0, e.Ptdlin0 })
                    .HasName("PRECEIPTD_PTD3")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Amttaxiss0)
                    .HasColumnName("AMTTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin10)
                    .HasColumnName("AMTTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin20)
                    .HasColumnName("AMTTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin30)
                    .HasColumnName("AMTTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth10)
                    .HasColumnName("AMTTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth20)
                    .HasColumnName("AMTTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxrcp0)
                    .HasColumnName("AMTTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bastaxlin10)
                    .HasColumnName("BASTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpocry0)
                    .IsRequired()
                    .HasColumnName("BPOCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bpsinv0)
                    .IsRequired()
                    .HasColumnName("BPSINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Clcamt10)
                    .HasColumnName("CLCAMT1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt20)
                    .HasColumnName("CLCAMT2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt30)
                    .HasColumnName("CLCAMT3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt40)
                    .HasColumnName("CLCAMT4_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt50)
                    .HasColumnName("CLCAMT5_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt60)
                    .HasColumnName("CLCAMT6_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt70)
                    .HasColumnName("CLCAMT7_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cpr0)
                    .HasColumnName("CPR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Cpramt0)
                    .HasColumnName("CPRAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cprclc0)
                    .HasColumnName("CPRCLC_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Cprcoe0)
                    .HasColumnName("CPRCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Cprcur0)
                    .IsRequired()
                    .HasColumnName("CPRCUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Cprpri0)
                    .HasColumnName("CPRPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cstpur0)
                    .HasColumnName("CSTPUR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Dedtaxiss0)
                    .HasColumnName("DEDTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin10)
                    .HasColumnName("DEDTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin20)
                    .HasColumnName("DEDTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin30)
                    .HasColumnName("DEDTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth10)
                    .HasColumnName("DEDTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth20)
                    .HasColumnName("DEDTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxrcp0)
                    .HasColumnName("DEDTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Disbaslin10)
                    .HasColumnName("DISBASLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt10)
                    .HasColumnName("DISCRGAMT1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt20)
                    .HasColumnName("DISCRGAMT2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt30)
                    .HasColumnName("DISCRGAMT3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt40)
                    .HasColumnName("DISCRGAMT4_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt50)
                    .HasColumnName("DISCRGAMT5_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt60)
                    .HasColumnName("DISCRGAMT6_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt70)
                    .HasColumnName("DISCRGAMT7_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt80)
                    .HasColumnName("DISCRGAMT8_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt90)
                    .HasColumnName("DISCRGAMT9_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgren10).HasColumnName("DISCRGREN1_0");

                entity.Property(e => e.Discrgren20).HasColumnName("DISCRGREN2_0");

                entity.Property(e => e.Discrgren30).HasColumnName("DISCRGREN3_0");

                entity.Property(e => e.Discrgren40).HasColumnName("DISCRGREN4_0");

                entity.Property(e => e.Discrgren50).HasColumnName("DISCRGREN5_0");

                entity.Property(e => e.Discrgren60).HasColumnName("DISCRGREN6_0");

                entity.Property(e => e.Discrgren70).HasColumnName("DISCRGREN7_0");

                entity.Property(e => e.Discrgren80).HasColumnName("DISCRGREN8_0");

                entity.Property(e => e.Discrgren90).HasColumnName("DISCRGREN9_0");

                entity.Property(e => e.Discrgval10)
                    .HasColumnName("DISCRGVAL1_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval20)
                    .HasColumnName("DISCRGVAL2_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval30)
                    .HasColumnName("DISCRGVAL3_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval40)
                    .HasColumnName("DISCRGVAL4_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval50)
                    .HasColumnName("DISCRGVAL5_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval60)
                    .HasColumnName("DISCRGVAL6_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval70)
                    .HasColumnName("DISCRGVAL7_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval80)
                    .HasColumnName("DISCRGVAL8_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval90)
                    .HasColumnName("DISCRGVAL9_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Eecincrat0)
                    .HasColumnName("EECINCRAT_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fcscpr0)
                    .HasColumnName("FCSCPR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Fcscprcpt0)
                    .HasColumnName("FCSCPRCPT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Fcscstpur0)
                    .HasColumnName("FCSCSTPUR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Gropri0)
                    .HasColumnName("GROPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Invqtypuu0)
                    .HasColumnName("INVQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Invqtystu0)
                    .HasColumnName("INVQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Itmdes0)
                    .IsRequired()
                    .HasColumnName("ITMDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmdes10)
                    .IsRequired()
                    .HasColumnName("ITMDES1_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Itmrefori0)
                    .IsRequired()
                    .HasColumnName("ITMREFORI_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Likqtycoe0)
                    .HasColumnName("LIKQTYCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Linamt0)
                    .HasColumnName("LINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Linamtcpr0)
                    .HasColumnName("LINAMTCPR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Linatiamt0)
                    .HasColumnName("LINATIAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Lincat0).HasColumnName("LINCAT_0");

                entity.Property(e => e.Lincstpur0)
                    .HasColumnName("LINCSTPUR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Lineecflg0).HasColumnName("LINEECFLG_0");

                entity.Property(e => e.Lininvflg0).HasColumnName("LININVFLG_0");

                entity.Property(e => e.Linprnflg0).HasColumnName("LINPRNFLG_0");

                entity.Property(e => e.Linpstdat0)
                    .HasColumnName("LINPSTDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Linpstflg0).HasColumnName("LINPSTFLG_0");

                entity.Property(e => e.Linpurtyp0).HasColumnName("LINPURTYP_0");

                entity.Property(e => e.Linstofcy0)
                    .IsRequired()
                    .HasColumnName("LINSTOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Lintex0)
                    .IsRequired()
                    .HasColumnName("LINTEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Lintyp0).HasColumnName("LINTYP_0");

                entity.Property(e => e.Linvou0)
                    .IsRequired()
                    .HasColumnName("LINVOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Linweu0)
                    .IsRequired()
                    .HasColumnName("LINWEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Mattol0)
                    .IsRequired()
                    .HasColumnName("MATTOL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Netcur0)
                    .IsRequired()
                    .HasColumnName("NETCUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Netpri0)
                    .HasColumnName("NETPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Netpripuu0)
                    .HasColumnName("NETPRIPUU_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Oricry0)
                    .IsRequired()
                    .HasColumnName("ORICRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pjt0)
                    .IsRequired()
                    .HasColumnName("PJT_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Pohfcy0)
                    .IsRequired()
                    .HasColumnName("POHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohtyp0).HasColumnName("POHTYP_0");

                entity.Property(e => e.Poplin0).HasColumnName("POPLIN_0");

                entity.Property(e => e.Poqseq0).HasColumnName("POQSEQ_0");

                entity.Property(e => e.Prhfcy0)
                    .IsRequired()
                    .HasColumnName("PRHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Priren0).HasColumnName("PRIREN_0");

                entity.Property(e => e.Ptdlin0).HasColumnName("PTDLIN_0");

                entity.Property(e => e.Pthnum0)
                    .IsRequired()
                    .HasColumnName("PTHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Puu0)
                    .IsRequired()
                    .HasColumnName("PUU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Qtypuu0)
                    .HasColumnName("QTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystu0)
                    .HasColumnName("QTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyuom0)
                    .HasColumnName("QTYUOM_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyvou0)
                    .HasColumnName("QTYVOU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyweu0)
                    .HasColumnName("QTYWEU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Quaflg0).HasColumnName("QUAFLG_0");

                entity.Property(e => e.Quartnflg0).HasColumnName("QUARTNFLG_0");

                entity.Property(e => e.Rcpdat0)
                    .HasColumnName("RCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Rrrqtypuu0)
                    .HasColumnName("RRRQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rrrqtystu0)
                    .HasColumnName("RRRQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rtnqtypuu0)
                    .HasColumnName("RTNQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rtnqtystu0)
                    .HasColumnName("RTNQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Satiss0)
                    .IsRequired()
                    .HasColumnName("SATISS_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Scocstcpt0)
                    .HasColumnName("SCOCSTCPT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Sddlin0).HasColumnName("SDDLIN_0");

                entity.Property(e => e.Sdhnum0)
                    .IsRequired()
                    .HasColumnName("SDHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Shiplin0).HasColumnName("SHIPLIN_0");

                entity.Property(e => e.Shipnum0)
                    .IsRequired()
                    .HasColumnName("SHIPNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Stcnum0)
                    .IsRequired()
                    .HasColumnName("STCNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Stomgtcod0).HasColumnName("STOMGTCOD_0");

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Taxiss0)
                    .IsRequired()
                    .HasColumnName("TAXISS_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth10)
                    .IsRequired()
                    .HasColumnName("TAXOTH1_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth20)
                    .IsRequired()
                    .HasColumnName("TAXOTH2_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxrcp0)
                    .IsRequired()
                    .HasColumnName("TAXRCP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Trsfam0)
                    .IsRequired()
                    .HasColumnName("TRSFAM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod0)
                    .IsRequired()
                    .HasColumnName("TSICOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod1)
                    .IsRequired()
                    .HasColumnName("TSICOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod2)
                    .IsRequired()
                    .HasColumnName("TSICOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod3)
                    .IsRequired()
                    .HasColumnName("TSICOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod4)
                    .IsRequired()
                    .HasColumnName("TSICOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Uom0)
                    .IsRequired()
                    .HasColumnName("UOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Uompuucoe0)
                    .HasColumnName("UOMPUUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Uomstucoe0)
                    .HasColumnName("UOMSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat0)
                    .IsRequired()
                    .HasColumnName("VAT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat1)
                    .IsRequired()
                    .HasColumnName("VAT_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat2)
                    .IsRequired()
                    .HasColumnName("VAT_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Vcrlinori0).HasColumnName("VCRLINORI_0");

                entity.Property(e => e.Vcrnumori0)
                    .IsRequired()
                    .HasColumnName("VCRNUMORI_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrseqori0).HasColumnName("VCRSEQORI_0");

                entity.Property(e => e.Vcrtypori0).HasColumnName("VCRTYPORI_0");

                entity.Property(e => e.Verflg0).HasColumnName("VERFLG_0");

                entity.Property(e => e.Wrh0)
                    .IsRequired()
                    .HasColumnName("WRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Zprc160)
                    .HasColumnName("ZPRC16_0")
                    .HasColumnType("numeric(14, 3)");

                entity.Property(e => e.Zprc170)
                    .IsRequired()
                    .HasColumnName("ZPRC17_0")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Prequis>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PREQUIS", "VIPCO");

                entity.HasIndex(e => e.Pshnum0)
                    .HasName("PREQUIS_PSH0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Prqdat0, e.Pshnum0 })
                    .HasName("PREQUIS_PSH2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Pshfcy0, e.Pshnum0 })
                    .HasName("PREQUIS_PSH1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Pshnummms0, e.Pshnum0 })
                    .HasName("PREQUIS_PSH3")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Appflg0).HasColumnName("APPFLG_0");

                entity.Property(e => e.Applinnbr0).HasColumnName("APPLINNBR_0");

                entity.Property(e => e.Atecori0).HasColumnName("ATECORI_0");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Cleflg0).HasColumnName("CLEFLG_0");

                entity.Property(e => e.Clelinnbr0).HasColumnName("CLELINNBR_0");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fbulinnbr0).HasColumnName("FBULINNBR_0");

                entity.Property(e => e.Linnbr0).HasColumnName("LINNBR_0");

                entity.Property(e => e.Mmsurl0)
                    .IsRequired()
                    .HasColumnName("MMSURL_0")
                    .HasMaxLength(250);

                entity.Property(e => e.Ordflg0).HasColumnName("ORDFLG_0");

                entity.Property(e => e.Ordlinnbr0).HasColumnName("ORDLINNBR_0");

                entity.Property(e => e.Pjth0)
                    .IsRequired()
                    .HasColumnName("PJTH_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Prnflg0).HasColumnName("PRNFLG_0");

                entity.Property(e => e.Prqdat0)
                    .HasColumnName("PRQDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Pshfcy0)
                    .IsRequired()
                    .HasColumnName("PSHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pshnum0)
                    .IsRequired()
                    .HasColumnName("PSHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pshnummms0)
                    .IsRequired()
                    .HasColumnName("PSHNUMMMS_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Requsr0)
                    .IsRequired()
                    .HasColumnName("REQUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Tex10)
                    .IsRequired()
                    .HasColumnName("TEX1_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Tex20)
                    .IsRequired()
                    .HasColumnName("TEX2_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Totprq0)
                    .HasColumnName("TOTPRQ_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Zpr010)
                    .IsRequired()
                    .HasColumnName("ZPR01_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr020)
                    .IsRequired()
                    .HasColumnName("ZPR02_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpr030)
                    .IsRequired()
                    .HasColumnName("ZPR03_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpr040)
                    .IsRequired()
                    .HasColumnName("ZPR04_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpr050)
                    .IsRequired()
                    .HasColumnName("ZPR05_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpr060)
                    .IsRequired()
                    .HasColumnName("ZPR06_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpr070)
                    .IsRequired()
                    .HasColumnName("ZPR07_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpr080)
                    .IsRequired()
                    .HasColumnName("ZPR08_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr090)
                    .IsRequired()
                    .HasColumnName("ZPR09_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpr100).HasColumnName("ZPR10_0");

                entity.Property(e => e.Zpr110)
                    .IsRequired()
                    .HasColumnName("ZPR11_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr120)
                    .HasColumnName("ZPR12_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Zpr130).HasColumnName("ZPR13_0");

                entity.Property(e => e.Zpr140).HasColumnName("ZPR14_0");

                entity.Property(e => e.Zpr150).HasColumnName("ZPR15_0");

                entity.Property(e => e.Zpr160).HasColumnName("ZPR16_0");

                entity.Property(e => e.Zpr170).HasColumnName("ZPR17_0");

                entity.Property(e => e.Zpr180).HasColumnName("ZPR18_0");

                entity.Property(e => e.Zpr190)
                    .IsRequired()
                    .HasColumnName("ZPR19_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr200)
                    .IsRequired()
                    .HasColumnName("ZPR20_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr210)
                    .IsRequired()
                    .HasColumnName("ZPR21_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr220)
                    .IsRequired()
                    .HasColumnName("ZPR22_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr230)
                    .IsRequired()
                    .HasColumnName("ZPR23_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr240)
                    .IsRequired()
                    .HasColumnName("ZPR24_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr250)
                    .IsRequired()
                    .HasColumnName("ZPR25_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr260)
                    .IsRequired()
                    .HasColumnName("ZPR26_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr270)
                    .IsRequired()
                    .HasColumnName("ZPR27_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr280)
                    .IsRequired()
                    .HasColumnName("ZPR28_0")
                    .HasMaxLength(100);

                entity.Property(e => e.Zpr290)
                    .IsRequired()
                    .HasColumnName("ZPR29_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Zpr300).HasColumnName("ZPR30_0");
            });

            modelBuilder.Entity<Prequisd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PREQUISD", "VIPCO");

                entity.HasIndex(e => e.Pjt0)
                    .HasName("PREQUISD_PJMPJT1");

                entity.HasIndex(e => new { e.Pshnum0, e.Psdlin0 })
                    .HasName("PREQUISD_PSD0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Linordflg0, e.Linbuy0, e.Extorddat0 })
                    .HasName("PREQUISD_PSD2");

                entity.HasIndex(e => new { e.Psdnummms0, e.Pshnum0, e.Psdlin0 })
                    .HasName("PREQUISD_PSD3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Linordflg0, e.Itmref0, e.Extrcpdat0, e.Pshnum0, e.Psdlin0 })
                    .HasName("PREQUISD_PSD1");

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Amttaxiss0)
                    .HasColumnName("AMTTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin10)
                    .HasColumnName("AMTTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin20)
                    .HasColumnName("AMTTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin30)
                    .HasColumnName("AMTTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth10)
                    .HasColumnName("AMTTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth20)
                    .HasColumnName("AMTTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxrcp0)
                    .HasColumnName("AMTTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Atecori0).HasColumnName("ATECORI_0");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bastaxlin10)
                    .HasColumnName("BASTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Chgcoe0)
                    .HasColumnName("CHGCOE_0")
                    .HasColumnType("numeric(21, 10)");

                entity.Property(e => e.Chgtyp0).HasColumnName("CHGTYP_0");

                entity.Property(e => e.Clcamt10)
                    .HasColumnName("CLCAMT1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt20)
                    .HasColumnName("CLCAMT2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt30)
                    .HasColumnName("CLCAMT3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt40)
                    .HasColumnName("CLCAMT4_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt50)
                    .HasColumnName("CLCAMT5_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt60)
                    .HasColumnName("CLCAMT6_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt70)
                    .HasColumnName("CLCAMT7_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cmmprpflg0).HasColumnName("CMMPRPFLG_0");

                entity.Property(e => e.Cmmprpnum0)
                    .IsRequired()
                    .HasColumnName("CMMPRPNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cmmprptax0).HasColumnName("CMMPRPTAX_0");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dedtaxiss0)
                    .HasColumnName("DEDTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin10)
                    .HasColumnName("DEDTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin20)
                    .HasColumnName("DEDTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin30)
                    .HasColumnName("DEDTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth10)
                    .HasColumnName("DEDTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth20)
                    .HasColumnName("DEDTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxrcp0)
                    .HasColumnName("DEDTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgren10).HasColumnName("DISCRGREN1_0");

                entity.Property(e => e.Discrgren20).HasColumnName("DISCRGREN2_0");

                entity.Property(e => e.Discrgren30).HasColumnName("DISCRGREN3_0");

                entity.Property(e => e.Discrgren40).HasColumnName("DISCRGREN4_0");

                entity.Property(e => e.Discrgren50).HasColumnName("DISCRGREN5_0");

                entity.Property(e => e.Discrgren60).HasColumnName("DISCRGREN6_0");

                entity.Property(e => e.Discrgren70).HasColumnName("DISCRGREN7_0");

                entity.Property(e => e.Discrgren80).HasColumnName("DISCRGREN8_0");

                entity.Property(e => e.Discrgren90).HasColumnName("DISCRGREN9_0");

                entity.Property(e => e.Discrgval10)
                    .HasColumnName("DISCRGVAL1_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval20)
                    .HasColumnName("DISCRGVAL2_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval30)
                    .HasColumnName("DISCRGVAL3_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval40)
                    .HasColumnName("DISCRGVAL4_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval50)
                    .HasColumnName("DISCRGVAL5_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval60)
                    .HasColumnName("DISCRGVAL6_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval70)
                    .HasColumnName("DISCRGVAL7_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval80)
                    .HasColumnName("DISCRGVAL8_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval90)
                    .HasColumnName("DISCRGVAL9_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Eccvalmaj0)
                    .IsRequired()
                    .HasColumnName("ECCVALMAJ_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Eccvalmin0)
                    .IsRequired()
                    .HasColumnName("ECCVALMIN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Extorddat0)
                    .HasColumnName("EXTORDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Extrcpdat0)
                    .HasColumnName("EXTRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fbuflg0).HasColumnName("FBUFLG_0");

                entity.Property(e => e.Gropri0)
                    .HasColumnName("GROPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Itmdes0)
                    .IsRequired()
                    .HasColumnName("ITMDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmdes10)
                    .IsRequired()
                    .HasColumnName("ITMDES1_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Linamt0)
                    .HasColumnName("LINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Linappflg0).HasColumnName("LINAPPFLG_0");

                entity.Property(e => e.Linatiamt0)
                    .HasColumnName("LINATIAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Linbuy0)
                    .IsRequired()
                    .HasColumnName("LINBUY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Lincleflg0).HasColumnName("LINCLEFLG_0");

                entity.Property(e => e.Linordflg0).HasColumnName("LINORDFLG_0");

                entity.Property(e => e.Linpurtyp0).HasColumnName("LINPURTYP_0");

                entity.Property(e => e.Lintex0)
                    .IsRequired()
                    .HasColumnName("LINTEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Nbaof0).HasColumnName("NBAOF_0");

                entity.Property(e => e.Netpri0)
                    .HasColumnName("NETPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Ordqtypuu0)
                    .HasColumnName("ORDQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Ordqtystu0)
                    .HasColumnName("ORDQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Ori0).HasColumnName("ORI_0");

                entity.Property(e => e.Pjt0)
                    .IsRequired()
                    .HasColumnName("PJT_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Ppdlin0).HasColumnName("PPDLIN_0");

                entity.Property(e => e.Pqhnum0)
                    .IsRequired()
                    .HasColumnName("PQHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Prhfcy0)
                    .IsRequired()
                    .HasColumnName("PRHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Priren0).HasColumnName("PRIREN_0");

                entity.Property(e => e.Psdlin0).HasColumnName("PSDLIN_0");

                entity.Property(e => e.Psdnummms0)
                    .IsRequired()
                    .HasColumnName("PSDNUMMMS_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Pshfcy0)
                    .IsRequired()
                    .HasColumnName("PSHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pshnum0)
                    .IsRequired()
                    .HasColumnName("PSHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Puu0)
                    .IsRequired()
                    .HasColumnName("PUU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Qtypuu0)
                    .HasColumnName("QTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystu0)
                    .HasColumnName("QTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Taxiss0)
                    .IsRequired()
                    .HasColumnName("TAXISS_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth10)
                    .IsRequired()
                    .HasColumnName("TAXOTH1_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth20)
                    .IsRequired()
                    .HasColumnName("TAXOTH2_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxrcp0)
                    .IsRequired()
                    .HasColumnName("TAXRCP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacbpr0)
                    .IsRequired()
                    .HasColumnName("VACBPR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vactyp0).HasColumnName("VACTYP_0");

                entity.Property(e => e.Vat0)
                    .IsRequired()
                    .HasColumnName("VAT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat1)
                    .IsRequired()
                    .HasColumnName("VAT_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat2)
                    .IsRequired()
                    .HasColumnName("VAT_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Wipnum0)
                    .IsRequired()
                    .HasColumnName("WIPNUM_0")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Prequiso>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PREQUISO", "VIPCO");

                entity.HasIndex(e => new { e.Pohnum0, e.Poplin0, e.Poqseq0, e.Pshnum0, e.Psdlin0 })
                    .HasName("PREQUISO_PSO1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Pshnum0, e.Psdlin0, e.Pohnum0, e.Poplin0, e.Poqseq0 })
                    .HasName("PREQUISO_PSO0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Poplin0).HasColumnName("POPLIN_0");

                entity.Property(e => e.Poqseq0).HasColumnName("POQSEQ_0");

                entity.Property(e => e.Psdlin0).HasColumnName("PSDLIN_0");

                entity.Property(e => e.Pshnum0)
                    .IsRequired()
                    .HasColumnName("PSHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Puu0)
                    .IsRequired()
                    .HasColumnName("PUU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Qtypuu0)
                    .HasColumnName("QTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystu0)
                    .HasColumnName("QTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Preturnd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PRETURND", "VIPCO");

                entity.HasIndex(e => e.Pjt0)
                    .HasName("PRETURND_PJMPJT1");

                entity.HasIndex(e => new { e.Pnhnum0, e.Pndlin0 })
                    .HasName("PRETURND_PND0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Pthnum0, e.Ptdlin0 })
                    .HasName("PRETURND_PND1");

                entity.HasIndex(e => new { e.Pohnum0, e.Poplin0, e.Poqseq0 })
                    .HasName("PRETURND_PND3");

                entity.HasIndex(e => new { e.Lininvflg0, e.Bpsinv0, e.Itmref0, e.Pnhnum0, e.Pndlin0 })
                    .HasName("PRETURND_PND2")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Amttaxiss0)
                    .HasColumnName("AMTTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin10)
                    .HasColumnName("AMTTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin20)
                    .HasColumnName("AMTTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin30)
                    .HasColumnName("AMTTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth10)
                    .HasColumnName("AMTTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth20)
                    .HasColumnName("AMTTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxrcp0)
                    .HasColumnName("AMTTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bastaxlin10)
                    .HasColumnName("BASTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpocry0)
                    .IsRequired()
                    .HasColumnName("BPOCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bpsinv0)
                    .IsRequired()
                    .HasColumnName("BPSINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsnde0)
                    .IsRequired()
                    .HasColumnName("BPSNDE_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Clcamt10)
                    .HasColumnName("CLCAMT1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt20)
                    .HasColumnName("CLCAMT2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt30)
                    .HasColumnName("CLCAMT3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt40)
                    .HasColumnName("CLCAMT4_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt50)
                    .HasColumnName("CLCAMT5_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt60)
                    .HasColumnName("CLCAMT6_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt70)
                    .HasColumnName("CLCAMT7_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cpr0)
                    .HasColumnName("CPR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Cprcoe0)
                    .HasColumnName("CPRCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Cprcur0)
                    .IsRequired()
                    .HasColumnName("CPRCUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Dedtaxiss0)
                    .HasColumnName("DEDTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin10)
                    .HasColumnName("DEDTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin20)
                    .HasColumnName("DEDTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin30)
                    .HasColumnName("DEDTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth10)
                    .HasColumnName("DEDTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth20)
                    .HasColumnName("DEDTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxrcp0)
                    .HasColumnName("DEDTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgren10).HasColumnName("DISCRGREN1_0");

                entity.Property(e => e.Discrgren20).HasColumnName("DISCRGREN2_0");

                entity.Property(e => e.Discrgren30).HasColumnName("DISCRGREN3_0");

                entity.Property(e => e.Discrgren40).HasColumnName("DISCRGREN4_0");

                entity.Property(e => e.Discrgren50).HasColumnName("DISCRGREN5_0");

                entity.Property(e => e.Discrgren60).HasColumnName("DISCRGREN6_0");

                entity.Property(e => e.Discrgren70).HasColumnName("DISCRGREN7_0");

                entity.Property(e => e.Discrgren80).HasColumnName("DISCRGREN8_0");

                entity.Property(e => e.Discrgren90).HasColumnName("DISCRGREN9_0");

                entity.Property(e => e.Discrgval10)
                    .HasColumnName("DISCRGVAL1_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval20)
                    .HasColumnName("DISCRGVAL2_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval30)
                    .HasColumnName("DISCRGVAL3_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval40)
                    .HasColumnName("DISCRGVAL4_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval50)
                    .HasColumnName("DISCRGVAL5_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval60)
                    .HasColumnName("DISCRGVAL6_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval70)
                    .HasColumnName("DISCRGVAL7_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval80)
                    .HasColumnName("DISCRGVAL8_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval90)
                    .HasColumnName("DISCRGVAL9_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Eecincrat0)
                    .HasColumnName("EECINCRAT_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Gropri0)
                    .HasColumnName("GROPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Invqtypuu0)
                    .HasColumnName("INVQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Invqtystu0)
                    .HasColumnName("INVQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Itmdes0)
                    .IsRequired()
                    .HasColumnName("ITMDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmdes10)
                    .IsRequired()
                    .HasColumnName("ITMDES1_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Likqtycoe0)
                    .HasColumnName("LIKQTYCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Linamt0)
                    .HasColumnName("LINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Linatiamt0)
                    .HasColumnName("LINATIAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Linautflg0).HasColumnName("LINAUTFLG_0");

                entity.Property(e => e.Lincat0).HasColumnName("LINCAT_0");

                entity.Property(e => e.Lineecflg0).HasColumnName("LINEECFLG_0");

                entity.Property(e => e.Lininvflg0).HasColumnName("LININVFLG_0");

                entity.Property(e => e.Linprnflg0).HasColumnName("LINPRNFLG_0");

                entity.Property(e => e.Linpstdat0)
                    .HasColumnName("LINPSTDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Linpstflg0).HasColumnName("LINPSTFLG_0");

                entity.Property(e => e.Linpurtyp0).HasColumnName("LINPURTYP_0");

                entity.Property(e => e.Linstofcy0)
                    .IsRequired()
                    .HasColumnName("LINSTOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Lintex0)
                    .IsRequired()
                    .HasColumnName("LINTEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Lintyp0).HasColumnName("LINTYP_0");

                entity.Property(e => e.Netcur0)
                    .IsRequired()
                    .HasColumnName("NETCUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Netpri0)
                    .HasColumnName("NETPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Netpripuu0)
                    .HasColumnName("NETPRIPUU_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Ordflg0).HasColumnName("ORDFLG_0");

                entity.Property(e => e.Oricry0)
                    .IsRequired()
                    .HasColumnName("ORICRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pjt0)
                    .IsRequired()
                    .HasColumnName("PJT_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Pndlin0).HasColumnName("PNDLIN_0");

                entity.Property(e => e.Pnhfcy0)
                    .IsRequired()
                    .HasColumnName("PNHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pnhnum0)
                    .IsRequired()
                    .HasColumnName("PNHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohfcy0)
                    .IsRequired()
                    .HasColumnName("POHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohtyp0).HasColumnName("POHTYP_0");

                entity.Property(e => e.Poplin0).HasColumnName("POPLIN_0");

                entity.Property(e => e.Poqseq0).HasColumnName("POQSEQ_0");

                entity.Property(e => e.Priren0).HasColumnName("PRIREN_0");

                entity.Property(e => e.Ptdlin0).HasColumnName("PTDLIN_0");

                entity.Property(e => e.Pthnum0)
                    .IsRequired()
                    .HasColumnName("PTHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Puu0)
                    .IsRequired()
                    .HasColumnName("PUU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Qtypuu0)
                    .HasColumnName("QTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystu0)
                    .HasColumnName("QTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyuom0)
                    .HasColumnName("QTYUOM_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rtndat0)
                    .HasColumnName("RTNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Rtndes0)
                    .IsRequired()
                    .HasColumnName("RTNDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Rtnren0)
                    .IsRequired()
                    .HasColumnName("RTNREN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Satiss0)
                    .IsRequired()
                    .HasColumnName("SATISS_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Srdlin0).HasColumnName("SRDLIN_0");

                entity.Property(e => e.Srdqtystu0)
                    .HasColumnName("SRDQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Srhnum0)
                    .IsRequired()
                    .HasColumnName("SRHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Stomgtcod0).HasColumnName("STOMGTCOD_0");

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Taxiss0)
                    .IsRequired()
                    .HasColumnName("TAXISS_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth10)
                    .IsRequired()
                    .HasColumnName("TAXOTH1_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth20)
                    .IsRequired()
                    .HasColumnName("TAXOTH2_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxrcp0)
                    .IsRequired()
                    .HasColumnName("TAXRCP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Trsfam0)
                    .IsRequired()
                    .HasColumnName("TRSFAM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod0)
                    .IsRequired()
                    .HasColumnName("TSICOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod1)
                    .IsRequired()
                    .HasColumnName("TSICOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod2)
                    .IsRequired()
                    .HasColumnName("TSICOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod3)
                    .IsRequired()
                    .HasColumnName("TSICOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod4)
                    .IsRequired()
                    .HasColumnName("TSICOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Untwei0)
                    .HasColumnName("UNTWEI_0")
                    .HasColumnType("numeric(13, 4)");

                entity.Property(e => e.Uom0)
                    .IsRequired()
                    .HasColumnName("UOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Uomflg0).HasColumnName("UOMFLG_0");

                entity.Property(e => e.Uompuucoe0)
                    .HasColumnName("UOMPUUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Uomstucoe0)
                    .HasColumnName("UOMSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat0)
                    .IsRequired()
                    .HasColumnName("VAT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat1)
                    .IsRequired()
                    .HasColumnName("VAT_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat2)
                    .IsRequired()
                    .HasColumnName("VAT_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Weu0)
                    .IsRequired()
                    .HasColumnName("WEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Wrh0)
                    .IsRequired()
                    .HasColumnName("WRH_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Pvcrfoot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PVCRFOOT", "VIPCO");

                entity.HasIndex(e => new { e.Vcrnum0, e.Vcrtyp0, e.Ind0 })
                    .HasName("PVCRFOOT_PVF0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Vcrtyp0, e.Vcrnum0, e.Ind0 })
                    .HasName("PVCRFOOT_PVF1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Num0, e.Vcrtyp0, e.Vcrnum0, e.Ind0 })
                    .HasName("PVCRFOOT_PVF2")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Amtcod0).HasColumnName("AMTCOD_0");

                entity.Property(e => e.Amtcodlib0)
                    .IsRequired()
                    .HasColumnName("AMTCODLIB_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Clcbas0).HasColumnName("CLCBAS_0");

                entity.Property(e => e.Clcord0).HasColumnName("CLCORD_0");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Debcdt0).HasColumnName("DEBCDT_0");

                entity.Property(e => e.Depflg0).HasColumnName("DEPFLG_0");

                entity.Property(e => e.Disvatflg0).HasColumnName("DISVATFLG_0");

                entity.Property(e => e.Dtaamttax0)
                    .HasColumnName("DTAAMTTAX_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dtadedtax0)
                    .HasColumnName("DTADEDTAX_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dtadep0)
                    .HasColumnName("DTADEP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dtadisbas0)
                    .HasColumnName("DTADISBAS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Format0)
                    .IsRequired()
                    .HasColumnName("FORMAT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Incdcr0).HasColumnName("INCDCR_0");

                entity.Property(e => e.Ind0).HasColumnName("IND_0");

                entity.Property(e => e.Invcplamt0)
                    .HasColumnName("INVCPLAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Invdta0).HasColumnName("INVDTA_0");

                entity.Property(e => e.Invdtaamt0)
                    .HasColumnName("INVDTAAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Invdtaflg0).HasColumnName("INVDTAFLG_0");

                entity.Property(e => e.Invdtavat0)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invlinamt0)
                    .HasColumnName("INVLINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Invlinflg0).HasColumnName("INVLINFLG_0");

                entity.Property(e => e.Invordamt0)
                    .HasColumnName("INVORDAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Invordflg0).HasColumnName("INVORDFLG_0");

                entity.Property(e => e.Num0)
                    .IsRequired()
                    .HasColumnName("NUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pthnum0)
                    .IsRequired()
                    .HasColumnName("PTHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Rcpcplamt0)
                    .HasColumnName("RCPCPLAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vcrnum0)
                    .IsRequired()
                    .HasColumnName("VCRNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrtyp0).HasColumnName("VCRTYP_0");
            });

            modelBuilder.Entity<Pvcrvat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PVCRVAT", "VIPCO");

                entity.HasIndex(e => new { e.Vcrnum0, e.Vcrtyp0, e.Ind0 })
                    .HasName("PVCRVAT_PVV0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Vcrtyp0, e.Vcrnum0, e.Ind0 })
                    .HasName("PVCRVAT_PVV1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Num0, e.Vcrtyp0, e.Vcrnum0, e.Ind0 })
                    .HasName("PVCRVAT_PVV2")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Amttax0)
                    .HasColumnName("AMTTAX_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Basdepati0)
                    .HasColumnName("BASDEPATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Basdepnot0)
                    .HasColumnName("BASDEPNOT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Bastax0)
                    .HasColumnName("BASTAX_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Dedrat0)
                    .HasColumnName("DEDRAT_0")
                    .HasColumnType("numeric(16, 7)");

                entity.Property(e => e.Dedtax0)
                    .HasColumnName("DEDTAX_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Disbas0)
                    .HasColumnName("DISBAS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Ind0).HasColumnName("IND_0");

                entity.Property(e => e.Num0)
                    .IsRequired()
                    .HasColumnName("NUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pthnum0)
                    .IsRequired()
                    .HasColumnName("PTHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Purtyp0).HasColumnName("PURTYP_0");

                entity.Property(e => e.Tax0)
                    .IsRequired()
                    .HasColumnName("TAX_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vatcha0).HasColumnName("VATCHA_0");

                entity.Property(e => e.Vatgro0)
                    .HasColumnName("VATGRO_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Vatrat0)
                    .HasColumnName("VATRAT_0")
                    .HasColumnType("numeric(16, 7)");

                entity.Property(e => e.Vatsupamt0)
                    .HasColumnName("VATSUPAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Vattyp0).HasColumnName("VATTYP_0");

                entity.Property(e => e.Vcrnum0)
                    .IsRequired()
                    .HasColumnName("VCRNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrtyp0).HasColumnName("VCRTYP_0");
            });

            modelBuilder.Entity<Smvtd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("SMVTD", "VIPCO");

                entity.HasIndex(e => new { e.Vcrtyp0, e.Vcrnum0, e.Vcrlin0 })
                    .HasName("SMVTD_SMD0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bomalt0).HasColumnName("BOMALT_0");

                entity.Property(e => e.Bomalttyp0).HasColumnName("BOMALTTYP_0");

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eccvalmaj0)
                    .IsRequired()
                    .HasColumnName("ECCVALMAJ_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Eccvalmin0)
                    .IsRequired()
                    .HasColumnName("ECCVALMIN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Impnumlig0).HasColumnName("IMPNUMLIG_0");

                entity.Property(e => e.Itmdes10)
                    .IsRequired()
                    .HasColumnName("ITMDES1_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Lintyp0).HasColumnName("LINTYP_0");

                entity.Property(e => e.Pcu0)
                    .IsRequired()
                    .HasColumnName("PCU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcustucoe0)
                    .HasColumnName("PCUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pntmvtcod0).HasColumnName("PNTMVTCOD_0");

                entity.Property(e => e.Pri0)
                    .HasColumnName("PRI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Priord0)
                    .HasColumnName("PRIORD_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Qtypcu0)
                    .HasColumnName("QTYPCU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtypcuori0)
                    .HasColumnName("QTYPCUORI_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystu0)
                    .HasColumnName("QTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystuori0)
                    .HasColumnName("QTYSTUORI_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Updcod0).HasColumnName("UPDCOD_0");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updpri0).HasColumnName("UPDPRI_0");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vcrlin0).HasColumnName("VCRLIN_0");

                entity.Property(e => e.Vcrlinori0).HasColumnName("VCRLINORI_0");

                entity.Property(e => e.Vcrlinpnt0).HasColumnName("VCRLINPNT_0");

                entity.Property(e => e.Vcrnum0)
                    .IsRequired()
                    .HasColumnName("VCRNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrnumori0)
                    .IsRequired()
                    .HasColumnName("VCRNUMORI_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrtyp0).HasColumnName("VCRTYP_0");

                entity.Property(e => e.Vcrtypori0).HasColumnName("VCRTYPORI_0");

                entity.Property(e => e.Wrh0)
                    .IsRequired()
                    .HasColumnName("WRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Zsm010)
                    .HasColumnName("ZSM01_0")
                    .HasColumnType("numeric(16, 4)");

                entity.Property(e => e.Zsm020)
                    .HasColumnName("ZSM02_0")
                    .HasColumnType("numeric(14, 3)");

                entity.Property(e => e.Zsm030)
                    .IsRequired()
                    .HasColumnName("ZSM03_0")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<Sorder>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("SORDER", "VIPCO");

                entity.HasIndex(e => e.Sohnum0)
                    .HasName("SORDER_SOH0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Bpcord0, e.Cusordref0 })
                    .HasName("SORDER_SOH1");

                entity.HasIndex(e => new { e.Cusordref0, e.Bpcord0 })
                    .HasName("SORDER_SOH2");

                entity.HasIndex(e => new { e.Ordsta0, e.Bpcord0 })
                    .HasName("SORDER_SOH3");

                entity.HasIndex(e => new { e.Ordsta0, e.Sohnum0 })
                    .HasName("SORDER_SOH4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Ordsta0, e.Invsta0, e.Sohcat0 })
                    .HasName("SORDER_SOH5");

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Adrval0).HasColumnName("ADRVAL_0");

                entity.Property(e => e.Alllinnbr0).HasColumnName("ALLLINNBR_0");

                entity.Property(e => e.Allsta0).HasColumnName("ALLSTA_0");

                entity.Property(e => e.Alltyp0).HasColumnName("ALLTYP_0");

                entity.Property(e => e.Amttax0)
                    .HasColumnName("AMTTAX_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Appflg0).HasColumnName("APPFLG_0");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bastax0)
                    .HasColumnName("BASTAX_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Betcpy0).HasColumnName("BETCPY_0");

                entity.Property(e => e.Betfcy0).HasColumnName("BETFCY_0");

                entity.Property(e => e.Bpaadd0)
                    .IsRequired()
                    .HasColumnName("BPAADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpaord0)
                    .IsRequired()
                    .HasColumnName("BPAORD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpapyr0)
                    .IsRequired()
                    .HasColumnName("BPAPYR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpcaddlig0)
                    .IsRequired()
                    .HasColumnName("BPCADDLIG_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpcaddlig1)
                    .IsRequired()
                    .HasColumnName("BPCADDLIG_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpcaddlig2)
                    .IsRequired()
                    .HasColumnName("BPCADDLIG_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpccry0)
                    .IsRequired()
                    .HasColumnName("BPCCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bpccrynam0)
                    .IsRequired()
                    .HasColumnName("BPCCRYNAM_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bpccty0)
                    .IsRequired()
                    .HasColumnName("BPCCTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bpcgru0)
                    .IsRequired()
                    .HasColumnName("BPCGRU_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpcinv0)
                    .IsRequired()
                    .HasColumnName("BPCINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpcnam0)
                    .IsRequired()
                    .HasColumnName("BPCNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpcnam1)
                    .IsRequired()
                    .HasColumnName("BPCNAM_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpcord0)
                    .IsRequired()
                    .HasColumnName("BPCORD_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpcposcod0)
                    .IsRequired()
                    .HasColumnName("BPCPOSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bpcpyr0)
                    .IsRequired()
                    .HasColumnName("BPCPYR_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpcsat0)
                    .IsRequired()
                    .HasColumnName("BPCSAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpdaddlig0)
                    .IsRequired()
                    .HasColumnName("BPDADDLIG_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpdaddlig1)
                    .IsRequired()
                    .HasColumnName("BPDADDLIG_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpdaddlig2)
                    .IsRequired()
                    .HasColumnName("BPDADDLIG_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpdcry0)
                    .IsRequired()
                    .HasColumnName("BPDCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bpdcrynam0)
                    .IsRequired()
                    .HasColumnName("BPDCRYNAM_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bpdcty0)
                    .IsRequired()
                    .HasColumnName("BPDCTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bpdnam0)
                    .IsRequired()
                    .HasColumnName("BPDNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpdnam1)
                    .IsRequired()
                    .HasColumnName("BPDNAM_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpdposcod0)
                    .IsRequired()
                    .HasColumnName("BPDPOSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bpdsat0)
                    .IsRequired()
                    .HasColumnName("BPDSAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpiaddlig0)
                    .IsRequired()
                    .HasColumnName("BPIADDLIG_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpiaddlig1)
                    .IsRequired()
                    .HasColumnName("BPIADDLIG_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpiaddlig2)
                    .IsRequired()
                    .HasColumnName("BPIADDLIG_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpicry0)
                    .IsRequired()
                    .HasColumnName("BPICRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bpicrynam0)
                    .IsRequired()
                    .HasColumnName("BPICRYNAM_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bpicty0)
                    .IsRequired()
                    .HasColumnName("BPICTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bpieecnum0)
                    .IsRequired()
                    .HasColumnName("BPIEECNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Bpinam0)
                    .IsRequired()
                    .HasColumnName("BPINAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpinam1)
                    .IsRequired()
                    .HasColumnName("BPINAM_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpiposcod0)
                    .IsRequired()
                    .HasColumnName("BPIPOSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bpisat0)
                    .IsRequired()
                    .HasColumnName("BPISAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bptnum0)
                    .IsRequired()
                    .HasColumnName("BPTNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Ccldat0)
                    .HasColumnName("CCLDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cclren0)
                    .IsRequired()
                    .HasColumnName("CCLREN_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cdtsta0).HasColumnName("CDTSTA_0");

                entity.Property(e => e.Cdtstap0).HasColumnName("CDTSTAP_0");

                entity.Property(e => e.Chgrat0)
                    .HasColumnName("CHGRAT_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Chgtyp0).HasColumnName("CHGTYP_0");

                entity.Property(e => e.Clelinnbr0).HasColumnName("CLELINNBR_0");

                entity.Property(e => e.Cmgnum0)
                    .IsRequired()
                    .HasColumnName("CMGNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cndnam0)
                    .IsRequired()
                    .HasColumnName("CNDNAM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cninam0)
                    .IsRequired()
                    .HasColumnName("CNINAM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cntnam0)
                    .IsRequired()
                    .HasColumnName("CNTNAM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Copnbr0).HasColumnName("COPNBR_0");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Cusordref0)
                    .IsRequired()
                    .HasColumnName("CUSORDREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Daylti0).HasColumnName("DAYLTI_0");

                entity.Property(e => e.Demdlvdat0)
                    .HasColumnName("DEMDLVDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Demdlvhou0)
                    .IsRequired()
                    .HasColumnName("DEMDLVHOU_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Dep0)
                    .IsRequired()
                    .HasColumnName("DEP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Discrgtyp0).HasColumnName("DISCRGTYP_0");

                entity.Property(e => e.Discrgtyp1).HasColumnName("DISCRGTYP_1");

                entity.Property(e => e.Discrgtyp2).HasColumnName("DISCRGTYP_2");

                entity.Property(e => e.Discrgtyp3).HasColumnName("DISCRGTYP_3");

                entity.Property(e => e.Discrgtyp4).HasColumnName("DISCRGTYP_4");

                entity.Property(e => e.Discrgtyp5).HasColumnName("DISCRGTYP_5");

                entity.Property(e => e.Discrgtyp6).HasColumnName("DISCRGTYP_6");

                entity.Property(e => e.Discrgtyp7).HasColumnName("DISCRGTYP_7");

                entity.Property(e => e.Discrgtyp8).HasColumnName("DISCRGTYP_8");

                entity.Property(e => e.Dlrati0)
                    .HasColumnName("DLRATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dlrnot0)
                    .HasColumnName("DLRNOT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dlvlinnbr0).HasColumnName("DLVLINNBR_0");

                entity.Property(e => e.Dlvpio0).HasColumnName("DLVPIO_0");

                entity.Property(e => e.Dlvsta0).HasColumnName("DLVSTA_0");

                entity.Property(e => e.Dme0).HasColumnName("DME_0");

                entity.Property(e => e.Drn0).HasColumnName("DRN_0");

                entity.Property(e => e.Dsptotqty0)
                    .HasColumnName("DSPTOTQTY_0")
                    .HasColumnType("numeric(22, 7)");

                entity.Property(e => e.Dsptotvol0)
                    .HasColumnName("DSPTOTVOL_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Dsptotwei0)
                    .HasColumnName("DSPTOTWEI_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Dspvou0)
                    .IsRequired()
                    .HasColumnName("DSPVOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dspweu0)
                    .IsRequired()
                    .HasColumnName("DSPWEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Eecict0)
                    .IsRequired()
                    .HasColumnName("EECICT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eecloc0).HasColumnName("EECLOC_0");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Ffwadd0)
                    .IsRequired()
                    .HasColumnName("FFWADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ffwnum0)
                    .IsRequired()
                    .HasColumnName("FFWNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Geocod0)
                    .IsRequired()
                    .HasColumnName("GEOCOD_0")
                    .HasMaxLength(9);

                entity.Property(e => e.Hldcod0)
                    .IsRequired()
                    .HasColumnName("HLDCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Hldcodp0)
                    .IsRequired()
                    .HasColumnName("HLDCODP_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Hlddat0)
                    .HasColumnName("HLDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Hlddatp0)
                    .HasColumnName("HLDDATP_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Hldsta0).HasColumnName("HLDSTA_0");

                entity.Property(e => e.Hldtim0)
                    .IsRequired()
                    .HasColumnName("HLDTIM_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Hldtimp0)
                    .IsRequired()
                    .HasColumnName("HLDTIMP_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Hldusr0)
                    .IsRequired()
                    .HasColumnName("HLDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Hldusrp0)
                    .IsRequired()
                    .HasColumnName("HLDUSRP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ictcty0)
                    .IsRequired()
                    .HasColumnName("ICTCTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Ime0).HasColumnName("IME_0");

                entity.Property(e => e.Inrati0)
                    .HasColumnName("INRATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Inrnot0)
                    .HasColumnName("INRNOT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Inrschati0)
                    .HasColumnName("INRSCHATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Inrschnot0)
                    .HasColumnName("INRSCHNOT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Insctyflg0)
                    .IsRequired()
                    .HasColumnName("INSCTYFLG_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Invcnd0)
                    .IsRequired()
                    .HasColumnName("INVCND_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Invdta0).HasColumnName("INVDTA_0");

                entity.Property(e => e.Invdta1).HasColumnName("INVDTA_1");

                entity.Property(e => e.Invdta10).HasColumnName("INVDTA_10");

                entity.Property(e => e.Invdta11).HasColumnName("INVDTA_11");

                entity.Property(e => e.Invdta12).HasColumnName("INVDTA_12");

                entity.Property(e => e.Invdta13).HasColumnName("INVDTA_13");

                entity.Property(e => e.Invdta14).HasColumnName("INVDTA_14");

                entity.Property(e => e.Invdta15).HasColumnName("INVDTA_15");

                entity.Property(e => e.Invdta16).HasColumnName("INVDTA_16");

                entity.Property(e => e.Invdta17).HasColumnName("INVDTA_17");

                entity.Property(e => e.Invdta18).HasColumnName("INVDTA_18");

                entity.Property(e => e.Invdta19).HasColumnName("INVDTA_19");

                entity.Property(e => e.Invdta2).HasColumnName("INVDTA_2");

                entity.Property(e => e.Invdta20).HasColumnName("INVDTA_20");

                entity.Property(e => e.Invdta21).HasColumnName("INVDTA_21");

                entity.Property(e => e.Invdta22).HasColumnName("INVDTA_22");

                entity.Property(e => e.Invdta23).HasColumnName("INVDTA_23");

                entity.Property(e => e.Invdta24).HasColumnName("INVDTA_24");

                entity.Property(e => e.Invdta25).HasColumnName("INVDTA_25");

                entity.Property(e => e.Invdta26).HasColumnName("INVDTA_26");

                entity.Property(e => e.Invdta27).HasColumnName("INVDTA_27");

                entity.Property(e => e.Invdta28).HasColumnName("INVDTA_28");

                entity.Property(e => e.Invdta29).HasColumnName("INVDTA_29");

                entity.Property(e => e.Invdta3).HasColumnName("INVDTA_3");

                entity.Property(e => e.Invdta4).HasColumnName("INVDTA_4");

                entity.Property(e => e.Invdta5).HasColumnName("INVDTA_5");

                entity.Property(e => e.Invdta6).HasColumnName("INVDTA_6");

                entity.Property(e => e.Invdta7).HasColumnName("INVDTA_7");

                entity.Property(e => e.Invdta8).HasColumnName("INVDTA_8");

                entity.Property(e => e.Invdta9).HasColumnName("INVDTA_9");

                entity.Property(e => e.Invdtaamt0)
                    .HasColumnName("INVDTAAMT_0")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt1)
                    .HasColumnName("INVDTAAMT_1")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt10)
                    .HasColumnName("INVDTAAMT_10")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt11)
                    .HasColumnName("INVDTAAMT_11")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt12)
                    .HasColumnName("INVDTAAMT_12")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt13)
                    .HasColumnName("INVDTAAMT_13")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt14)
                    .HasColumnName("INVDTAAMT_14")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt15)
                    .HasColumnName("INVDTAAMT_15")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt16)
                    .HasColumnName("INVDTAAMT_16")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt17)
                    .HasColumnName("INVDTAAMT_17")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt18)
                    .HasColumnName("INVDTAAMT_18")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt19)
                    .HasColumnName("INVDTAAMT_19")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt2)
                    .HasColumnName("INVDTAAMT_2")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt20)
                    .HasColumnName("INVDTAAMT_20")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt21)
                    .HasColumnName("INVDTAAMT_21")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt22)
                    .HasColumnName("INVDTAAMT_22")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt23)
                    .HasColumnName("INVDTAAMT_23")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt24)
                    .HasColumnName("INVDTAAMT_24")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt25)
                    .HasColumnName("INVDTAAMT_25")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt26)
                    .HasColumnName("INVDTAAMT_26")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt27)
                    .HasColumnName("INVDTAAMT_27")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt28)
                    .HasColumnName("INVDTAAMT_28")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt29)
                    .HasColumnName("INVDTAAMT_29")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt3)
                    .HasColumnName("INVDTAAMT_3")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt4)
                    .HasColumnName("INVDTAAMT_4")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt5)
                    .HasColumnName("INVDTAAMT_5")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt6)
                    .HasColumnName("INVDTAAMT_6")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt7)
                    .HasColumnName("INVDTAAMT_7")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt8)
                    .HasColumnName("INVDTAAMT_8")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtaamt9)
                    .HasColumnName("INVDTAAMT_9")
                    .HasColumnType("numeric(20, 5)");

                entity.Property(e => e.Invdtadsp0)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp1)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_1")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp10)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_10")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp11)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_11")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp12)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_12")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp13)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_13")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp14)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_14")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp15)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_15")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp16)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_16")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp17)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_17")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp18)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_18")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp19)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_19")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp2)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_2")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp20)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_20")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp21)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_21")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp22)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_22")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp23)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_23")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp24)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_24")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp25)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_25")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp26)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_26")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp27)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_27")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp28)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_28")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp29)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_29")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp3)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_3")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp4)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_4")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp5)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_5")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp6)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_6")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp7)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_7")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp8)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_8")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtadsp9)
                    .IsRequired()
                    .HasColumnName("INVDTADSP_9")
                    .HasMaxLength(10);

                entity.Property(e => e.Invdtalin0).HasColumnName("INVDTALIN_0");

                entity.Property(e => e.Invdtalin1).HasColumnName("INVDTALIN_1");

                entity.Property(e => e.Invdtalin2).HasColumnName("INVDTALIN_2");

                entity.Property(e => e.Invdtalin3).HasColumnName("INVDTALIN_3");

                entity.Property(e => e.Invdtalin4).HasColumnName("INVDTALIN_4");

                entity.Property(e => e.Invdtalin5).HasColumnName("INVDTALIN_5");

                entity.Property(e => e.Invdtalin6).HasColumnName("INVDTALIN_6");

                entity.Property(e => e.Invdtalin7).HasColumnName("INVDTALIN_7");

                entity.Property(e => e.Invdtalin8).HasColumnName("INVDTALIN_8");

                entity.Property(e => e.Invdtatyp0).HasColumnName("INVDTATYP_0");

                entity.Property(e => e.Invdtatyp1).HasColumnName("INVDTATYP_1");

                entity.Property(e => e.Invdtatyp10).HasColumnName("INVDTATYP_10");

                entity.Property(e => e.Invdtatyp11).HasColumnName("INVDTATYP_11");

                entity.Property(e => e.Invdtatyp12).HasColumnName("INVDTATYP_12");

                entity.Property(e => e.Invdtatyp13).HasColumnName("INVDTATYP_13");

                entity.Property(e => e.Invdtatyp14).HasColumnName("INVDTATYP_14");

                entity.Property(e => e.Invdtatyp15).HasColumnName("INVDTATYP_15");

                entity.Property(e => e.Invdtatyp16).HasColumnName("INVDTATYP_16");

                entity.Property(e => e.Invdtatyp17).HasColumnName("INVDTATYP_17");

                entity.Property(e => e.Invdtatyp18).HasColumnName("INVDTATYP_18");

                entity.Property(e => e.Invdtatyp19).HasColumnName("INVDTATYP_19");

                entity.Property(e => e.Invdtatyp2).HasColumnName("INVDTATYP_2");

                entity.Property(e => e.Invdtatyp20).HasColumnName("INVDTATYP_20");

                entity.Property(e => e.Invdtatyp21).HasColumnName("INVDTATYP_21");

                entity.Property(e => e.Invdtatyp22).HasColumnName("INVDTATYP_22");

                entity.Property(e => e.Invdtatyp23).HasColumnName("INVDTATYP_23");

                entity.Property(e => e.Invdtatyp24).HasColumnName("INVDTATYP_24");

                entity.Property(e => e.Invdtatyp25).HasColumnName("INVDTATYP_25");

                entity.Property(e => e.Invdtatyp26).HasColumnName("INVDTATYP_26");

                entity.Property(e => e.Invdtatyp27).HasColumnName("INVDTATYP_27");

                entity.Property(e => e.Invdtatyp28).HasColumnName("INVDTATYP_28");

                entity.Property(e => e.Invdtatyp29).HasColumnName("INVDTATYP_29");

                entity.Property(e => e.Invdtatyp3).HasColumnName("INVDTATYP_3");

                entity.Property(e => e.Invdtatyp4).HasColumnName("INVDTATYP_4");

                entity.Property(e => e.Invdtatyp5).HasColumnName("INVDTATYP_5");

                entity.Property(e => e.Invdtatyp6).HasColumnName("INVDTATYP_6");

                entity.Property(e => e.Invdtatyp7).HasColumnName("INVDTATYP_7");

                entity.Property(e => e.Invdtatyp8).HasColumnName("INVDTATYP_8");

                entity.Property(e => e.Invdtatyp9).HasColumnName("INVDTATYP_9");

                entity.Property(e => e.Invlinnbr0).HasColumnName("INVLINNBR_0");

                entity.Property(e => e.Invsta0).HasColumnName("INVSTA_0");

                entity.Property(e => e.Lan0)
                    .IsRequired()
                    .HasColumnName("LAN_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Lasdlvdat0)
                    .HasColumnName("LASDLVDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lasdlvnum0)
                    .IsRequired()
                    .HasColumnName("LASDLVNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Lasinvdat0)
                    .HasColumnName("LASINVDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lasinvnum0)
                    .IsRequired()
                    .HasColumnName("LASINVNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Linnbr0).HasColumnName("LINNBR_0");

                entity.Property(e => e.Lndrtndat0)
                    .HasColumnName("LNDRTNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Mdl0)
                    .IsRequired()
                    .HasColumnName("MDL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ocnflg0).HasColumnName("OCNFLG_0");

                entity.Property(e => e.Ocnprn0).HasColumnName("OCNPRN_0");

                entity.Property(e => e.Odl0).HasColumnName("ODL_0");

                entity.Property(e => e.Opgnum0)
                    .IsRequired()
                    .HasColumnName("OPGNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Opgtyp0)
                    .IsRequired()
                    .HasColumnName("OPGTYP_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Ordati0)
                    .HasColumnName("ORDATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordatil0)
                    .HasColumnName("ORDATIL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordcle0).HasColumnName("ORDCLE_0");

                entity.Property(e => e.Orddat0)
                    .HasColumnName("ORDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ordinvati0)
                    .HasColumnName("ORDINVATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordinvatil0)
                    .HasColumnName("ORDINVATIL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordinvnot0)
                    .HasColumnName("ORDINVNOT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordinvnotl0)
                    .HasColumnName("ORDINVNOTL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordnot0)
                    .HasColumnName("ORDNOT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordnotl0)
                    .HasColumnName("ORDNOTL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ordsta0).HasColumnName("ORDSTA_0");

                entity.Property(e => e.Orifcy0)
                    .IsRequired()
                    .HasColumnName("ORIFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pfmtot0)
                    .HasColumnName("PFMTOT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Pjt0)
                    .IsRequired()
                    .HasColumnName("PJT_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Plistc0)
                    .IsRequired()
                    .HasColumnName("PLISTC_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Prfnum0)
                    .IsRequired()
                    .HasColumnName("PRFNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Prityp0).HasColumnName("PRITYP_0");

                entity.Property(e => e.Pte0)
                    .IsRequired()
                    .HasColumnName("PTE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Rep0)
                    .IsRequired()
                    .HasColumnName("REP_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Rep1)
                    .IsRequired()
                    .HasColumnName("REP_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Revnum0).HasColumnName("REVNUM_0");

                entity.Property(e => e.Salfcy0)
                    .IsRequired()
                    .HasColumnName("SALFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sdhtyp0)
                    .IsRequired()
                    .HasColumnName("SDHTYP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sfisstcod0)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod1)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod10)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_10")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod11)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_11")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod12)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_12")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod13)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_13")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod14)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_14")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod15)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_15")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod16)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_16")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod17)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_17")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod18)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_18")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod19)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_19")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod2)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod20)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_20")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod21)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_21")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod22)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_22")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod23)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_23")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod24)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_24")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod25)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_25")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod26)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_26")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod27)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_27")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod28)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_28")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod29)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_29")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod3)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod4)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod5)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_5")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod6)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_6")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod7)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_7")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod8)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_8")
                    .HasMaxLength(20);

                entity.Property(e => e.Sfisstcod9)
                    .IsRequired()
                    .HasColumnName("SFISSTCOD_9")
                    .HasMaxLength(20);

                entity.Property(e => e.Shiadecod0)
                    .IsRequired()
                    .HasColumnName("SHIADECOD_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Shidat0)
                    .HasColumnName("SHIDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Sinum0)
                    .IsRequired()
                    .HasColumnName("SINUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Sohcat0).HasColumnName("SOHCAT_0");

                entity.Property(e => e.Sohnum0)
                    .IsRequired()
                    .HasColumnName("SOHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Sohtex10)
                    .IsRequired()
                    .HasColumnName("SOHTEX1_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Sohtex20)
                    .IsRequired()
                    .HasColumnName("SOHTEX2_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Sohtyp0)
                    .IsRequired()
                    .HasColumnName("SOHTYP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sqhnum0)
                    .IsRequired()
                    .HasColumnName("SQHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Srenum0)
                    .IsRequired()
                    .HasColumnName("SRENUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Sstentcod0)
                    .IsRequired()
                    .HasColumnName("SSTENTCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Stofcy0)
                    .IsRequired()
                    .HasColumnName("STOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Tsccod0)
                    .IsRequired()
                    .HasColumnName("TSCCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsccod1)
                    .IsRequired()
                    .HasColumnName("TSCCOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsccod2)
                    .IsRequired()
                    .HasColumnName("TSCCOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsccod3)
                    .IsRequired()
                    .HasColumnName("TSCCOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsccod4)
                    .IsRequired()
                    .HasColumnName("TSCCOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Unl0).HasColumnName("UNL_0");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacbpr0)
                    .IsRequired()
                    .HasColumnName("VACBPR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vcrinvcnddat0)
                    .HasColumnName("VCRINVCNDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vlydatcon0)
                    .HasColumnName("VLYDATCON_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vtt0)
                    .IsRequired()
                    .HasColumnName("VTT_0")
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<Stock>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("STOCK", "VIPCO");

                entity.HasIndex(e => new { e.Itmref0, e.Sernum0 })
                    .HasName("STOCK_STO5");

                entity.HasIndex(e => new { e.Stofcy0, e.Loc0 })
                    .HasName("STOCK_STO4");

                entity.HasIndex(e => new { e.Stofcy0, e.Stocou0 })
                    .HasName("STOCK_STO0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Stofcy0, e.Palnum0, e.Itmref0 })
                    .HasName("STOCK_STO1");

                entity.HasIndex(e => new { e.Itmref0, e.Stofcy0, e.Lot0, e.Slo0, e.Loc0 })
                    .HasName("STOCK_STO3");

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bpslot0)
                    .IsRequired()
                    .HasColumnName("BPSLOT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ctrnum0)
                    .IsRequired()
                    .HasColumnName("CTRNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cumallqta0)
                    .HasColumnName("CUMALLQTA_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cumallqty0)
                    .HasColumnName("CUMALLQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cumwipqta0)
                    .HasColumnName("CUMWIPQTA_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cumwipqty0)
                    .HasColumnName("CUMWIPQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Cunlisnum0)
                    .IsRequired()
                    .HasColumnName("CUNLISNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cunlokflg0).HasColumnName("CUNLOKFLG_0");

                entity.Property(e => e.Eccvalmaj0)
                    .IsRequired()
                    .HasColumnName("ECCVALMAJ_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Edtflg0).HasColumnName("EDTFLG_0");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Lascundat0)
                    .HasColumnName("LASCUNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lasissdat0)
                    .HasColumnName("LASISSDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lasrcpdat0)
                    .HasColumnName("LASRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Loc0)
                    .IsRequired()
                    .HasColumnName("LOC_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Loccat0).HasColumnName("LOCCAT_0");

                entity.Property(e => e.Loctyp0)
                    .IsRequired()
                    .HasColumnName("LOCTYP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Lot0)
                    .IsRequired()
                    .HasColumnName("LOT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Owner0)
                    .IsRequired()
                    .HasColumnName("OWNER_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Palnum0)
                    .IsRequired()
                    .HasColumnName("PALNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Pcu0)
                    .IsRequired()
                    .HasColumnName("PCU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcuori0)
                    .IsRequired()
                    .HasColumnName("PCUORI_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcustucoe0)
                    .HasColumnName("PCUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pjt0)
                    .IsRequired()
                    .HasColumnName("PJT_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Qlyctldem0)
                    .IsRequired()
                    .HasColumnName("QLYCTLDEM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Qtypcu0)
                    .HasColumnName("QTYPCU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtypcuori0)
                    .HasColumnName("QTYPCUORI_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystu0)
                    .HasColumnName("QTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystuact0)
                    .HasColumnName("QTYSTUACT_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystuori0)
                    .HasColumnName("QTYSTUORI_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rcpdat0)
                    .HasColumnName("RCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Sernum0)
                    .IsRequired()
                    .HasColumnName("SERNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Slo0)
                    .IsRequired()
                    .HasColumnName("SLO_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sta0)
                    .IsRequired()
                    .HasColumnName("STA_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Stocou0)
                    .HasColumnName("STOCOU_0")
                    .HasColumnType("numeric(11, 1)");

                entity.Property(e => e.Stofcy0)
                    .IsRequired()
                    .HasColumnName("STOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Stofld10)
                    .IsRequired()
                    .HasColumnName("STOFLD1_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Stofld20)
                    .IsRequired()
                    .HasColumnName("STOFLD2_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Wrh0)
                    .IsRequired()
                    .HasColumnName("WRH_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Stojou>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("STOJOU", "VIPCO");

                entity.HasIndex(e => new { e.Stofcy0, e.Vcrtyp0, e.Vcrnum0, e.Vcrlin0 })
                    .HasName("STOJOU_STJ1");

                entity.HasIndex(e => new { e.Updcod0, e.Credat0, e.Cretim0, e.Itmref0 })
                    .HasName("STOJOU_STJ3");

                entity.HasIndex(e => new { e.Itmref0, e.Iptdat0, e.Cremvtdat0, e.Cremvttim0, e.Cremvtseq0 })
                    .HasName("STOJOU_STJ4");

                entity.HasIndex(e => new { e.Updcod0, e.Itmref0, e.Iptdat0, e.Mvtseq0, e.Mvtind0 })
                    .HasName("STOJOU_STJ2");

                entity.HasIndex(e => new { e.Stofcy0, e.Updcod0, e.Itmref0, e.Iptdat0, e.Mvtseq0, e.Mvtind0 })
                    .HasName("STOJOU_STJ0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Accdat0)
                    .HasColumnName("ACCDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Act0)
                    .HasColumnName("ACT_0")
                    .HasColumnType("numeric(14, 5)");

                entity.Property(e => e.Actqty0)
                    .HasColumnName("ACTQTY_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Aggifaflg0).HasColumnName("AGGIFAFLG_0");

                entity.Property(e => e.Amtdev0)
                    .HasColumnName("AMTDEV_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtdev20)
                    .HasColumnName("AMTDEV2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtord0)
                    .HasColumnName("AMTORD_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtval0)
                    .HasColumnName("AMTVAL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amtval20)
                    .HasColumnName("AMTVAL2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Betcpy0).HasColumnName("BETCPY_0");

                entity.Property(e => e.Bprnum0)
                    .IsRequired()
                    .HasColumnName("BPRNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpslot0)
                    .IsRequired()
                    .HasColumnName("BPSLOT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cremvtdat0)
                    .HasColumnName("CREMVTDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cremvtseq0).HasColumnName("CREMVTSEQ_0");

                entity.Property(e => e.Cremvttim0)
                    .IsRequired()
                    .HasColumnName("CREMVTTIM_0")
                    .HasMaxLength(8);

                entity.Property(e => e.Cretim0)
                    .IsRequired()
                    .HasColumnName("CRETIM_0")
                    .HasMaxLength(6);

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cstcou0)
                    .HasColumnName("CSTCOU_0")
                    .HasColumnType("numeric(11, 1)");

                entity.Property(e => e.Cstdat0)
                    .HasColumnName("CSTDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Csttim0)
                    .IsRequired()
                    .HasColumnName("CSTTIM_0")
                    .HasMaxLength(8);

                entity.Property(e => e.Ctrnum0)
                    .IsRequired()
                    .HasColumnName("CTRNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Dludat0)
                    .HasColumnName("DLUDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Eccvalmaj0)
                    .IsRequired()
                    .HasColumnName("ECCVALMAJ_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Eccvalmin0)
                    .IsRequired()
                    .HasColumnName("ECCVALMIN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Entcod0)
                    .IsRequired()
                    .HasColumnName("ENTCOD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Finrspfcy0)
                    .IsRequired()
                    .HasColumnName("FINRSPFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Gte0)
                    .IsRequired()
                    .HasColumnName("GTE_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Iptdat0)
                    .HasColumnName("IPTDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Lbefmt0)
                    .IsRequired()
                    .HasColumnName("LBEFMT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Lbenbr0).HasColumnName("LBENBR_0");

                entity.Property(e => e.Loc0)
                    .IsRequired()
                    .HasColumnName("LOC_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Lot0)
                    .IsRequired()
                    .HasColumnName("LOT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Mvtdes0)
                    .IsRequired()
                    .HasColumnName("MVTDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Mvtind0).HasColumnName("MVTIND_0");

                entity.Property(e => e.Mvtseq0).HasColumnName("MVTSEQ_0");

                entity.Property(e => e.Newltidat0)
                    .HasColumnName("NEWLTIDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Numvcr0)
                    .IsRequired()
                    .HasColumnName("NUMVCR_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Owner0)
                    .IsRequired()
                    .HasColumnName("OWNER_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Palnum0)
                    .IsRequired()
                    .HasColumnName("PALNUM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Pcu0)
                    .IsRequired()
                    .HasColumnName("PCU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcuori0)
                    .IsRequired()
                    .HasColumnName("PCUORI_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pcustucoe0)
                    .HasColumnName("PCUSTUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pcustuori0)
                    .HasColumnName("PCUSTUORI_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Pjt0)
                    .IsRequired()
                    .HasColumnName("PJT_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Pot0)
                    .HasColumnName("POT_0")
                    .HasColumnType("numeric(14, 5)");

                entity.Property(e => e.Prinat0).HasColumnName("PRINAT_0");

                entity.Property(e => e.Prinat20).HasColumnName("PRINAT2_0");

                entity.Property(e => e.Priord0)
                    .HasColumnName("PRIORD_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Priregflg0).HasColumnName("PRIREGFLG_0");

                entity.Property(e => e.Prival0)
                    .HasColumnName("PRIVAL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Prival20)
                    .HasColumnName("PRIVAL2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Prnflg0).HasColumnName("PRNFLG_0");

                entity.Property(e => e.Pronum0).HasColumnName("PRONUM_0");

                entity.Property(e => e.Qlyctldem0)
                    .IsRequired()
                    .HasColumnName("QLYCTLDEM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Qtypcu0)
                    .HasColumnName("QTYPCU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystu0)
                    .HasColumnName("QTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Regflg0).HasColumnName("REGFLG_0");

                entity.Property(e => e.Sernum0)
                    .IsRequired()
                    .HasColumnName("SERNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Shldat0)
                    .HasColumnName("SHLDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Slo0)
                    .IsRequired()
                    .HasColumnName("SLO_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sta0)
                    .IsRequired()
                    .HasColumnName("STA_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Stofcy0)
                    .IsRequired()
                    .HasColumnName("STOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Stofld10)
                    .IsRequired()
                    .HasColumnName("STOFLD1_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Stofld20)
                    .IsRequired()
                    .HasColumnName("STOFLD2_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Trsfam0)
                    .IsRequired()
                    .HasColumnName("TRSFAM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Trstyp0).HasColumnName("TRSTYP_0");

                entity.Property(e => e.Updcod0).HasColumnName("UPDCOD_0");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Usrfld10)
                    .IsRequired()
                    .HasColumnName("USRFLD1_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Usrfld20)
                    .IsRequired()
                    .HasColumnName("USRFLD2_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Usrfld30)
                    .HasColumnName("USRFLD3_0")
                    .HasColumnType("numeric(11, 1)");

                entity.Property(e => e.Usrfld40)
                    .HasColumnName("USRFLD4_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Varord0)
                    .HasColumnName("VARORD_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Varval0)
                    .HasColumnName("VARVAL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Varval20)
                    .HasColumnName("VARVAL2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Vcrlin0).HasColumnName("VCRLIN_0");

                entity.Property(e => e.Vcrlinori0).HasColumnName("VCRLINORI_0");

                entity.Property(e => e.Vcrlinreg0).HasColumnName("VCRLINREG_0");

                entity.Property(e => e.Vcrnum0)
                    .IsRequired()
                    .HasColumnName("VCRNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrnumori0)
                    .IsRequired()
                    .HasColumnName("VCRNUMORI_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrnumreg0)
                    .IsRequired()
                    .HasColumnName("VCRNUMREG_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrseqori0).HasColumnName("VCRSEQORI_0");

                entity.Property(e => e.Vcrtyp0).HasColumnName("VCRTYP_0");

                entity.Property(e => e.Vcrtypori0).HasColumnName("VCRTYPORI_0");

                entity.Property(e => e.Vcrtypreg0).HasColumnName("VCRTYPREG_0");

                entity.Property(e => e.Wrh0)
                    .IsRequired()
                    .HasColumnName("WRH_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Zsm010)
                    .HasColumnName("ZSM01_0")
                    .HasColumnType("numeric(14, 3)");

                entity.Property(e => e.Zsm020)
                    .HasColumnName("ZSM02_0")
                    .HasColumnType("numeric(14, 3)");
            });

            modelBuilder.Entity<Stolot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("STOLOT", "VIPCO");

                entity.HasIndex(e => new { e.Itmref0, e.Lot0, e.Slo0 })
                    .HasName("STOLOT_STL0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itmref0, e.Lotcredat0, e.Lot0, e.Slo0 })
                    .HasName("STOLOT_STL1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Shldat0, e.Itmref0, e.Lot0, e.Slo0 })
                    .HasName("STOLOT_STL3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itmref0, e.Shldat0, e.Lotcredat0, e.Lot0, e.Slo0 })
                    .HasName("STOLOT_STL2")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Act0)
                    .HasColumnName("ACT_0")
                    .HasColumnType("numeric(14, 5)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bpslot0)
                    .IsRequired()
                    .HasColumnName("BPSLOT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Dlu0)
                    .HasColumnName("DLU_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Dludat0)
                    .HasColumnName("DLUDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Eccvalmaj0)
                    .IsRequired()
                    .HasColumnName("ECCVALMAJ_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Eccvalmin0)
                    .IsRequired()
                    .HasColumnName("ECCVALMIN_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Lot0)
                    .IsRequired()
                    .HasColumnName("LOT_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Lotcredat0)
                    .HasColumnName("LOTCREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ltidat0)
                    .HasColumnName("LTIDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Newltidat0)
                    .HasColumnName("NEWLTIDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Pot0)
                    .HasColumnName("POT_0")
                    .HasColumnType("numeric(14, 5)");

                entity.Property(e => e.Refper0)
                    .HasColumnName("REFPER_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Shl0).HasColumnName("SHL_0");

                entity.Property(e => e.Shldat0)
                    .HasColumnName("SHLDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Shllti0).HasColumnName("SHLLTI_0");

                entity.Property(e => e.Shlltiuom0).HasColumnName("SHLLTIUOM_0");

                entity.Property(e => e.Shluom0).HasColumnName("SHLUOM_0");

                entity.Property(e => e.Slo0)
                    .IsRequired()
                    .HasColumnName("SLO_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Usrfld10)
                    .IsRequired()
                    .HasColumnName("USRFLD1_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Usrfld20)
                    .IsRequired()
                    .HasColumnName("USRFLD2_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Usrfld30)
                    .HasColumnName("USRFLD3_0")
                    .HasColumnType("numeric(11, 1)");

                entity.Property(e => e.Usrfld40)
                    .HasColumnName("USRFLD4_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Vcrlin0).HasColumnName("VCRLIN_0");

                entity.Property(e => e.Vcrnum0)
                    .IsRequired()
                    .HasColumnName("VCRNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrtyp0).HasColumnName("VCRTYP_0");
            });

            modelBuilder.Entity<Tabcur>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("TABCUR", "VIPCO");

                entity.HasIndex(e => e.Cur0)
                    .HasName("TABCUR_TCU0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acccod0)
                    .IsRequired()
                    .HasColumnName("ACCCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Curdes0)
                    .IsRequired()
                    .HasColumnName("CURDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Curenddat0)
                    .HasColumnName("CURENDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Curfmt10)
                    .IsRequired()
                    .HasColumnName("CURFMT1_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Curfmt20)
                    .IsRequired()
                    .HasColumnName("CURFMT2_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Curfmt30)
                    .IsRequired()
                    .HasColumnName("CURFMT3_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Currnd0)
                    .HasColumnName("CURRND_0")
                    .HasColumnType("numeric(16, 6)");

                entity.Property(e => e.Cursho0)
                    .IsRequired()
                    .HasColumnName("CURSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Cursym0)
                    .IsRequired()
                    .HasColumnName("CURSYM_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Decnbr0).HasColumnName("DECNBR_0");

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Eurdat0)
                    .HasColumnName("EURDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Eurflg0).HasColumnName("EURFLG_0");

                entity.Property(e => e.Eurrat0)
                    .HasColumnName("EURRAT_0")
                    .HasColumnType("numeric(21, 10)");

                entity.Property(e => e.Isocod0)
                    .IsRequired()
                    .HasColumnName("ISOCOD_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Tabmodeliv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("TABMODELIV", "VIPCO");

                entity.HasIndex(e => e.Mdl0)
                    .HasName("TABMODELIV_TMD0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eecict0)
                    .IsRequired()
                    .HasColumnName("EECICT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eecloc0).HasColumnName("EECLOC_0");

                entity.Property(e => e.Eectrn0).HasColumnName("EECTRN_0");

                entity.Property(e => e.Gfy0)
                    .IsRequired()
                    .HasColumnName("GFY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Landessho0)
                    .IsRequired()
                    .HasColumnName("LANDESSHO_0")
                    .HasMaxLength(60);

                entity.Property(e => e.Mdl0)
                    .IsRequired()
                    .HasColumnName("MDL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Port0)
                    .IsRequired()
                    .HasColumnName("PORT_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Region0)
                    .IsRequired()
                    .HasColumnName("REGION_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Tabpayterm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("TABPAYTERM", "VIPCO");

                entity.HasIndex(e => new { e.Pte0, e.Leg0 })
                    .HasName("TABPAYTERM_TPT2");

                entity.HasIndex(e => new { e.Pte0, e.Ptelin0 })
                    .HasName("TABPAYTERM_TPT1");

                entity.HasIndex(e => new { e.Pte0, e.Leg0, e.Ptelin0 })
                    .HasName("TABPAYTERM_TPT0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Daymon0).HasColumnName("DAYMON_0");

                entity.Property(e => e.Daymon1).HasColumnName("DAYMON_1");

                entity.Property(e => e.Daymon2).HasColumnName("DAYMON_2");

                entity.Property(e => e.Daymon3).HasColumnName("DAYMON_3");

                entity.Property(e => e.Daymon4).HasColumnName("DAYMON_4");

                entity.Property(e => e.Daymon5).HasColumnName("DAYMON_5");

                entity.Property(e => e.Dudminamt0)
                    .HasColumnName("DUDMINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dudprc0)
                    .HasColumnName("DUDPRC_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Endmonflg0).HasColumnName("ENDMONFLG_0");

                entity.Property(e => e.Fbddayflg0).HasColumnName("FBDDAYFLG_0");

                entity.Property(e => e.Fbddayflg1).HasColumnName("FBDDAYFLG_1");

                entity.Property(e => e.Fbddayflg2).HasColumnName("FBDDAYFLG_2");

                entity.Property(e => e.Fbddayflg3).HasColumnName("FBDDAYFLG_3");

                entity.Property(e => e.Fbddayflg4).HasColumnName("FBDDAYFLG_4");

                entity.Property(e => e.Fbddayflg5).HasColumnName("FBDDAYFLG_5");

                entity.Property(e => e.Fbddayflg6).HasColumnName("FBDDAYFLG_6");

                entity.Property(e => e.Fbdhlyflg0).HasColumnName("FBDHLYFLG_0");

                entity.Property(e => e.Gfy0)
                    .IsRequired()
                    .HasColumnName("GFY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Landessho0)
                    .IsRequired()
                    .HasColumnName("LANDESSHO_0")
                    .HasMaxLength(60);

                entity.Property(e => e.Leg0)
                    .IsRequired()
                    .HasColumnName("LEG_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Nbrday0).HasColumnName("NBRDAY_0");

                entity.Property(e => e.Nbrmon0).HasColumnName("NBRMON_0");

                entity.Property(e => e.Pam0)
                    .IsRequired()
                    .HasColumnName("PAM_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pamtyp0).HasColumnName("PAMTYP_0");

                entity.Property(e => e.Pte0)
                    .IsRequired()
                    .HasColumnName("PTE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Ptelin0).HasColumnName("PTELIN_0");

                entity.Property(e => e.Pteminamt0)
                    .HasColumnName("PTEMINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Rplpte0)
                    .IsRequired()
                    .HasColumnName("RPLPTE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Sddflg0).HasColumnName("SDDFLG_0");

                entity.Property(e => e.Soiflg0).HasColumnName("SOIFLG_0");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vatprc0)
                    .HasColumnName("VATPRC_0")
                    .HasColumnType("numeric(8, 3)");
            });

            modelBuilder.Entity<Tabunit>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("TABUNIT", "VIPCO");

                entity.HasIndex(e => e.Uom0)
                    .HasName("TABUNIT_TUN0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Uom0)
                    .IsRequired()
                    .HasColumnName("UOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Uomdec0).HasColumnName("UOMDEC_0");

                entity.Property(e => e.Uomsym0)
                    .IsRequired()
                    .HasColumnName("UOMSYM_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Uomtyp0).HasColumnName("UOMTYP_0");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Tabvat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("TABVAT", "VIPCO");

                entity.HasIndex(e => e.Vat0)
                    .HasName("TABVAT_TVT1");

                entity.HasIndex(e => new { e.Vat0, e.Leg0 })
                    .HasName("TABVAT_TVT0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Acccod0)
                    .IsRequired()
                    .HasColumnName("ACCCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Aus1agstsal0).HasColumnName("AUS1AGSTSAL_0");

                entity.Property(e => e.Aus1bgstpur0).HasColumnName("AUS1BGSTPUR_0");

                entity.Property(e => e.Ausbas0).HasColumnName("AUSBAS_0");

                entity.Property(e => e.Ausg10cappur0).HasColumnName("AUSG10CAPPUR_0");

                entity.Property(e => e.Ausg11ncappu0).HasColumnName("AUSG11NCAPPU_0");

                entity.Property(e => e.Ausg1totsa0).HasColumnName("AUSG1TOTSA_0");

                entity.Property(e => e.Ausg2expsal0).HasColumnName("AUSG2EXPSAL_0");

                entity.Property(e => e.Ausg3gstfres0).HasColumnName("AUSG3GSTFRES_0");

                entity.Property(e => e.Ausvat0)
                    .IsRequired()
                    .HasColumnName("AUSVAT_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Grp0)
                    .IsRequired()
                    .HasColumnName("GRP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Landessho0)
                    .IsRequired()
                    .HasColumnName("LANDESSHO_0")
                    .HasMaxLength(60);

                entity.Property(e => e.Leg0)
                    .IsRequired()
                    .HasColumnName("LEG_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Porexemot0)
                    .IsRequired()
                    .HasColumnName("POREXEMOT_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Sat0)
                    .IsRequired()
                    .HasColumnName("SAT_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Spaagrvat0).HasColumnName("SPAAGRVAT_0");

                entity.Property(e => e.Spaexevat0).HasColumnName("SPAEXEVAT_0");

                entity.Property(e => e.Spaimpvat0).HasColumnName("SPAIMPVAT_0");

                entity.Property(e => e.Spainr0).HasColumnName("SPAINR_0");

                entity.Property(e => e.Spaivt3030).HasColumnName("SPAIVT303_0");

                entity.Property(e => e.Spanrs0).HasColumnName("SPANRS_0");

                entity.Property(e => e.Spapra3030).HasColumnName("SPAPRA303_0");

                entity.Property(e => e.Spapurtag0).HasColumnName("SPAPURTAG_0");

                entity.Property(e => e.Sparnt0).HasColumnName("SPARNT_0");

                entity.Property(e => e.Spaspetax0).HasColumnName("SPASPETAX_0");

                entity.Property(e => e.Spausepdt0).HasColumnName("SPAUSEPDT_0");

                entity.Property(e => e.Spavat0)
                    .IsRequired()
                    .HasColumnName("SPAVAT_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat0)
                    .IsRequired()
                    .HasColumnName("VAT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vatbas0).HasColumnName("VATBAS_0");

                entity.Property(e => e.Vatcha0).HasColumnName("VATCHA_0");

                entity.Property(e => e.Vatdes0)
                    .IsRequired()
                    .HasColumnName("VATDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Vatfor0)
                    .IsRequired()
                    .HasColumnName("VATFOR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Vatpay0).HasColumnName("VATPAY_0");

                entity.Property(e => e.Vatrat0)
                    .HasColumnName("VATRAT_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Vatsho0)
                    .IsRequired()
                    .HasColumnName("VATSHO_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Vattyp0).HasColumnName("VATTYP_0");

                entity.Property(e => e.Vatvac0)
                    .IsRequired()
                    .HasColumnName("VATVAC_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Texclob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("TEXCLOB", "VIPCO");

                entity.HasIndex(e => e.Code0)
                    .HasName("TEXCLOB_TXC0")
                    .IsUnique();

                entity.HasIndex(e => new { e.Ident10, e.Ident20, e.Ident30 })
                    .HasName("TEXCLOB_TXC1");

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Code0)
                    .IsRequired()
                    .HasColumnName("CODE_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Cretim0).HasColumnName("CRETIM_0");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ident10)
                    .IsRequired()
                    .HasColumnName("IDENT1_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Ident20)
                    .IsRequired()
                    .HasColumnName("IDENT2_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Ident30)
                    .IsRequired()
                    .HasColumnName("IDENT3_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Texte0)
                    .IsRequired()
                    .HasColumnName("TEXTE_0");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updtim0).HasColumnName("UPDTIM_0");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Uporder>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("UPORDER", "VIPCO");

                entity.HasIndex(e => new { e.Pohnum0, e.Revnum0 })
                    .HasName("UPORDER_POH0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Appflg0).HasColumnName("APPFLG_0");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Betcpy0).HasColumnName("BETCPY_0");

                entity.Property(e => e.Betfcy0).HasColumnName("BETFCY_0");

                entity.Property(e => e.Bpaadd0)
                    .IsRequired()
                    .HasColumnName("BPAADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpaaddlig0)
                    .IsRequired()
                    .HasColumnName("BPAADDLIG_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpaaddlig1)
                    .IsRequired()
                    .HasColumnName("BPAADDLIG_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpaaddlig2)
                    .IsRequired()
                    .HasColumnName("BPAADDLIG_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpapay0)
                    .IsRequired()
                    .HasColumnName("BPAPAY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpcord0)
                    .IsRequired()
                    .HasColumnName("BPCORD_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpoadd0)
                    .IsRequired()
                    .HasColumnName("BPOADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpoaddlig0)
                    .IsRequired()
                    .HasColumnName("BPOADDLIG_0")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpoaddlig1)
                    .IsRequired()
                    .HasColumnName("BPOADDLIG_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpoaddlig2)
                    .IsRequired()
                    .HasColumnName("BPOADDLIG_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Bpocry0)
                    .IsRequired()
                    .HasColumnName("BPOCRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Bpocrynam0)
                    .IsRequired()
                    .HasColumnName("BPOCRYNAM_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bpocty0)
                    .IsRequired()
                    .HasColumnName("BPOCTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Bponam0)
                    .IsRequired()
                    .HasColumnName("BPONAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bponam1)
                    .IsRequired()
                    .HasColumnName("BPONAM_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bpoposcod0)
                    .IsRequired()
                    .HasColumnName("BPOPOSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Bposat0)
                    .IsRequired()
                    .HasColumnName("BPOSAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bprnam0)
                    .IsRequired()
                    .HasColumnName("BPRNAM_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Bprnam1)
                    .IsRequired()
                    .HasColumnName("BPRNAM_1")
                    .HasMaxLength(35);

                entity.Property(e => e.Bprpay0)
                    .IsRequired()
                    .HasColumnName("BPRPAY_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsinv0)
                    .IsRequired()
                    .HasColumnName("BPSINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bptnum0)
                    .IsRequired()
                    .HasColumnName("BPTNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Buy0)
                    .IsRequired()
                    .HasColumnName("BUY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cce0)
                    .IsRequired()
                    .HasColumnName("CCE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce1)
                    .IsRequired()
                    .HasColumnName("CCE_1")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce10)
                    .IsRequired()
                    .HasColumnName("CCE_10")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce11)
                    .IsRequired()
                    .HasColumnName("CCE_11")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce12)
                    .IsRequired()
                    .HasColumnName("CCE_12")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce13)
                    .IsRequired()
                    .HasColumnName("CCE_13")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce14)
                    .IsRequired()
                    .HasColumnName("CCE_14")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce15)
                    .IsRequired()
                    .HasColumnName("CCE_15")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce16)
                    .IsRequired()
                    .HasColumnName("CCE_16")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce17)
                    .IsRequired()
                    .HasColumnName("CCE_17")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce18)
                    .IsRequired()
                    .HasColumnName("CCE_18")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce19)
                    .IsRequired()
                    .HasColumnName("CCE_19")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce2)
                    .IsRequired()
                    .HasColumnName("CCE_2")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce3)
                    .IsRequired()
                    .HasColumnName("CCE_3")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce4)
                    .IsRequired()
                    .HasColumnName("CCE_4")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce5)
                    .IsRequired()
                    .HasColumnName("CCE_5")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce6)
                    .IsRequired()
                    .HasColumnName("CCE_6")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce7)
                    .IsRequired()
                    .HasColumnName("CCE_7")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce8)
                    .IsRequired()
                    .HasColumnName("CCE_8")
                    .HasMaxLength(15);

                entity.Property(e => e.Cce9)
                    .IsRequired()
                    .HasColumnName("CCE_9")
                    .HasMaxLength(15);

                entity.Property(e => e.Chgcoe0)
                    .HasColumnName("CHGCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Chgtyp0).HasColumnName("CHGTYP_0");

                entity.Property(e => e.Cleflg0).HasColumnName("CLEFLG_0");

                entity.Property(e => e.Clelinnbr0).HasColumnName("CLELINNBR_0");

                entity.Property(e => e.Copnbr0).HasColumnName("COPNBR_0");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cry0)
                    .IsRequired()
                    .HasColumnName("CRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Crynam0)
                    .IsRequired()
                    .HasColumnName("CRYNAM_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Cty0)
                    .IsRequired()
                    .HasColumnName("CTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Cur0)
                    .IsRequired()
                    .HasColumnName("CUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die0)
                    .IsRequired()
                    .HasColumnName("DIE_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Die1)
                    .IsRequired()
                    .HasColumnName("DIE_1")
                    .HasMaxLength(3);

                entity.Property(e => e.Die10)
                    .IsRequired()
                    .HasColumnName("DIE_10")
                    .HasMaxLength(3);

                entity.Property(e => e.Die11)
                    .IsRequired()
                    .HasColumnName("DIE_11")
                    .HasMaxLength(3);

                entity.Property(e => e.Die12)
                    .IsRequired()
                    .HasColumnName("DIE_12")
                    .HasMaxLength(3);

                entity.Property(e => e.Die13)
                    .IsRequired()
                    .HasColumnName("DIE_13")
                    .HasMaxLength(3);

                entity.Property(e => e.Die14)
                    .IsRequired()
                    .HasColumnName("DIE_14")
                    .HasMaxLength(3);

                entity.Property(e => e.Die15)
                    .IsRequired()
                    .HasColumnName("DIE_15")
                    .HasMaxLength(3);

                entity.Property(e => e.Die16)
                    .IsRequired()
                    .HasColumnName("DIE_16")
                    .HasMaxLength(3);

                entity.Property(e => e.Die17)
                    .IsRequired()
                    .HasColumnName("DIE_17")
                    .HasMaxLength(3);

                entity.Property(e => e.Die18)
                    .IsRequired()
                    .HasColumnName("DIE_18")
                    .HasMaxLength(3);

                entity.Property(e => e.Die19)
                    .IsRequired()
                    .HasColumnName("DIE_19")
                    .HasMaxLength(3);

                entity.Property(e => e.Die2)
                    .IsRequired()
                    .HasColumnName("DIE_2")
                    .HasMaxLength(3);

                entity.Property(e => e.Die3)
                    .IsRequired()
                    .HasColumnName("DIE_3")
                    .HasMaxLength(3);

                entity.Property(e => e.Die4)
                    .IsRequired()
                    .HasColumnName("DIE_4")
                    .HasMaxLength(3);

                entity.Property(e => e.Die5)
                    .IsRequired()
                    .HasColumnName("DIE_5")
                    .HasMaxLength(3);

                entity.Property(e => e.Die6)
                    .IsRequired()
                    .HasColumnName("DIE_6")
                    .HasMaxLength(3);

                entity.Property(e => e.Die7)
                    .IsRequired()
                    .HasColumnName("DIE_7")
                    .HasMaxLength(3);

                entity.Property(e => e.Die8)
                    .IsRequired()
                    .HasColumnName("DIE_8")
                    .HasMaxLength(3);

                entity.Property(e => e.Die9)
                    .IsRequired()
                    .HasColumnName("DIE_9")
                    .HasMaxLength(3);

                entity.Property(e => e.Discrgtyp0).HasColumnName("DISCRGTYP_0");

                entity.Property(e => e.Discrgtyp1).HasColumnName("DISCRGTYP_1");

                entity.Property(e => e.Discrgtyp2).HasColumnName("DISCRGTYP_2");

                entity.Property(e => e.Discrgtyp3).HasColumnName("DISCRGTYP_3");

                entity.Property(e => e.Discrgtyp4).HasColumnName("DISCRGTYP_4");

                entity.Property(e => e.Discrgtyp5).HasColumnName("DISCRGTYP_5");

                entity.Property(e => e.Discrgtyp6).HasColumnName("DISCRGTYP_6");

                entity.Property(e => e.Discrgtyp7).HasColumnName("DISCRGTYP_7");

                entity.Property(e => e.Discrgtyp8).HasColumnName("DISCRGTYP_8");

                entity.Property(e => e.Dme0).HasColumnName("DME_0");

                entity.Property(e => e.Dspvou0)
                    .IsRequired()
                    .HasColumnName("DSPVOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Dspweu0)
                    .IsRequired()
                    .HasColumnName("DSPWEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Eecict0)
                    .IsRequired()
                    .HasColumnName("EECICT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Eecloc0).HasColumnName("EECLOC_0");

                entity.Property(e => e.Eecnum0)
                    .IsRequired()
                    .HasColumnName("EECNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Enddat0)
                    .HasColumnName("ENDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Extrcpdat10)
                    .HasColumnName("EXTRCPDAT1_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fbulinnbr0).HasColumnName("FBULINNBR_0");

                entity.Property(e => e.Ffwadd0)
                    .IsRequired()
                    .HasColumnName("FFWADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ffwnum0)
                    .IsRequired()
                    .HasColumnName("FFWNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Fupflg0).HasColumnName("FUPFLG_0");

                entity.Property(e => e.Gpgcod0)
                    .IsRequired()
                    .HasColumnName("GPGCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Ictcty0)
                    .IsRequired()
                    .HasColumnName("ICTCTY_0")
                    .HasMaxLength(40);

                entity.Property(e => e.Invdtalin10).HasColumnName("INVDTALIN1_0");

                entity.Property(e => e.Invdtalin11).HasColumnName("INVDTALIN1_1");

                entity.Property(e => e.Invdtalin12).HasColumnName("INVDTALIN1_2");

                entity.Property(e => e.Invdtalin13).HasColumnName("INVDTALIN1_3");

                entity.Property(e => e.Invdtalin14).HasColumnName("INVDTALIN1_4");

                entity.Property(e => e.Invdtalin15).HasColumnName("INVDTALIN1_5");

                entity.Property(e => e.Invdtalin16).HasColumnName("INVDTALIN1_6");

                entity.Property(e => e.Invdtalin17).HasColumnName("INVDTALIN1_7");

                entity.Property(e => e.Invdtalin18).HasColumnName("INVDTALIN1_8");

                entity.Property(e => e.Invdtalin20).HasColumnName("INVDTALIN2_0");

                entity.Property(e => e.Invdtalin21).HasColumnName("INVDTALIN2_1");

                entity.Property(e => e.Invdtalin22).HasColumnName("INVDTALIN2_2");

                entity.Property(e => e.Invdtalin23).HasColumnName("INVDTALIN2_3");

                entity.Property(e => e.Invdtalin24).HasColumnName("INVDTALIN2_4");

                entity.Property(e => e.Invdtalin25).HasColumnName("INVDTALIN2_5");

                entity.Property(e => e.Invdtalin26).HasColumnName("INVDTALIN2_6");

                entity.Property(e => e.Invdtalin27).HasColumnName("INVDTALIN2_7");

                entity.Property(e => e.Invdtalin28).HasColumnName("INVDTALIN2_8");

                entity.Property(e => e.Invdtavat10)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat11)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat12)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat13)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat14)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat15)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat16)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat17)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat18)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT1_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat20)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat21)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat22)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_2")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat23)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_3")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat24)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_4")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat25)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_5")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat26)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_6")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat27)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_7")
                    .HasMaxLength(5);

                entity.Property(e => e.Invdtavat28)
                    .IsRequired()
                    .HasColumnName("INVDTAVAT2_8")
                    .HasMaxLength(5);

                entity.Property(e => e.Invfcy0)
                    .IsRequired()
                    .HasColumnName("INVFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invflg0).HasColumnName("INVFLG_0");

                entity.Property(e => e.Invlinnbr0).HasColumnName("INVLINNBR_0");

                entity.Property(e => e.Invnbr0).HasColumnName("INVNBR_0");

                entity.Property(e => e.Lan0)
                    .IsRequired()
                    .HasColumnName("LAN_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Linnbr0).HasColumnName("LINNBR_0");

                entity.Property(e => e.Mdl0)
                    .IsRequired()
                    .HasColumnName("MDL_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ocndat0)
                    .HasColumnName("OCNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ocnflg0).HasColumnName("OCNFLG_0");

                entity.Property(e => e.Ocnnum0)
                    .IsRequired()
                    .HasColumnName("OCNNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Ocnrem0)
                    .IsRequired()
                    .HasColumnName("OCNREM_0")
                    .HasMaxLength(150);

                entity.Property(e => e.Orddat0)
                    .HasColumnName("ORDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ordref0)
                    .IsRequired()
                    .HasColumnName("ORDREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Orifcy0)
                    .IsRequired()
                    .HasColumnName("ORIFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pohfcy0)
                    .IsRequired()
                    .HasColumnName("POHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohtyp0).HasColumnName("POHTYP_0");

                entity.Property(e => e.Poscod0)
                    .IsRequired()
                    .HasColumnName("POSCOD_0")
                    .HasMaxLength(10);

                entity.Property(e => e.Prnflg0).HasColumnName("PRNFLG_0");

                entity.Property(e => e.Pte0)
                    .IsRequired()
                    .HasColumnName("PTE_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Purtyp0).HasColumnName("PURTYP_0");

                entity.Property(e => e.Rcpfcy0)
                    .IsRequired()
                    .HasColumnName("RCPFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Rcpflg0).HasColumnName("RCPFLG_0");

                entity.Property(e => e.Rcplinnbr0).HasColumnName("RCPLINNBR_0");

                entity.Property(e => e.Rcpnbr0).HasColumnName("RCPNBR_0");

                entity.Property(e => e.Revcod0)
                    .IsRequired()
                    .HasColumnName("REVCOD_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Revnum0).HasColumnName("REVNUM_0");

                entity.Property(e => e.Salfcy0)
                    .IsRequired()
                    .HasColumnName("SALFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sat0)
                    .IsRequired()
                    .HasColumnName("SAT_0")
                    .HasMaxLength(35);

                entity.Property(e => e.Sohcat0).HasColumnName("SOHCAT_0");

                entity.Property(e => e.Stofcy0)
                    .IsRequired()
                    .HasColumnName("STOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Strdat0)
                    .HasColumnName("STRDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Tex10)
                    .IsRequired()
                    .HasColumnName("TEX1_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Tex20)
                    .IsRequired()
                    .HasColumnName("TEX2_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Totlinamt0)
                    .HasColumnName("TOTLINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totlinati0)
                    .HasColumnName("TOTLINATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totlinqty0)
                    .HasColumnName("TOTLINQTY_0")
                    .HasColumnType("numeric(24, 7)");

                entity.Property(e => e.Totlinvou0)
                    .HasColumnName("TOTLINVOU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Totlinweu0)
                    .HasColumnName("TOTLINWEU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Totord0)
                    .HasColumnName("TOTORD_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totordl0)
                    .HasColumnName("TOTORDL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Tottaxamt0)
                    .HasColumnName("TOTTAXAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Totvlt0)
                    .HasColumnName("TOTVLT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Tsscod0)
                    .IsRequired()
                    .HasColumnName("TSSCOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod1)
                    .IsRequired()
                    .HasColumnName("TSSCOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod2)
                    .IsRequired()
                    .HasColumnName("TSSCOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod3)
                    .IsRequired()
                    .HasColumnName("TSSCOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsscod4)
                    .IsRequired()
                    .HasColumnName("TSSCOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Ttvord0)
                    .HasColumnName("TTVORD_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Ttvordl0)
                    .HasColumnName("TTVORDL_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vacbpr0)
                    .IsRequired()
                    .HasColumnName("VACBPR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vactyp0).HasColumnName("VACTYP_0");
            });

            modelBuilder.Entity<Uporderp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("UPORDERP", "VIPCO");

                entity.HasIndex(e => new { e.Pohnum0, e.Linrevnum0, e.Poplin0, e.Popseq0 })
                    .HasName("UPORDERP_POP0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Discrgren10).HasColumnName("DISCRGREN1_0");

                entity.Property(e => e.Discrgren20).HasColumnName("DISCRGREN2_0");

                entity.Property(e => e.Discrgren30).HasColumnName("DISCRGREN3_0");

                entity.Property(e => e.Discrgren40).HasColumnName("DISCRGREN4_0");

                entity.Property(e => e.Discrgren50).HasColumnName("DISCRGREN5_0");

                entity.Property(e => e.Discrgren60).HasColumnName("DISCRGREN6_0");

                entity.Property(e => e.Discrgren70).HasColumnName("DISCRGREN7_0");

                entity.Property(e => e.Discrgren80).HasColumnName("DISCRGREN8_0");

                entity.Property(e => e.Discrgren90).HasColumnName("DISCRGREN9_0");

                entity.Property(e => e.Discrgval10)
                    .HasColumnName("DISCRGVAL1_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval20)
                    .HasColumnName("DISCRGVAL2_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval30)
                    .HasColumnName("DISCRGVAL3_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Discrgval40)
                    .HasColumnName("DISCRGVAL4_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval50)
                    .HasColumnName("DISCRGVAL5_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval60)
                    .HasColumnName("DISCRGVAL6_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval70)
                    .HasColumnName("DISCRGVAL7_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval80)
                    .HasColumnName("DISCRGVAL8_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Discrgval90)
                    .HasColumnName("DISCRGVAL9_0")
                    .HasColumnType("numeric(28, 8)");

                entity.Property(e => e.Eecincrat0)
                    .HasColumnName("EECINCRAT_0")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Fcyadd0)
                    .IsRequired()
                    .HasColumnName("FCYADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Gropri0)
                    .HasColumnName("GROPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Itmdes0)
                    .IsRequired()
                    .HasColumnName("ITMDES_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmdes10)
                    .IsRequired()
                    .HasColumnName("ITMDES1_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Linbuy0)
                    .IsRequired()
                    .HasColumnName("LINBUY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Linrevnum0).HasColumnName("LINREVNUM_0");

                entity.Property(e => e.Netpri0)
                    .HasColumnName("NETPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Oricry0)
                    .IsRequired()
                    .HasColumnName("ORICRY_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Pjt0)
                    .IsRequired()
                    .HasColumnName("PJT_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohtyp0).HasColumnName("POHTYP_0");

                entity.Property(e => e.Popcreflg0).HasColumnName("POPCREFLG_0");

                entity.Property(e => e.Popdat0)
                    .HasColumnName("POPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Poplin0).HasColumnName("POPLIN_0");

                entity.Property(e => e.Popseq0).HasColumnName("POPSEQ_0");

                entity.Property(e => e.Prhfcy0)
                    .IsRequired()
                    .HasColumnName("PRHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Priren0).HasColumnName("PRIREN_0");

                entity.Property(e => e.Quaflg0).HasColumnName("QUAFLG_0");

                entity.Property(e => e.Revcod0)
                    .IsRequired()
                    .HasColumnName("REVCOD_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Strdat0)
                    .HasColumnName("STRDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Taxiss0)
                    .IsRequired()
                    .HasColumnName("TAXISS_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth10)
                    .IsRequired()
                    .HasColumnName("TAXOTH1_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxoth20)
                    .IsRequired()
                    .HasColumnName("TAXOTH2_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxrcp0)
                    .IsRequired()
                    .HasColumnName("TAXRCP_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Tsicod0)
                    .IsRequired()
                    .HasColumnName("TSICOD_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod1)
                    .IsRequired()
                    .HasColumnName("TSICOD_1")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod2)
                    .IsRequired()
                    .HasColumnName("TSICOD_2")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod3)
                    .IsRequired()
                    .HasColumnName("TSICOD_3")
                    .HasMaxLength(20);

                entity.Property(e => e.Tsicod4)
                    .IsRequired()
                    .HasColumnName("TSICOD_4")
                    .HasMaxLength(20);

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat0)
                    .IsRequired()
                    .HasColumnName("VAT_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat1)
                    .IsRequired()
                    .HasColumnName("VAT_1")
                    .HasMaxLength(5);

                entity.Property(e => e.Vat2)
                    .IsRequired()
                    .HasColumnName("VAT_2")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Uporderq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .ForSqlServerIsClustered(false);

                entity.ToTable("UPORDERQ", "VIPCO");

                entity.HasIndex(e => new { e.Pohnum0, e.Linrevnum0, e.Poplin0, e.Poqseq0 })
                    .HasName("UPORDERQ_POQ0")
                    .IsUnique();

                entity.Property(e => e.Rowid)
                    .HasColumnName("ROWID")
                    .HasColumnType("numeric(38, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Amttaxiss0)
                    .HasColumnName("AMTTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin10)
                    .HasColumnName("AMTTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin20)
                    .HasColumnName("AMTTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxlin30)
                    .HasColumnName("AMTTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth10)
                    .HasColumnName("AMTTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxoth20)
                    .HasColumnName("AMTTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Amttaxrcp0)
                    .HasColumnName("AMTTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Auuid0)
                    .IsRequired()
                    .HasColumnName("AUUID_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Bastaxlin10)
                    .HasColumnName("BASTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Bpainv0)
                    .IsRequired()
                    .HasColumnName("BPAINV_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Bpsinv0)
                    .IsRequired()
                    .HasColumnName("BPSINV_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Bpsnum0)
                    .IsRequired()
                    .HasColumnName("BPSNUM_0")
                    .HasMaxLength(15);

                entity.Property(e => e.Cad0).HasColumnName("CAD_0");

                entity.Property(e => e.Clcamt10)
                    .HasColumnName("CLCAMT1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt20)
                    .HasColumnName("CLCAMT2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt30)
                    .HasColumnName("CLCAMT3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt40)
                    .HasColumnName("CLCAMT4_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt50)
                    .HasColumnName("CLCAMT5_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt60)
                    .HasColumnName("CLCAMT6_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Clcamt70)
                    .HasColumnName("CLCAMT7_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cmmflg0).HasColumnName("CMMFLG_0");

                entity.Property(e => e.Cmmnum0)
                    .IsRequired()
                    .HasColumnName("CMMNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Cmmtax0).HasColumnName("CMMTAX_0");

                entity.Property(e => e.Cpr0)
                    .HasColumnName("CPR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Cpramt0)
                    .HasColumnName("CPRAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Cprcoe0)
                    .HasColumnName("CPRCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Cprcur0)
                    .IsRequired()
                    .HasColumnName("CPRCUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Cprpri0)
                    .HasColumnName("CPRPRI_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Cpy0)
                    .IsRequired()
                    .HasColumnName("CPY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Credat0)
                    .HasColumnName("CREDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Credattim0)
                    .HasColumnName("CREDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Creusr0)
                    .IsRequired()
                    .HasColumnName("CREUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Cstpur0)
                    .HasColumnName("CSTPUR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Dedtaxiss0)
                    .HasColumnName("DEDTAXISS_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin10)
                    .HasColumnName("DEDTAXLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin20)
                    .HasColumnName("DEDTAXLIN2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxlin30)
                    .HasColumnName("DEDTAXLIN3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth10)
                    .HasColumnName("DEDTAXOTH1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxoth20)
                    .HasColumnName("DEDTAXOTH2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Dedtaxrcp0)
                    .HasColumnName("DEDTAXRCP_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Demenddat0)
                    .HasColumnName("DEMENDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Demendhou0).HasColumnName("DEMENDHOU_0");

                entity.Property(e => e.Demrcpdat0)
                    .HasColumnName("DEMRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Demrcphou0).HasColumnName("DEMRCPHOU_0");

                entity.Property(e => e.Disbaslin10)
                    .HasColumnName("DISBASLIN1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt10)
                    .HasColumnName("DISCRGAMT1_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt20)
                    .HasColumnName("DISCRGAMT2_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt30)
                    .HasColumnName("DISCRGAMT3_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt40)
                    .HasColumnName("DISCRGAMT4_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt50)
                    .HasColumnName("DISCRGAMT5_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt60)
                    .HasColumnName("DISCRGAMT6_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt70)
                    .HasColumnName("DISCRGAMT7_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt80)
                    .HasColumnName("DISCRGAMT8_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Discrgamt90)
                    .HasColumnName("DISCRGAMT9_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Expnum0).HasColumnName("EXPNUM_0");

                entity.Property(e => e.Extrcpdat0)
                    .HasColumnName("EXTRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fbuflg0).HasColumnName("FBUFLG_0");

                entity.Property(e => e.Fcscpr0)
                    .HasColumnName("FCSCPR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Fcscstpur0)
                    .HasColumnName("FCSCSTPUR_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Fcyadd0)
                    .IsRequired()
                    .HasColumnName("FCYADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Invqtypuu0)
                    .HasColumnName("INVQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Invqtystu0)
                    .HasColumnName("INVQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Invrcpnbr0).HasColumnName("INVRCPNBR_0");

                entity.Property(e => e.Itmref0)
                    .IsRequired()
                    .HasColumnName("ITMREF_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Itmrefbps0)
                    .IsRequired()
                    .HasColumnName("ITMREFBPS_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Itmrefori0)
                    .IsRequired()
                    .HasColumnName("ITMREFORI_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Lasinvdat0)
                    .HasColumnName("LASINVDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Lasrcpdat0)
                    .HasColumnName("LASRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Likqtycoe0)
                    .HasColumnName("LIKQTYCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Linamt0)
                    .HasColumnName("LINAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Linamtcpr0)
                    .HasColumnName("LINAMTCPR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Linati0)
                    .HasColumnName("LINATI_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Linatiamt0)
                    .HasColumnName("LINATIAMT_0")
                    .HasColumnType("numeric(27, 13)");

                entity.Property(e => e.Lincleflg0).HasColumnName("LINCLEFLG_0");

                entity.Property(e => e.Lincstpur0)
                    .HasColumnName("LINCSTPUR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Lininvflg0).HasColumnName("LININVFLG_0");

                entity.Property(e => e.Lininvnbr0).HasColumnName("LININVNBR_0");

                entity.Property(e => e.Linocndat0)
                    .HasColumnName("LINOCNDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Linocnflg0).HasColumnName("LINOCNFLG_0");

                entity.Property(e => e.Linocnnum0)
                    .IsRequired()
                    .HasColumnName("LINOCNNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Linprnflg0).HasColumnName("LINPRNFLG_0");

                entity.Property(e => e.Linpurtyp0).HasColumnName("LINPURTYP_0");

                entity.Property(e => e.Linrcpnbr0).HasColumnName("LINRCPNBR_0");

                entity.Property(e => e.Linrevnum0).HasColumnName("LINREVNUM_0");

                entity.Property(e => e.Linsta0).HasColumnName("LINSTA_0");

                entity.Property(e => e.Linstofcy0)
                    .IsRequired()
                    .HasColumnName("LINSTOFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Lintex0)
                    .IsRequired()
                    .HasColumnName("LINTEX_0")
                    .HasMaxLength(12);

                entity.Property(e => e.Lintyp0).HasColumnName("LINTYP_0");

                entity.Property(e => e.Linvou0)
                    .IsRequired()
                    .HasColumnName("LINVOU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Linweu0)
                    .IsRequired()
                    .HasColumnName("LINWEU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Mon0).HasColumnName("MON_0");

                entity.Property(e => e.Netcur0)
                    .IsRequired()
                    .HasColumnName("NETCUR_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Ocnlin0).HasColumnName("OCNLIN_0");

                entity.Property(e => e.Ocnseq0).HasColumnName("OCNSEQ_0");

                entity.Property(e => e.Ofs0)
                    .HasColumnName("OFS_0")
                    .HasColumnType("numeric(9, 4)");

                entity.Property(e => e.Orddat0)
                    .HasColumnName("ORDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ori0).HasColumnName("ORI_0");

                entity.Property(e => e.Pohfcy0)
                    .IsRequired()
                    .HasColumnName("POHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Pohnum0)
                    .IsRequired()
                    .HasColumnName("POHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Pohtyp0).HasColumnName("POHTYP_0");

                entity.Property(e => e.Poplin0).HasColumnName("POPLIN_0");

                entity.Property(e => e.Poqlnk0)
                    .IsRequired()
                    .HasColumnName("POQLNK_0")
                    .HasMaxLength(16);

                entity.Property(e => e.Poqseq0).HasColumnName("POQSEQ_0");

                entity.Property(e => e.Ppdlin0).HasColumnName("PPDLIN_0");

                entity.Property(e => e.Pqhnum0)
                    .IsRequired()
                    .HasColumnName("PQHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Prhfcy0)
                    .IsRequired()
                    .HasColumnName("PRHFCY_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Ptdlin0).HasColumnName("PTDLIN_0");

                entity.Property(e => e.Pthnum0)
                    .IsRequired()
                    .HasColumnName("PTHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Puu0)
                    .IsRequired()
                    .HasColumnName("PUU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Qtypuu0)
                    .HasColumnName("QTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtystu0)
                    .HasColumnName("QTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyuom0)
                    .HasColumnName("QTYUOM_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyvou0)
                    .HasColumnName("QTYVOU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Qtyweu0)
                    .HasColumnName("QTYWEU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rcpcleflg0).HasColumnName("RCPCLEFLG_0");

                entity.Property(e => e.Rcpqtypuu0)
                    .HasColumnName("RCPQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Rcpqtystu0)
                    .HasColumnName("RCPQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Reacstpur0)
                    .HasColumnName("REACSTPUR_0")
                    .HasColumnType("numeric(19, 5)");

                entity.Property(e => e.Retqtypuu0)
                    .HasColumnName("RETQTYPUU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Retqtystu0)
                    .HasColumnName("RETQTYSTU_0")
                    .HasColumnType("numeric(28, 13)");

                entity.Property(e => e.Retrcpdat0)
                    .HasColumnName("RETRCPDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Revcod0)
                    .IsRequired()
                    .HasColumnName("REVCOD_0")
                    .HasMaxLength(1);

                entity.Property(e => e.Scoadd0)
                    .IsRequired()
                    .HasColumnName("SCOADD_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Sddlin0).HasColumnName("SDDLIN_0");

                entity.Property(e => e.Sdhnum0)
                    .IsRequired()
                    .HasColumnName("SDHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Sohnum0)
                    .IsRequired()
                    .HasColumnName("SOHNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Soplin0).HasColumnName("SOPLIN_0");

                entity.Property(e => e.Soqseq0).HasColumnName("SOQSEQ_0");

                entity.Property(e => e.Stcnum0)
                    .IsRequired()
                    .HasColumnName("STCNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Stu0)
                    .IsRequired()
                    .HasColumnName("STU_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Uom0)
                    .IsRequired()
                    .HasColumnName("UOM_0")
                    .HasMaxLength(3);

                entity.Property(e => e.Uomflg0).HasColumnName("UOMFLG_0");

                entity.Property(e => e.Uompuucoe0)
                    .HasColumnName("UOMPUUCOE_0")
                    .HasColumnType("numeric(18, 7)");

                entity.Property(e => e.Upddat0)
                    .HasColumnName("UPDDAT_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Upddattim0)
                    .HasColumnName("UPDDATTIM_0")
                    .HasColumnType("datetime");

                entity.Property(e => e.Updtick0)
                    .HasColumnName("UPDTICK_0")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Updusr0)
                    .IsRequired()
                    .HasColumnName("UPDUSR_0")
                    .HasMaxLength(5);

                entity.Property(e => e.Useplc0)
                    .IsRequired()
                    .HasColumnName("USEPLC_0")
                    .HasMaxLength(30);

                entity.Property(e => e.Vcrlinori0).HasColumnName("VCRLINORI_0");

                entity.Property(e => e.Vcrnumori0)
                    .IsRequired()
                    .HasColumnName("VCRNUMORI_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Vcrseqori0).HasColumnName("VCRSEQORI_0");

                entity.Property(e => e.Vcrtypori0).HasColumnName("VCRTYPORI_0");

                entity.Property(e => e.Wee0).HasColumnName("WEE_0");

                entity.Property(e => e.Wipnum0)
                    .IsRequired()
                    .HasColumnName("WIPNUM_0")
                    .HasMaxLength(20);

                entity.Property(e => e.Wipsta0).HasColumnName("WIPSTA_0");

                entity.Property(e => e.Wiptyp0).HasColumnName("WIPTYP_0");

                entity.Property(e => e.Yea0).HasColumnName("YEA_0");
            });

            modelBuilder.HasSequence<int>("SEQ_ABANK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABICOND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIDATMRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIDATWRH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIDIM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIDIMFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIHIERA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIPRFUSR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREGDES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREGORG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREPORT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREPORTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREPORTID")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABAGG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABDAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABIND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABLNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITRAUNV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACALCUL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACCCOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACCES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACHANGE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLACOL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLALNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAMAP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAMET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAMETSTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAOPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAPARDEF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAPARFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLASSE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACODNUM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACONSTANT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACONSULT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACONTEXT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTCODPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTION")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTIV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELETE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADICADX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADICTRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCBLB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCCLB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCFNC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCUMENT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOVALAUS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOVALGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOVALHIS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AELT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AELTLINK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AENCHAINE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AENTREE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AESPION")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AEXPV3")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AEXPV3D")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFCTEXE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFCTFCT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFCTFCY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFCTPRF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFONCTION")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AGLOBVAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AGRPCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AGRPFCY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AHISTO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AHISTOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AINDEX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AITRLNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALINK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTEC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTEH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALNKSUB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALOGIN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALSTRD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMAINT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMEMO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMENLOC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMENUSER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMETUTI")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMOTCLE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMSK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMSKACT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMSKPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMSKZON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ANAVCRE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ANAVFIL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ANAVIG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ANNUAIRE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJBUR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJBURMOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMPB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMPC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMPD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMPE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJLNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJLST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJPROP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJTAB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJTXT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJTXTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APARIMPEXP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APATCH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APATCHMOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APATCHTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APLCOM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APLCOMH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APLLCK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APLSTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APORTMOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APORTTAB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APORTUSER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APORTVIG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APRINTDES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APRINTER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APROCESSUS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APROCTEXTE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APROFIL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APROMEN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APRTAUS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APRTBRW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APTLPAGE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APTLVW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ARCHPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ARCHPARE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ARCHPARU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ARCHPARW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREFAML")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREFTXT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTZ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AROLE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWBLC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWCOL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWEXPPRO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWLNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWMENU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWMET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWOPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWPARMET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWSEC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASTYLE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASTYLEC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASTYLEP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASUBPROG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASUBPROGD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABAUD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABDIV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABIND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABLE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABTAB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABZON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATEXMOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATEXTE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATEXTEXCEP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATEXTRA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATMPTRA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATRANSAC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPELNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPELPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPEPRO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPERPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPERUL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUDITBI")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUDITH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUDITL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AURL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUSRBPR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUTILIS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVALATT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVALNUM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVARLOC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWIND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWTAB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVOCAB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVOLUME")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVVTEXTRA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVWTEXTRA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWEBSERDES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWEBSERVIC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWINBOUT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWINBRO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWINDOW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWINPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKHISDES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKHISJOI")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKHISMES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKHISSUI")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKLNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPARC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPARF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPARH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPARX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKREG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKREGVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKTAB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKTRN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKTRND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKUSR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWSDL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWSDL1")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTACT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTADVPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTBASKED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTDOC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTBLC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTBLCW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTDLK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTSPE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTENT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTFCY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTFRM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTINT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTLINES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTMEN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTMES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPAG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPOOWEB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPRF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPRFUSR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPRFX3")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTTEST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALAGEEOY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALANA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALANCE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALCONSO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALPRECSL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BANK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BANKPOSD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BANREC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BANRECD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BAPPOINT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BATCH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BENCHTRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BETCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BETCPYL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BGRBAN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BID")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILLLADC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILLLADD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILLLADH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILLLADWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILSTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BITMPPORDERP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BITMPPORDERQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BITMPSORDERP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BITMPSORDERQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BLACMM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BLAQTY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BLOBEXPENSES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BNKTRSIMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOMD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOMPRN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOMRET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOMWUS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOX1099")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BP1096PRN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BP1099BEGBAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BP1099PRN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPADDRESS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPARTNER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCARRIER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCCATEG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCINVLIG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCINVLIGA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCINVVAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCUSTMVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCUSTOMER")
                .StartsAt(43)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPDLVCUST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPEXCEPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPMISC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPMISCCGF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099GEN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099MNT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099PAY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099PAYAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099PAYBB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSCATEG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSHISUPLN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSHISUPP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSINVLIG")
                .StartsAt(17)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSINVLIGA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSUPPLIER")
                .StartsAt(7)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSUPPMVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BRDKEY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BSEINQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDFORCAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDODS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDPURAUD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDVARCAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDVER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CAAUZ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CACCE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CACCEDEF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CADIEDEF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CADISTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CADSP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CALCDBG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CALLATTEMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CAPVAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CARAREA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CARPRICE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CASHING")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CBLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CBNDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CBNHEA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CBNWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMACTION")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMAPPROVER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCHGREQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRDESC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRNOTES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRORIGC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRORIGE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRORIGI")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRORIGS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRREAGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRREAMON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRSEV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRSEVGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRSEVMON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRSTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRVERIMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIASTAD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIASTAM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIASTAS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPBOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPBOH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPFOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPFOH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPITM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPITMDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPMFGD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPMFGH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPPOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPPOH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPPRD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPPRH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPROD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPROH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSCD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSCH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSOH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSQD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSQH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMPLAND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMPLANH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMPSTATUS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMREJDSC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDFCOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDFCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDFFCY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDFPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDIADSP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CFODUDDATE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CFOMANMVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CFOTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CHQBOK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CHQNAM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CHQNUM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CIGDEF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CIGFXDSOR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CIGREX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CIGREXSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CMARKETING")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COFAWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COMPANY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTACT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTACTCRM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTAINER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTAINERD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTAMT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTAMTX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTCARE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTCOV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTEXT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTIDX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTITM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTPBL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTQUAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTREW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTREWX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTSERV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTSERVX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTTEMPL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CORREP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CORRESPOND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CPTANALIN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CPTFOOTLNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CRMCLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CRMTRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CRMTRSVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFPARH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFPARL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFRES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFRESD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFRESH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFRESL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CTRLNIVW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUMBAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUMBLA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUNLISDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUNLISTE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUNSESSION")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DADCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DADFCY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DCLVAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DCLVATPAY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEBPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEBREGNAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEFVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEPREC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEPRECARC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEPSIMU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DIAHOU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DIETRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DIETRSXX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DKSKEY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWBPREXC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWPAORD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWPRODPACKD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWPRODPACKH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWQTY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWQUOTAD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWQUOTAH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWSCHEME")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWWEIGHT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DOOBPCINT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DOOBPCLNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DPRMOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DPRMODOPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DPRMODRAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ECCLOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ECCSTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ECCVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ECCVAL3")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDIFRM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDIPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDISEG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDITRBK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDTDADSU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDTTDS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASACT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASAFFAGE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCFS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCHGIMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCHGPPL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCNL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASIML")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASISS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASLNKCNL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASMTC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASREEVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASRURST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASRUSTP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASVATREG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EGRTCASH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EGRTCNL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EGRTCRB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EGRTCRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEAACTU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEACNL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEACRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEAEND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEAPAY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEARPU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEATRM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELOFCIM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELOFCNL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELOFVATREG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EMODELE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ESCSRE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EURSRVDCL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EURSRVDCLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EVCRESULT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EVENTTRNP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EXKWORD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EXPARAM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EXPENSES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EXPENSESH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FACGROUP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FACILITY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FACTOR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FAMPB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FAMPBQUE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FAMPBREP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FASACCCOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FASFAM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FIEDIC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FIEDICFIE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FILTDS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FISCALYEAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FISCYEAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FRECST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FREFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FRTCLS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FRTCOMCOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI002")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI003")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI004")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI005")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI006")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI007")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI008")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI009")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI010")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI011")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FUP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FUPGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FUPTXT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXBLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDASSETS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDLIFL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDLOFGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDMVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDMVTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCCLS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCCODE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCCODLIG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCDEF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCDENCOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCDIM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCDUDATE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCENTRY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCENTRYA")
                .StartsAt(770)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCENTRYD")
                .StartsAt(4650)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCFIX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCFIYENA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCFIYEND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCGRUPYM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCINTCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCINTCPYA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCINTCPYD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCOUNT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCOUNTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCPYM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCPYMLIK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCPYMPRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCTMPA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCTMPD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAJOUSTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAPARBSE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAPARDUM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTACE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTACED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTACEF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTRCTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTRCVCR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GBAGSCR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCACCOA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCCEGRUPYM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCCEPYM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCCEPYMLIK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCCEPYMPRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCLCACEPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCOA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCOMMIT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCOMMITD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCOMMITX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIAACC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIAACCD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIAENTRY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIAENTRYD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDUDSCR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GENTLOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GENTLOTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GENTLOTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GENTLOTH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GFUPSCR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GJOUCOA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GJOURNAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GLED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRANTS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPACEMTC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPAUTACE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPCUR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPDSP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPSAC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTABACC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTABACC2")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTABACC3")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTMPMTC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTYPACCENT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GVARCODPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GVARGAU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GVARPARGAU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GVARPARVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD1CLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD2CLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD3CLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD4CLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD5CLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD6CLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD7CLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD8CLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HDKTASK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HDKTASKINV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HDKTRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HDKTRSVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTOAMD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTOCRM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTODUD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTOMDT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTOOMM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HON281")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HON281D")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HONLIN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HONPRV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HOROITM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HTMMAITXT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_IDTCCE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ILOGIMG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_IMCDETPRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_IMURANO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_IMURANOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INCOTERM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INCOTERMD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INTCOFLO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INTERVEN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INVDACPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCDETPRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCMAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCMATCH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCNAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCWST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCWSTW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITFITC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMABCWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMACGGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMBOM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMBPC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMBPS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCATEG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCOMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCOST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCPPLNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCPTVER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCUSNOM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMFACILIT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMMASTER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMMVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMMVTHIS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMSALES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMWRH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_KPYIMPDTLA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LABELPRN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LASTCUSMVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LASTSUPMVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LAYOUTFAS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEABILBOOK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEAD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEASE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGADI909")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGAGRPLE0")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGAGRPLE1")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDAGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDAPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDASEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDAYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDAZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGRPSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTEGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTEPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTESEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTEYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTEZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGJOU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGJOUGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGJOUPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGJOUSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDACPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDAPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDASEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDAYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDAZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTEC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTRE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTRECPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTREPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTRESEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTREYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTREZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVI")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVICPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVIPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVISEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVIYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVIZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTDEB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTPAY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LNKCPTABD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LNKCPTABX3")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LSTPRDWAS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LTAPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LTAVCR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MACHINES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MACITN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MACWARREQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MAILING")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MAILXML")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MAILXMLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MANDATE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARASSDEF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARASSREP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARDEF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARDEFVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARREPSEC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARSCT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MATCHCODE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MATCHTOL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MATCSTW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MEDIA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MEMFOR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MESPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCDETPRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCMAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCNAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCPRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCPRTNAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCSCRAP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCTYPREL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCWST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGANL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGCOST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGHEAD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGHEADTRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGITM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGITMTRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGMAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGMATTRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGOPE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGOPETRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGPRN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGTRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGVERSION")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGWIP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MKGLEVEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MKGOPG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MKGQUR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MKGQURPPL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MMSDEFVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MMSPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTCAUTO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTCBATCH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTCGAUTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTKCRDASW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTOHEAD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTOLINK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_NETAUTO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_NOTCATEG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_NOTE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OMMRESULT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OMMRPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPERATIONS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPOR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORCPP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORCRM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORPJM")
                .StartsAt(50)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORSBB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORSTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORSTB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDCOMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDCOV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDERS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDOOPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDOPPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OVENAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OVERHEAD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARESC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAREVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAREVTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARFLUX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARFLUXDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARJAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARLDAP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARMRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARMTO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARSTA1")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARSTA2")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARSTALIG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARSTOACC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARTAXUSA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARTRZL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARTRZLDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARWIPACC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARWIPACCS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYACCNUM")
                .StartsAt(13)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYACCNUMD")
                .StartsAt(13)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYFRM")
                .StartsAt(13)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYLOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMENTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMENTD")
                .StartsAt(55)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMENTH")
                .StartsAt(14)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMTCTMP")
                .StartsAt(13)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMTCTMP2")
                .StartsAt(13)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYORDER")
                .StartsAt(13)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDBPGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDBPGRPD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDCONFIG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDCONFIGD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDECOCOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDECODITM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDGEN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDGEND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDUICONF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDUICONFD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PDPDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PDPHEA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PERIOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PFOOTINV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PHONECALL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PHONING")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIMPL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIMPLIMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIMPLSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PINVOICE")
                .StartsAt(15)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PINVOICED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PINVOICEV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITCOUNT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITDEB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITDEBD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITSDHSOQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITSOHSOQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIVOTS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIVZON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMAFF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMAUS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDLIG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDPRO0")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDPROG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDTREE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDTRQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDTRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMCLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMCOSTCTR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMCOSTDAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMDE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMFINCTORPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMFINOVRRPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPEAFF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPPAUS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPPAUSA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPPAUSB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPPPAF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSALITMD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSCCT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSOLITMD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSOLITMH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSOLITMO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTASTREE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTENT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTIMEMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTIMEMPH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKCAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKDEP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKITM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKOPE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRCA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRCO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRCP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRCT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRFUL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRFULU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PLGMKG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PLGOPG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PLMDEFVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PLMPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_POOL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDER")
                .StartsAt(132)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDERC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDERP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDERQ")
                .StartsAt(183)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDITM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_POSCOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPREASON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRICCONF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRICFICH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRICLINK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRICLIST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRIVARWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PQUOTAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PQUOTATD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PQUOTATF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRECEIPT")
                .StartsAt(174)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRECEIPTD")
                .StartsAt(157)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREQUIS")
                .StartsAt(8)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREQUISA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREQUISD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREQUISO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREREPORT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRESP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRESPD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRESTCOV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRETURN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRETURND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRICSTRUCT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRMDADSU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PROPLN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PROPLNH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PROROG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PROROGPCE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRTSCRWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PURTRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PVCRFOOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PVCRVAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKORDERS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPNH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPOC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPOP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPOQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPQF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPTH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKSTT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PYHCAS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PYRAPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYCRD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYCRDASW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYCRDNQA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYCRDQST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QUEUE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QURCRI")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QURCRIVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QUREXTRACT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QURTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RCRINVOICE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_REACHPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RELBANK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RELBANKREM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RELMT940D")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_REPSEC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RESOURCES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RESRES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RITENZIONE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ROUOPE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ROUOPESTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ROUSCD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ROUTING")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RPLWST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RUBASSDEF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RUBASSDEFP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RUBASSVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RUBASSVALP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RVACOED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RVACOEH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RVMVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SAFTPTTMP1")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SAITRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SAITRSDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SALESREP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SALESTAX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SALTRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SBGEO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SBODLINK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SBPBL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCHEDULING")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCHGD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCHGH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCMAPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCMDPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOHEAD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOITM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOMAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOSRV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOTRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCPASW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCPQST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCPQSTCND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCRIPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SDELIVERY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SDELIVERYD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEARESULT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEASON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEAUTH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEBPC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SECACT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SECPST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SECPSTSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SELCMG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SELCMGLIS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SELSSP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SELSSPCPN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEPRC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SERREQUEST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SETMAC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SETMACCPN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SETXN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFANAPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFOOTINV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTINDREF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTSHIFT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTTEM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTTEMH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTTXN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTTXNH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SHIPDOC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SHIPMENT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SHIPMENTD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SHIPTRACK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINDTP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINDVL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINFYD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINLTP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINSTN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINCDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINCENT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINVOICE")
                .StartsAt(16)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINVOICED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINVOICEV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIVTODUD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SLOTMD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SLOTMH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SMVTD")
                .StartsAt(75)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SMVTDVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SMVTH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SOI")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SOLRESULT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SOLUTION")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SORDER")
                .StartsAt(13)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SORDERC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SORDERP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SORDERQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPACK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPACKD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPPRTCONF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPREASON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICCONF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICFICH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICINCR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICLINK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICLIST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICPRTQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SQUOTE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SQUOTED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SREMAC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SREMACCPN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRESAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRESTAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRETEMPL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRETURN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRETURND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STATPRV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STJADJ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STJADJLOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STJTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STKMVTADJ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STKMVTITC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STKREGWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STKTRS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOACCPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOALL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOCK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOCOST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOJOU")
                .StartsAt(418)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOJOUOVE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOJOUVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOC")
                .StartsAt(315)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOCAFF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOCRES")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOTFCY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOMVTCOST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPRED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPREH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPRELIS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPRELISW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPREW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOQLYD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOQLYH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOQLYSMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOQUAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOREO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOSER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOSRG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOSRGW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOSYNW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOTRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOTRKWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOVALCUM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOVALWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOWIPW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SUBCONT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SVCRFOOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SVCRINVCND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SVCRINVCNDD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SVCRVAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SWRKDLV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SWRKINV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SWRKINVCND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SYNCDATA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SYNCLINK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SYNCPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TAAAXXX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABACCINT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABACCLIK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABALLRUL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABBOMALT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABBUDTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCHANGE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCODEDT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOEFF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCONTAINER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOSTMET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOSTMVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOUAFF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOUNTRY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCTL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCUR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABDEPAGIO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABEECNAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABEECSCH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABEXPENS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFILBAN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFILCASH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFILTDS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFOR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFORLEG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABGEOCOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABINVCND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABINVCNDLIN")
                .StartsAt(13)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABLAN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABLINCFG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABLOCTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABMAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABMODELIV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABMSG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPACKAGE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPAM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPAYTERM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPAYTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPIVTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPLACE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPLACETIME")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPNHTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPRECOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPRTMOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABRATVAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABREOPOL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABROUALT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABROUND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSAFSTO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSCA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSDHTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSGHTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSIVTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSOHTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSQHTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSRHTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSTASTO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSTORUL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSUBDIV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABTNHTYP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABUNAVAIL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABUNIT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVAC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVACBPR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVACITM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVATEXE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABWEEDIA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABWIPSTO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABWRKCTR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TACONTAINERC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TASK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TAUTILIS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TAXLINK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TBASKET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TBASKETD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TCBLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TCCLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TDSPRV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TDUPDCLC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TEXCLOB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TEXCPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TGRLIS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TGRLISFIE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TGRLISLNK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TGRSSP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TIMEADJUST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TIMETRANS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TIMEZONEINFO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TITMLINK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TITMMASTER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMP2054")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMP2055")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMP2855")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPARPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPBLA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCNSBAN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCNVECAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCPTDTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCRPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCSRQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPDERO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPDFD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPEXPENSE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFAS1PAGE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFAS246G")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFASLIST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFUP0")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFUP1")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFUP2")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFUPCMT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPKRPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPLEARNT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPLISLOF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPLOFGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASFA2")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASFAS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASLCK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASLEA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASLOF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPAYDUD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPAYDUD2")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPAYTOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPLNFAS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPRPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPREEVAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPSIMDERO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPSITU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPSRPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPTCHANGE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRACKTPLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRACKTPLH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRADESHOW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRANNOTED")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRANNOTEH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRANSPORT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRCABX3")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRCVCRDOC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSAC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXTBOL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TYPACE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TYPACEINT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TYPACELEG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UNFILWRK")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UNITOFTIME")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UNPAID")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UPORDER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UPORDERC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UPORDERP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UPORDERQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VATCLS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VATHIS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VBAP09REP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VBAPPOINT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VBASKETD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VCRMACTIVITY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VCUSSEA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VIDLECUST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VRP1")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSORDER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSORDERC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSORDERP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSORDERQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSQH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VTOPBAP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VTOPCAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VTOPMARGIN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VWSCO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WAREHOUSE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WARFLYER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WARREQCPN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WARREQUEST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WCUNLISDET")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPCOST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPRESW")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPSCPM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPSCPO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPTMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WORKCOST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WORKLOAD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WORKSTATIO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WRKPURFCS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WRKSTOCNS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WRKSTOPER")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTANL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTOALL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTOLOTFCY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTOQLYD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTOREO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABANK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABICOND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIDATMRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIDATWRH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIDIM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIDIMFLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIHIERA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIPRFUSR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREGDES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREGORG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREPORT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREPORTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABIREPORTID")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABAGG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABDAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABFLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABIND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITABLNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABITRAUNV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ABLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACALCUL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACCCOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACCES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACHANGE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLACOL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAFLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLALNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAMAP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAMET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAMETSTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAOPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAPARDEF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLAPARFLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLASSE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACODNUM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACONSTANT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACONSULT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACONTEXT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTCODPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTION")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTIV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ACTPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELETE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADELIVERT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADICADX")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADICTRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCBLB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCCLB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCFLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCFNC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOCUMENT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOVALAUS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOVALGRP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ADOVALHIS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AELT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AELTLINK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AENCHAINE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AENTREE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AESPION")
                .StartsAt(95020)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AEXPV3")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AEXPV3D")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFCTEXE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFCTFCT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFCTFCY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFCTPRF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AFONCTION")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AGLOBVAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AGRPCPY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AGRPFCY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AHISTO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AHISTOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AINDEX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AITRLNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALINK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTEC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTEH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTEL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALISTET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALNKSUB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALOGIN")
                .StartsAt(18730)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ALSTRD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMAINT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMEMO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMENLOC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMENUSER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMETUTI")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMOTCLE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMSK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMSKACT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMSKPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AMSKZON")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ANAVCRE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ANAVFIL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ANAVIG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ANNUAIRE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJBUR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJBURMOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMPB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMPC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMPD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTMPE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJEXTR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJLNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJLST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJPROP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJSEL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJTAB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJTXT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AOBJTXTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APARIMPEXP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APATCH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APATCHMOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APATCHTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APLCOM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APLCOMH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APLLCK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APLSTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APORTMOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APORTTAB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APORTUSER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APORTVIG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APRINTDES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APRINTER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APROCESSUS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APROCTEXTE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APROFIL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APROMEN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APRTAUS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APRTBRW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APTLPAGE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_APTLVW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ARCHPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ARCHPARE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ARCHPARU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ARCHPARW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREFAML")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREFTXT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORT")
                .StartsAt(73)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AREPORTZ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AROLE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWBLC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWCOL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWEXPPRO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWFLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWLNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWMENU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWMET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWOPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWPARMET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASHWSEC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASTYLE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASTYLEC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASTYLEP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASUBPROG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ASUBPROGD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABAUD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABDIV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABIND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABLE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABTAB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATABZON")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATEXMOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATEXTE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATEXTEXCEP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATEXTRA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATMPTRA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATRANSAC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPELNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPELPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPEPRO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPERPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ATYPERUL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUDITBI")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUDITH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUDITL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AURL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUSRBPR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AUTILIS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVALATT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVALNUM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVARLOC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWFLD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWIND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVIEWTAB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVOCAB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVOLUME")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVVTEXTRA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AVWTEXTRA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWEBSERDES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWEBSERVIC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWINBOUT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWINBRO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWINDOW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWINPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKHISDES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKHISJOI")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKHISMES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKHISSUI")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKLNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPARC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPARF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPARH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKPARX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKREG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKREGVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKTAB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKTRN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKTRND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWRKUSR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWSDL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AWSDL1")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTACT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTADVPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTBASKED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTDOC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTBLC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTBLCW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTDLK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTFLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTELTSPE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTENT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTFCY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTFRM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTINT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTLINES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTMEN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTMES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPAG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPOOWEB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPRF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPRFUSR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTPRFX3")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_AYTTEST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALAGEEOY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALANA")
                .StartsAt(3648)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALANCE")
                .StartsAt(2120)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALCONSO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BALPRECSL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BANK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BANKPOSD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BANREC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BANRECD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BAPPOINT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BATCH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BENCHTRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BETCPY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BETCPYL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BGRBAN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BID")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILLLADC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILLLADD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILLLADH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILLLADWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BILSTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BITMPPORDERP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BITMPPORDERQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BITMPSORDERP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BITMPSORDERQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BLACMM")
                .StartsAt(3302)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BLAQTY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BLOBEXPENSES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BNKTRSIMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOMD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOMPRN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOMRET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOMWUS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BOX1099")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BP1096PRN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BP1099BEGBAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BP1099PRN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPADDRESS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPARTNER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCARRIER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCCATEG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCINVLIG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCINVLIGA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCINVVAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCUSTMVT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPCUSTOMER")
                .StartsAt(70)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPDLVCUST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPEXCEPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPMISC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPMISCCGF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099GEN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099MNT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099PAY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099PAYAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPS1099PAYBB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSCATEG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSHISUPLN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSHISUPP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSINVLIG")
                .StartsAt(44)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSINVLIGA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSUPPLIER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BPSUPPMVT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BRDKEY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BSEINQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDFORCAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDODS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDPURAUD")
                .StartsAt(2637)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDVARCAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_BUDVER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CAAUZ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CACCE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CACCEDEF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CADIEDEF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CADISTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CADSP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CALCDBG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CALLATTEMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CAPVAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CARAREA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CARPRICE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CASHING")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CBLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CBNDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CBNHEA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CBNWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMACTION")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMAPPROVER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCHGREQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRDESC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRNOTES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRORIGC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRORIGE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRORIGI")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRORIGS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRREAGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRREAMON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRSEV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRSEVGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRSEVMON")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRSTA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMCRVERIMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIASTAD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIASTAM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIASTAS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPBOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPBOH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPFOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPFOH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPITM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPITMDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPMFGD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPMFGH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPPOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPPOH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPPRD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPPRH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPROD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPROH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSCD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSCH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSOH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSQD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMIMPSQH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMPLAND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMPLANH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMPSTATUS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CCMREJDSC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDFCOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDFCPY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDFFCY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDFPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CDIADSP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CFODUDDATE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CFOMANMVT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CFOTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CHQBOK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CHQNAM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CHQNUM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CIGDEF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CIGFXDSOR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CIGREX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CIGREXSEL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CMARKETING")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COFAWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COMPANY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTACT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTACTCRM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTAINER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTAINERD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTAMT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTAMTX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTCARE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTCOV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTEXT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTIDX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTITM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTPBL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTQUAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTREW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTREWX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTSERV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTSERVX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CONTTEMPL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CORREP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CORRESPOND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_COSTSTCR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CPTANALIN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CPTFOOTLNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CRMCLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CRMTRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CRMTRSVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFPARH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFPARL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFRES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFRESD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFRESH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CSFRESL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CTRLNIVW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUMBAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUMBLA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUNLISDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUNLISTE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_CUNSESSION")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DADCPY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DADFCY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DCLVAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DCLVATPAY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEBPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEBREGNAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEFVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEPREC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEPRECARC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DEPSIMU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DIAHOU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DIETRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DIETRSXX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DKSKEY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWBPREXC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWPAORD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWPRODPACKD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWPRODPACKH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWQTY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWQUOTAD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWQUOTAH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWSCHEME")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DMWWEIGHT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DOOBPCINT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DOOBPCLNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DPRMOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DPRMODOPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_DPRMODRAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ECCLOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ECCSTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ECCVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ECCVAL3")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDIFRM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDIPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDISEG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDITRBK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDTDADSU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EDTTDS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASACT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASAFFAGE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCFS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCHGIMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCHGPPL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCNL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASCRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASIML")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASISS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASLNKCNL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASMTC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASREEVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASRURST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASRUSTP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EFASVATREG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EGRTCASH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EGRTCNL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EGRTCRB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EGRTCRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEAACTU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEACNL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEACRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEAEND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEAPAY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEARPU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELEATRM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELOFCIM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELOFCNL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ELOFVATREG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EMODELE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ESCSRE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EURSRVDCL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EURSRVDCLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EVCRESULT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EVENTTRNP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EXKWORD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EXPARAM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EXPENSES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_EXPENSESH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FACGROUP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FACILITY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FACTOR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FAMPB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FAMPBQUE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FAMPBREP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FASACCCOD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FASFAM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FIEDIC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FIEDICFIE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FILTDS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FISCALYEAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FISCYEAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FRECST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FREFLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FRTCLS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FRTCOMCOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI002")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI003")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI004")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI005")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI006")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI007")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI008")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI009")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI010")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FTI011")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FUP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FUPGRP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FUPTXT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXBLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDASSETS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDLIFL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDLOFGRP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDMVT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_FXDMVTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCCLS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCCODE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCCODLIG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCDEF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCDENCOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCDIM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCDUDATE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCENTRY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCENTRYA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCENTRYD")
                .StartsAt(18070)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCFIX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCFIYENA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCFIYEND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCGRUPYM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCINTCPY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCINTCPYA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCINTCPYD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCOUNT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCOUNTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCPYM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCPYMLIK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCPYMPRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCTMP")
                .StartsAt(1804)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCTMPA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACCTMPD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GACM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAJOUSTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAPARBSE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAPARDUM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTACE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTACED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTACEF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTRCTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GAUTRCVCR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GBAGSCR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCACCOA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCCEGRUPYM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCCEPYM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCCEPYMLIK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCCEPYMPRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCLCACEPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCOA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCOMMIT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCOMMITD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GCOMMITX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIAACC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIAACCD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIAENTRY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIAENTRYD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDIE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GDUDSCR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GENTLOT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GENTLOTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GENTLOTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GENTLOTH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GFUPSCR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GJOUCOA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GJOURNAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GLED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRANTS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPACEMTC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPAUTACE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPCUR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPDSP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GRPSAC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTABACC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTABACC2")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTABACC3")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTMPMTC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GTYPACCENT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GVARCODPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GVARGAU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GVARPARGAU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_GVARPARVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD1CLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD2CLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD3CLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD4CLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD5CLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD6CLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD7CLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HD8CLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HDKTASK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HDKTASKINV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HDKTRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HDKTRSVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTOAMD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTOCRM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTODUD")
                .StartsAt(4358)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTOMDT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HISTOOMM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HON281")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HON281D")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HONLIN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HONPRV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HOROITM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_HTMMAITXT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_IDTCCE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ILOGIMG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_IMCDETPRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_IMURANO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_IMURANOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INCOTERM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INCOTERMD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INTCOFLO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INTERVEN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_INVDACPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCDETPRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCMAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCMATCH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCNAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCWST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITCWSTW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITFITC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMABCWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMACGGRP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMBOM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMBPC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMBPS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCATEG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCOMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCOST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCPPLNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCPTVER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMCUSNOM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMFACILIT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMMASTER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMMVT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMMVTHIS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMSALES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ITMWRH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_KPYIMPDTLA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LABELPRN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LASTCUSMVT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LASTSUPMVT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LAYOUTFAS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEABILBOOK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEAD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEASE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGADI909")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGAGRPLE0")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGAGRPLE1")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDAGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDAPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDASEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDAYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGCDAZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGFRTZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGRPSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTEGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTEPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTESEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTEYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGGTEZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICND")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGICNDZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGJOU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGJOUGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGJOUPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGJOUSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAM")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTAMZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDACPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDAPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDASEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDAYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTDAZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTEC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTECZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPTZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPVZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYGFY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTPYZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTRE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTRECPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTREPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTRESEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTREYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTREZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSC")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSCZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSDZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSOZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSQZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSV")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTSVZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVBZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVI")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVICPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVIPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVISEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVIYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVIZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTCPY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTDEB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTPAR")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTPAY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTSEL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTYGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LEGTVTZGRP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LNKCPTABD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LNKCPTABX3")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LSTPRDWAS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LTAPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_LTAVCR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MACHINES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MACITN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MACWARREQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MAILING")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MAILXML")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MAILXMLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MANDATE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARASSDEF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARASSREP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARDEF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARDEFVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARREPSEC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MARSCT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MATCHCODE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MATCHTOL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MATCSTW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MEDIA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MEMFOR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MESPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCDETPRT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCMAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCNAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCPRT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCPRTNAT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCSCRAP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCTYPREL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFCWST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGANL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGCOST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGHEAD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGHEADTRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGITM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGITMTRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGMAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGMATTRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGOPE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGOPETRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGPRN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGTRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGVERSION")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MFGWIP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MKGLEVEL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MKGOPG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MKGQUR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MKGQURPPL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MMSDEFVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MMSPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTCAUTO")
                .StartsAt(59)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTCBATCH")
                .StartsAt(701)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTCGAUTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTKCRDASW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTOHEAD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_MTOLINK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_NETAUTO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_NOTCATEG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_NOTE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OMMRESULT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OMMRPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPERATIONS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPOR")
                .StartsAt(222)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORCPP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORCRM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORPJM")
                .StartsAt(222)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORSBB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORSTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OPPORSTB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDCOMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDCOV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDERS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDOOPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ORDOPPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OVENAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_OVERHEAD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARESC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAREVT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAREVTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARFLUX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARFLUXDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARJAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARLDAP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARMRP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARMTO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARSTA1")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARSTA2")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARSTALIG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARSTOACC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARTAXUSA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARTRZL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARTRZLDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARWIPACC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PARWIPACCS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYACCNUM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYACCNUMD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYFRM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYLOT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMENTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMENTD")
                .StartsAt(7698)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMENTH")
                .StartsAt(1666)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMTCTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYMTCTMP2")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYORDER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PAYTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDBPGRP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDBPGRPD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDCONFIG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDCONFIGD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDECOCOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDECODITM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDGEN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDGEND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDUICONF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PBDUICONFD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PDPDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PDPHEA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PERIOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PFOOTINV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PHONECALL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PHONING")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIMPL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIMPLIMP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIMPLSEL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PINVOICE")
                .StartsAt(9)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PINVOICED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PINVOICEV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITCOUNT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITDEB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITDEBD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITSDHSOQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PITSOHSOQ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIVOTS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIVZON")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PIWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMAFF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMAUS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDLIG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDPRO0")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDPROG")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDTREE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDTRQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMBUDTRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMCLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMCOSTCTR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMCOSTDAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMDE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMFINCTORPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMFINOVRRPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPEAFF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPPAUS")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPPAUSA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPPAUSB")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMOPPPAF")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSALITMD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSCCT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSOLITMD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSOLITMH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMSOLITMO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTASTREE")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTENT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTIMEMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTIMEMPH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKCAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKDEP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKITM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKOPE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRCA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRCO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRCP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRCT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRFUL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PJMTSKTRFULU")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PLGMKG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PLGOPG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PLMDEFVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PLMPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_POOL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDER")
                .StartsAt(157)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDERC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDERP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDERQ")
                .StartsAt(208)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PORDITM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_POSCOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPREASON")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRICCONF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRICFICH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRICLINK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRICLIST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PPRIVARWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PQUOTAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PQUOTATD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PQUOTATF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRECEIPT")
                .StartsAt(193)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRECEIPTD")
                .StartsAt(182)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREQUIS")
                .StartsAt(41)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREQUISA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREQUISD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREQUISO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PREREPORT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRESP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRESPD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRESTCOV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRETURN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRETURND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRICSTRUCT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRMDADSU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PROPLN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PROPLNH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PROROG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PROROGPCE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PRTSCRWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PURTRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PVCRFOOT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PVCRVAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKORDERS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPNH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPOC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPOP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPOQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPQF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKPTH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PWRKSTT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PYHCAS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_PYRAPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYCRD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYCRDASW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYCRDNQA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYCRDQST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QLYWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QUEUE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QURCRI")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QURCRIVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QUREXTRACT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_QURTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RCRINVOICE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_REACHPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RELBANK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RELBANKREM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RELMT940D")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_REPSEC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RESOURCES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RESRES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RITENZIONE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ROUOPE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ROUOPESTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ROUSCD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_ROUTING")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RPLWST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RUBASSDEF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RUBASSDEFP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RUBASSVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RUBASSVALP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RVACOED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RVACOEH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_RVMVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SAFTPTTMP1")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SAITRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SAITRSDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SALESREP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SALESTAX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SALTRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SBGEO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SBODLINK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SBPBL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCHEDULING")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCHGD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCHGH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCMAPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCMDPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOHEAD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOITM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOMAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOSRV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCOTRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCPASW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCPQST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCPQSTCND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SCRIPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SDELIVERY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SDELIVERYD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEARESULT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEASON")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEAUTH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEBPC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SECACT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SECPST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SECPSTSEL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SELCMG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SELCMGLIS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SELSSP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SELSSPCPN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SEPRC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SERREQUEST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SETMAC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SETMACCPN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SETXN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFANAPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFOOTINV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTINDREF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTSHIFT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTTEM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTTEMH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTTXN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SFTTXNH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SHIPDOC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SHIPMENT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SHIPMENTD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SHIPTRACK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINDTP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINDVL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINFYD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINLTP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIFINSTN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINCDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINCENT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINVOICE")
                .StartsAt(47)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINVOICED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SINVOICEV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SIVTODUD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SLOTMD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SLOTMH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SMVTD")
                .StartsAt(1912)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SMVTDVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SMVTH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SOI")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SOLRESULT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SOLUTION")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SORDER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SORDERC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SORDERP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SORDERQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPACK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPACKD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPPRTCONF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPREASON")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICCONF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICFICH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICINCR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICLINK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICLIST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SPRICPRTQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SQUOTE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SQUOTED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SREMAC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SREMACCPN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRESAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRESTAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRETEMPL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRETURN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SRETURND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STATPRV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STJADJ")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STJADJLOT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STJTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STKMVTADJ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STKMVTITC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STKREGWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STKTRS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOACCPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOALL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOCK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOCOST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOJOU")
                .StartsAt(4514)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOJOUOVE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOJOUVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOC")
                .StartsAt(348)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOCAFF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOCRES")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOLOTFCY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOMVTCOST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPRED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPREH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPRELIS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPRELISW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOPREW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOQLYD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOQLYH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOQLYSMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOQUAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOREO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOSER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOSRG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOSRGW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOSYNW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOTRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOTRKWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOVALCUM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOVALWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_STOWIPW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SUBCONT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SVCRFOOT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SVCRINVCND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SVCRINVCNDD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SVCRVAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SWRKDLV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SWRKINV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SWRKINVCND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SYNCDATA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SYNCLINK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_SYNCPAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TAAAXXX")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABACCINT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABACCLIK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABALLRUL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABBOMALT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABBUDTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCHANGE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCODEDT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOEFF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCONTAINER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOSTMET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOSTMVT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOUAFF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCOUNTRY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCTL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABCUR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABDEPAGIO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABEECNAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABEECSCH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABEXPENS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFILBAN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFILCASH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFILTDS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFOR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABFORLEG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABGEOCOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABINVCND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABINVCNDLIN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABLAN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABLINCFG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABLOCTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABMAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABMODELIV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABMSG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPACKAGE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPAM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPAYTERM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPAYTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPIVTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPLACE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPLACETIME")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPNHTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPRECOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABPRTMOD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABRATVAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABREOPOL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABROUALT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABROUND")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSAFSTO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSCA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSDHTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSGHTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSIVTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSOHTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSQHTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSRHTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSTASTO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSTORUL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABSUBDIV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABTNHTYP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABUNAVAIL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABUNIT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVAC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVACBPR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVACITM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVAT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABVATEXE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABWEEDIA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABWIPSTO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TABWRKCTR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TACONTAINERC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TASK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TAUTILIS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TAXLINK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TBASKET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TBASKETD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TCBLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TCCLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TDSPRV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TDUPDCLC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TEXCLOB")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TEXCPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TGRLIS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TGRLISFIE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TGRLISLNK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TGRSSP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TIMEADJUST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TIMETRANS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TIMEZONEINFO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TITMLINK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TITMMASTER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMP2054")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMP2055")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMP2855")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPARPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPBLA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCNSBAN")
                .StartsAt(274)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCNVECAR")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCPTDTA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCRPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPCSRQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPDERO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPDFD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPEXPENSE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFAS1PAGE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFAS246G")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFASLIST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFUP0")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFUP1")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFUP2")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPFUPCMT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPKRPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPLEARNT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPLISLOF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPLOFGRP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASFA2")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASFAS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASLCK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASLEA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPMASLOF")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPAYDUD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPAYDUD2")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPAYTOT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPLNFAS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPPRPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPREEVAL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPSIMDERO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPSITU")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPSRPT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TMPTCHANGE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRACKTPLD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRACKTPLH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRADESHOW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRANNOTED")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRANNOTEH")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRANSPORT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRCABX3")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TRCVCRDOC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSA")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSAC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSV")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXSW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TXTBOL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TYPACE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TYPACEINT")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_TYPACELEG")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UNFILWRK")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UNITOFTIME")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UNPAID")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UPORDER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UPORDERC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UPORDERP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_UPORDERQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VATCLS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VATHIS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VBAP09REP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VBAPPOINT")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VBASKETD")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VCRMACTIVITY")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VCUSSEA")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VIDLECUST")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VRP1")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSORDER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSORDERC")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSORDERP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSORDERQ")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VSQH")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VTOPBAP")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VTOPCAL")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VTOPMARGIN")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_VWSCO")
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WAREHOUSE")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WARFLYER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WARREQCPN")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WARREQUEST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WCUNLISDET")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPCOST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPRESW")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPSCPM")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPSCPO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WIPTMP")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WORKCOST")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WORKLOAD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WORKSTATIO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WRKPURFCS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WRKSTOCNS")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WRKSTOPER")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTANL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTOALL")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTOLOTFCY")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTOQLYD")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();

            modelBuilder.HasSequence<int>("SEQ_WSTOREO")
                .StartsAt(40)
                .HasMin(1)
                .HasMax(2000000000)
                .IsCyclic();
        }
    }
}
